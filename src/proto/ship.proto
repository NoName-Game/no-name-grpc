syntax = "proto3";
import "proto/rarity.proto";
import "proto/ship_category.proto";
import "proto/ship_stats.proto";
import "proto/planet.proto";
option go_package = "proto";
package ship;

message Ship {
    uint32 ID = 1;
    string Name = 2;
    uint32 PlayerID = 3;
    uint32 RarityID = 5;
    rarity.Rarity Rarity = 6;
    uint32 ShipCategoryID = 7;
    ship_category.ShipCategory ShipCategory = 8;
    uint32 ShipStatsID = 9;
    ship_stats.ShipStats ShipStats = 10;
    bool Equipped = 11;
}

// GetShipRepairInfo
message GetShipRepairInfoRequest {
    uint32 ShipID = 1;
}
message GetShipRepairInfoResponse {
    message ShipRepairInfo {
        int32 RepairTime = 1;
        int32 QuantityResources = 2;
        uint32 Integrity = 3;
    }
    bool NeedRepairs = 1;
    ShipRepairInfo Partial = 2;
    ShipRepairInfo Full = 3;
}

// StartShipRepair
message StartShipRepairRequest {
    enum RapairTypeEnum {
        PARTIAL = 0;
        FULL = 1;
    }
    uint32 ShipID = 1;
    RapairTypeEnum RapairType = 2;
}
message StartShipRepairResponse {
    message RepairResources {
        uint32 ResourceID = 1;
        int32 Quantity = 2;
    }
     repeated RepairResources StartShipRepair = 1;
}

// EndShipRepair
message EndShipRepairRequest {
    uint32 ShipID = 1;
    StartShipRepairRequest.RapairTypeEnum RapairType = 2;
}
message EndShipRepairResponse {
    // Empty
}

// GetShipTravelInfo
message GetShipTravelInfoRequest {
    Ship Ship = 1;
}
message GetShipTravelInfo {
    planet.Planet  Planet = 1;
    double Distance = 2;
    int32 Time = 3;
    double Fuel = 4;
    uint32 Integrity = 5;
}
message GetShipTravelInfoResponse {
    repeated GetShipTravelInfo Info = 1;
}

// EndShipTravel
message EndShipTravelRequest {
    uint32 Integrity = 1;
    double Tank = 2;
    uint32 PlanetID = 3;
    uint32 ShipID = 4;
}
message EndShipTravelResponse {
    // Empty
}

// GetPlayerShips
message GetPlayerShipsRequest {
    uint32 PlayerID = 1;
}
message GetPlayerShipsResponse {
    repeated ship.Ship Ships = 1;
}

// GetPlayerShipEquipped
message GetPlayerShipEquippedRequest {
    uint32 PlayerID = 1;
}
message GetPlayerShipEquippedResponse {
    ship.Ship Ship = 1;
}
