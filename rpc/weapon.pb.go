// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: rpc/weapon.proto

package rpc

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Weapon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               uint32          `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name             string          `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	RawDamage        float32         `protobuf:"fixed32,3,opt,name=RawDamage,proto3" json:"RawDamage,omitempty"`
	PlayerID         uint32          `protobuf:"varint,4,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
	Equipped         bool            `protobuf:"varint,5,opt,name=Equipped,proto3" json:"Equipped,omitempty"`
	RarityID         uint32          `protobuf:"varint,6,opt,name=RarityID,proto3" json:"RarityID,omitempty"`
	Rarity           *Rarity         `protobuf:"bytes,7,opt,name=Rarity,proto3" json:"Rarity,omitempty"`
	WeaponCategoryID uint32          `protobuf:"varint,8,opt,name=WeaponCategoryID,proto3" json:"WeaponCategoryID,omitempty"`
	WeaponCategory   *WeaponCategory `protobuf:"bytes,9,opt,name=WeaponCategory,proto3" json:"WeaponCategory,omitempty"`
	Precision        float32         `protobuf:"fixed32,10,opt,name=Precision,proto3" json:"Precision,omitempty"`
	Penetration      float32         `protobuf:"fixed32,11,opt,name=Penetration,proto3" json:"Penetration,omitempty"`
	Potential        uint32          `protobuf:"varint,12,opt,name=Potential,proto3" json:"Potential,omitempty"`
}

func (x *Weapon) Reset() {
	*x = Weapon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_weapon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Weapon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Weapon) ProtoMessage() {}

func (x *Weapon) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_weapon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Weapon.ProtoReflect.Descriptor instead.
func (*Weapon) Descriptor() ([]byte, []int) {
	return file_rpc_weapon_proto_rawDescGZIP(), []int{0}
}

func (x *Weapon) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Weapon) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Weapon) GetRawDamage() float32 {
	if x != nil {
		return x.RawDamage
	}
	return 0
}

func (x *Weapon) GetPlayerID() uint32 {
	if x != nil {
		return x.PlayerID
	}
	return 0
}

func (x *Weapon) GetEquipped() bool {
	if x != nil {
		return x.Equipped
	}
	return false
}

func (x *Weapon) GetRarityID() uint32 {
	if x != nil {
		return x.RarityID
	}
	return 0
}

func (x *Weapon) GetRarity() *Rarity {
	if x != nil {
		return x.Rarity
	}
	return nil
}

func (x *Weapon) GetWeaponCategoryID() uint32 {
	if x != nil {
		return x.WeaponCategoryID
	}
	return 0
}

func (x *Weapon) GetWeaponCategory() *WeaponCategory {
	if x != nil {
		return x.WeaponCategory
	}
	return nil
}

func (x *Weapon) GetPrecision() float32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

func (x *Weapon) GetPenetration() float32 {
	if x != nil {
		return x.Penetration
	}
	return 0
}

func (x *Weapon) GetPotential() uint32 {
	if x != nil {
		return x.Potential
	}
	return 0
}

// GetWeaponByID
type GetWeaponByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetWeaponByIDRequest) Reset() {
	*x = GetWeaponByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_weapon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWeaponByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeaponByIDRequest) ProtoMessage() {}

func (x *GetWeaponByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_weapon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeaponByIDRequest.ProtoReflect.Descriptor instead.
func (*GetWeaponByIDRequest) Descriptor() ([]byte, []int) {
	return file_rpc_weapon_proto_rawDescGZIP(), []int{1}
}

func (x *GetWeaponByIDRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type GetWeaponByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weapon *Weapon `protobuf:"bytes,1,opt,name=Weapon,proto3" json:"Weapon,omitempty"`
}

func (x *GetWeaponByIDResponse) Reset() {
	*x = GetWeaponByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_weapon_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWeaponByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeaponByIDResponse) ProtoMessage() {}

func (x *GetWeaponByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_weapon_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeaponByIDResponse.ProtoReflect.Descriptor instead.
func (*GetWeaponByIDResponse) Descriptor() ([]byte, []int) {
	return file_rpc_weapon_proto_rawDescGZIP(), []int{2}
}

func (x *GetWeaponByIDResponse) GetWeapon() *Weapon {
	if x != nil {
		return x.Weapon
	}
	return nil
}

// FindWeaponByName
type FindWeaponByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *FindWeaponByNameRequest) Reset() {
	*x = FindWeaponByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_weapon_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindWeaponByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindWeaponByNameRequest) ProtoMessage() {}

func (x *FindWeaponByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_weapon_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindWeaponByNameRequest.ProtoReflect.Descriptor instead.
func (*FindWeaponByNameRequest) Descriptor() ([]byte, []int) {
	return file_rpc_weapon_proto_rawDescGZIP(), []int{3}
}

func (x *FindWeaponByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FindWeaponByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weapon *Weapon `protobuf:"bytes,1,opt,name=Weapon,proto3" json:"Weapon,omitempty"`
}

func (x *FindWeaponByNameResponse) Reset() {
	*x = FindWeaponByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_weapon_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindWeaponByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindWeaponByNameResponse) ProtoMessage() {}

func (x *FindWeaponByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_weapon_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindWeaponByNameResponse.ProtoReflect.Descriptor instead.
func (*FindWeaponByNameResponse) Descriptor() ([]byte, []int) {
	return file_rpc_weapon_proto_rawDescGZIP(), []int{4}
}

func (x *FindWeaponByNameResponse) GetWeapon() *Weapon {
	if x != nil {
		return x.Weapon
	}
	return nil
}

// UpdateWeapon
type UpdateWeaponRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weapon *Weapon `protobuf:"bytes,1,opt,name=Weapon,proto3" json:"Weapon,omitempty"`
}

func (x *UpdateWeaponRequest) Reset() {
	*x = UpdateWeaponRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_weapon_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWeaponRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWeaponRequest) ProtoMessage() {}

func (x *UpdateWeaponRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_weapon_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWeaponRequest.ProtoReflect.Descriptor instead.
func (*UpdateWeaponRequest) Descriptor() ([]byte, []int) {
	return file_rpc_weapon_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateWeaponRequest) GetWeapon() *Weapon {
	if x != nil {
		return x.Weapon
	}
	return nil
}

type UpdateWeaponResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateWeaponResponse) Reset() {
	*x = UpdateWeaponResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_weapon_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWeaponResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWeaponResponse) ProtoMessage() {}

func (x *UpdateWeaponResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_weapon_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWeaponResponse.ProtoReflect.Descriptor instead.
func (*UpdateWeaponResponse) Descriptor() ([]byte, []int) {
	return file_rpc_weapon_proto_rawDescGZIP(), []int{6}
}

// GetPlayerWeapons
type GetPlayerWeaponsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerID uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
}

func (x *GetPlayerWeaponsRequest) Reset() {
	*x = GetPlayerWeaponsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_weapon_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerWeaponsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerWeaponsRequest) ProtoMessage() {}

func (x *GetPlayerWeaponsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_weapon_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerWeaponsRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerWeaponsRequest) Descriptor() ([]byte, []int) {
	return file_rpc_weapon_proto_rawDescGZIP(), []int{7}
}

func (x *GetPlayerWeaponsRequest) GetPlayerID() uint32 {
	if x != nil {
		return x.PlayerID
	}
	return 0
}

type GetPlayerWeaponsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weapons []*Weapon `protobuf:"bytes,1,rep,name=Weapons,proto3" json:"Weapons,omitempty"`
}

func (x *GetPlayerWeaponsResponse) Reset() {
	*x = GetPlayerWeaponsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_weapon_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerWeaponsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerWeaponsResponse) ProtoMessage() {}

func (x *GetPlayerWeaponsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_weapon_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerWeaponsResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerWeaponsResponse) Descriptor() ([]byte, []int) {
	return file_rpc_weapon_proto_rawDescGZIP(), []int{8}
}

func (x *GetPlayerWeaponsResponse) GetWeapons() []*Weapon {
	if x != nil {
		return x.Weapons
	}
	return nil
}

// GetPlayerWeaponEquipped
type GetPlayerWeaponEquippedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerID uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
}

func (x *GetPlayerWeaponEquippedRequest) Reset() {
	*x = GetPlayerWeaponEquippedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_weapon_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerWeaponEquippedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerWeaponEquippedRequest) ProtoMessage() {}

func (x *GetPlayerWeaponEquippedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_weapon_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerWeaponEquippedRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerWeaponEquippedRequest) Descriptor() ([]byte, []int) {
	return file_rpc_weapon_proto_rawDescGZIP(), []int{9}
}

func (x *GetPlayerWeaponEquippedRequest) GetPlayerID() uint32 {
	if x != nil {
		return x.PlayerID
	}
	return 0
}

type GetPlayerWeaponEquippedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weapon *Weapon `protobuf:"bytes,1,opt,name=Weapon,proto3" json:"Weapon,omitempty"`
}

func (x *GetPlayerWeaponEquippedResponse) Reset() {
	*x = GetPlayerWeaponEquippedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_weapon_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerWeaponEquippedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerWeaponEquippedResponse) ProtoMessage() {}

func (x *GetPlayerWeaponEquippedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_weapon_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerWeaponEquippedResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerWeaponEquippedResponse) Descriptor() ([]byte, []int) {
	return file_rpc_weapon_proto_rawDescGZIP(), []int{10}
}

func (x *GetPlayerWeaponEquippedResponse) GetWeapon() *Weapon {
	if x != nil {
		return x.Weapon
	}
	return nil
}

var File_rpc_weapon_proto protoreflect.FileDescriptor

var file_rpc_weapon_proto_rawDesc = []byte{
	0x0a, 0x10, 0x72, 0x70, 0x63, 0x2f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x1a, 0x10, 0x72, 0x70, 0x63, 0x2f,
	0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x72, 0x70,
	0x63, 0x2f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99, 0x03, 0x0a, 0x06, 0x57, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x61, 0x77, 0x44, 0x61, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x52, 0x61, 0x77, 0x44, 0x61,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x45, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x45, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x06, 0x52, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x61, 0x72, 0x69, 0x74,
	0x79, 0x2e, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52, 0x06, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x2a, 0x0a, 0x10, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x57, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x47, 0x0a, 0x0e,
	0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x65, 0x6e, 0x65, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x50, 0x65, 0x6e, 0x65, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x6f, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x3f, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x2e, 0x57, 0x65,
	0x61, 0x70, 0x6f, 0x6e, 0x52, 0x06, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x17,
	0x46, 0x69, 0x6e, 0x64, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x18, 0x46,
	0x69, 0x6e, 0x64, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x57, 0x65, 0x61, 0x70, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x52, 0x06, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x22,
	0x3d, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x2e,
	0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x52, 0x06, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x22, 0x16,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x22, 0x44, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x57, 0x65, 0x61,
	0x70, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x65, 0x61,
	0x70, 0x6f, 0x6e, 0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x52, 0x07, 0x57, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x73, 0x22, 0x3c, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x49, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x57, 0x65,
	0x61, 0x70, 0x6f, 0x6e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x2e, 0x57, 0x65,
	0x61, 0x70, 0x6f, 0x6e, 0x52, 0x06, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x42, 0x05, 0x5a, 0x03,
	0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_weapon_proto_rawDescOnce sync.Once
	file_rpc_weapon_proto_rawDescData = file_rpc_weapon_proto_rawDesc
)

func file_rpc_weapon_proto_rawDescGZIP() []byte {
	file_rpc_weapon_proto_rawDescOnce.Do(func() {
		file_rpc_weapon_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_weapon_proto_rawDescData)
	})
	return file_rpc_weapon_proto_rawDescData
}

var file_rpc_weapon_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_rpc_weapon_proto_goTypes = []interface{}{
	(*Weapon)(nil),                          // 0: weapon.Weapon
	(*GetWeaponByIDRequest)(nil),            // 1: weapon.GetWeaponByIDRequest
	(*GetWeaponByIDResponse)(nil),           // 2: weapon.GetWeaponByIDResponse
	(*FindWeaponByNameRequest)(nil),         // 3: weapon.FindWeaponByNameRequest
	(*FindWeaponByNameResponse)(nil),        // 4: weapon.FindWeaponByNameResponse
	(*UpdateWeaponRequest)(nil),             // 5: weapon.UpdateWeaponRequest
	(*UpdateWeaponResponse)(nil),            // 6: weapon.UpdateWeaponResponse
	(*GetPlayerWeaponsRequest)(nil),         // 7: weapon.GetPlayerWeaponsRequest
	(*GetPlayerWeaponsResponse)(nil),        // 8: weapon.GetPlayerWeaponsResponse
	(*GetPlayerWeaponEquippedRequest)(nil),  // 9: weapon.GetPlayerWeaponEquippedRequest
	(*GetPlayerWeaponEquippedResponse)(nil), // 10: weapon.GetPlayerWeaponEquippedResponse
	(*Rarity)(nil),                          // 11: rarity.Rarity
	(*WeaponCategory)(nil),                  // 12: weapon_category.WeaponCategory
}
var file_rpc_weapon_proto_depIdxs = []int32{
	11, // 0: weapon.Weapon.Rarity:type_name -> rarity.Rarity
	12, // 1: weapon.Weapon.WeaponCategory:type_name -> weapon_category.WeaponCategory
	0,  // 2: weapon.GetWeaponByIDResponse.Weapon:type_name -> weapon.Weapon
	0,  // 3: weapon.FindWeaponByNameResponse.Weapon:type_name -> weapon.Weapon
	0,  // 4: weapon.UpdateWeaponRequest.Weapon:type_name -> weapon.Weapon
	0,  // 5: weapon.GetPlayerWeaponsResponse.Weapons:type_name -> weapon.Weapon
	0,  // 6: weapon.GetPlayerWeaponEquippedResponse.Weapon:type_name -> weapon.Weapon
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_rpc_weapon_proto_init() }
func file_rpc_weapon_proto_init() {
	if File_rpc_weapon_proto != nil {
		return
	}
	file_rpc_rarity_proto_init()
	file_rpc_weapon_category_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_rpc_weapon_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Weapon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_weapon_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWeaponByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_weapon_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWeaponByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_weapon_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindWeaponByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_weapon_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindWeaponByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_weapon_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWeaponRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_weapon_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWeaponResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_weapon_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerWeaponsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_weapon_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerWeaponsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_weapon_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerWeaponEquippedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_weapon_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerWeaponEquippedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_weapon_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_weapon_proto_goTypes,
		DependencyIndexes: file_rpc_weapon_proto_depIdxs,
		MessageInfos:      file_rpc_weapon_proto_msgTypes,
	}.Build()
	File_rpc_weapon_proto = out.File
	file_rpc_weapon_proto_rawDesc = nil
	file_rpc_weapon_proto_goTypes = nil
	file_rpc_weapon_proto_depIdxs = nil
}
