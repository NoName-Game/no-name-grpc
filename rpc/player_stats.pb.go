// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/player_stats.proto

package rpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PlayerStats struct {
	ID                   uint32   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	PlayerID             uint32   `protobuf:"varint,2,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
	Dead                 bool     `protobuf:"varint,3,opt,name=Dead,proto3" json:"Dead,omitempty"`
	LifePoint            int32    `protobuf:"varint,4,opt,name=LifePoint,proto3" json:"LifePoint,omitempty"`
	Experience           uint32   `protobuf:"varint,5,opt,name=Experience,proto3" json:"Experience,omitempty"`
	Level                uint32   `protobuf:"varint,6,opt,name=Level,proto3" json:"Level,omitempty"`
	Strength             uint32   `protobuf:"varint,7,opt,name=Strength,proto3" json:"Strength,omitempty"`
	Dexterity            uint32   `protobuf:"varint,8,opt,name=Dexterity,proto3" json:"Dexterity,omitempty"`
	Constitution         uint32   `protobuf:"varint,9,opt,name=Constitution,proto3" json:"Constitution,omitempty"`
	Intellect            uint32   `protobuf:"varint,10,opt,name=Intellect,proto3" json:"Intellect,omitempty"`
	Wisdom               uint32   `protobuf:"varint,11,opt,name=Wisdom,proto3" json:"Wisdom,omitempty"`
	Charisma             uint32   `protobuf:"varint,12,opt,name=Charisma,proto3" json:"Charisma,omitempty"`
	AbilityPoint         uint32   `protobuf:"varint,13,opt,name=AbilityPoint,proto3" json:"AbilityPoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerStats) Reset()         { *m = PlayerStats{} }
func (m *PlayerStats) String() string { return proto.CompactTextString(m) }
func (*PlayerStats) ProtoMessage()    {}
func (*PlayerStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb4d6892a0da4f02, []int{0}
}

func (m *PlayerStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerStats.Unmarshal(m, b)
}
func (m *PlayerStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerStats.Marshal(b, m, deterministic)
}
func (m *PlayerStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerStats.Merge(m, src)
}
func (m *PlayerStats) XXX_Size() int {
	return xxx_messageInfo_PlayerStats.Size(m)
}
func (m *PlayerStats) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerStats.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerStats proto.InternalMessageInfo

func (m *PlayerStats) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *PlayerStats) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

func (m *PlayerStats) GetDead() bool {
	if m != nil {
		return m.Dead
	}
	return false
}

func (m *PlayerStats) GetLifePoint() int32 {
	if m != nil {
		return m.LifePoint
	}
	return 0
}

func (m *PlayerStats) GetExperience() uint32 {
	if m != nil {
		return m.Experience
	}
	return 0
}

func (m *PlayerStats) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *PlayerStats) GetStrength() uint32 {
	if m != nil {
		return m.Strength
	}
	return 0
}

func (m *PlayerStats) GetDexterity() uint32 {
	if m != nil {
		return m.Dexterity
	}
	return 0
}

func (m *PlayerStats) GetConstitution() uint32 {
	if m != nil {
		return m.Constitution
	}
	return 0
}

func (m *PlayerStats) GetIntellect() uint32 {
	if m != nil {
		return m.Intellect
	}
	return 0
}

func (m *PlayerStats) GetWisdom() uint32 {
	if m != nil {
		return m.Wisdom
	}
	return 0
}

func (m *PlayerStats) GetCharisma() uint32 {
	if m != nil {
		return m.Charisma
	}
	return 0
}

func (m *PlayerStats) GetAbilityPoint() uint32 {
	if m != nil {
		return m.AbilityPoint
	}
	return 0
}

func init() {
	proto.RegisterType((*PlayerStats)(nil), "player_stats.PlayerStats")
}

func init() { proto.RegisterFile("rpc/player_stats.proto", fileDescriptor_fb4d6892a0da4f02) }

var fileDescriptor_fb4d6892a0da4f02 = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x31, 0x6b, 0xf3, 0x30,
	0x10, 0x86, 0xb1, 0x13, 0xe7, 0x4b, 0x2e, 0xce, 0x37, 0x88, 0x12, 0x8e, 0x52, 0x8a, 0xc9, 0xe4,
	0xa9, 0x1d, 0xfa, 0x0b, 0xda, 0xb8, 0x83, 0x21, 0x43, 0x70, 0x86, 0x42, 0x97, 0xe2, 0x38, 0xd7,
	0x46, 0xe0, 0x48, 0x46, 0xbe, 0x96, 0xf8, 0x87, 0x77, 0x2f, 0x92, 0x9a, 0xc4, 0xdd, 0xf4, 0x3c,
	0xaf, 0xb8, 0x7b, 0x91, 0x60, 0x6e, 0x9a, 0xea, 0xbe, 0xa9, 0xcb, 0x8e, 0xcc, 0x5b, 0xcb, 0x25,
	0xb7, 0x77, 0x8d, 0xd1, 0xac, 0x45, 0xdc, 0x77, 0x8b, 0xef, 0x10, 0xa6, 0x6b, 0x27, 0x36, 0x96,
	0xc5, 0x7f, 0x08, 0xf3, 0x0c, 0x83, 0x24, 0x48, 0x67, 0x45, 0x98, 0x67, 0xe2, 0x1a, 0xc6, 0x3e,
	0xce, 0x33, 0x0c, 0x9d, 0x3d, 0xb3, 0x10, 0x30, 0xcc, 0xa8, 0xdc, 0xe1, 0x20, 0x09, 0xd2, 0x71,
	0xe1, 0xce, 0xe2, 0x06, 0x26, 0x2b, 0xf9, 0x4e, 0x6b, 0x2d, 0x15, 0xe3, 0x30, 0x09, 0xd2, 0xa8,
	0xb8, 0x08, 0x71, 0x0b, 0xf0, 0x7c, 0x6c, 0xc8, 0x48, 0x52, 0x15, 0x61, 0xe4, 0xe6, 0xf5, 0x8c,
	0xb8, 0x82, 0x68, 0x45, 0x5f, 0x54, 0xe3, 0xc8, 0x45, 0x1e, 0x6c, 0x87, 0x0d, 0x1b, 0x52, 0x1f,
	0xbc, 0xc7, 0x7f, 0xbe, 0xc3, 0x89, 0xed, 0xbe, 0x8c, 0x8e, 0x4c, 0x46, 0x72, 0x87, 0x63, 0x17,
	0x5e, 0x84, 0x58, 0x40, 0xbc, 0xd4, 0xaa, 0x65, 0xc9, 0x9f, 0x2c, 0xb5, 0xc2, 0x89, 0xbb, 0xf0,
	0xc7, 0xd9, 0x09, 0xb9, 0x62, 0xaa, 0x6b, 0xaa, 0x18, 0xc1, 0x4f, 0x38, 0x0b, 0x31, 0x87, 0xd1,
	0x8b, 0x6c, 0x77, 0xfa, 0x80, 0x53, 0x17, 0xfd, 0x92, 0xed, 0xb4, 0xdc, 0x97, 0x46, 0xb6, 0x87,
	0x12, 0x63, 0xdf, 0xe9, 0xc4, 0x76, 0xeb, 0xe3, 0x56, 0xd6, 0x92, 0x3b, 0xff, 0x0c, 0x33, 0xbf,
	0xb5, 0xef, 0x9e, 0xa2, 0xd7, 0x81, 0x69, 0xaa, 0xed, 0xc8, 0xfd, 0xc9, 0xc3, 0x4f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xd4, 0xd1, 0xf3, 0xaf, 0xad, 0x01, 0x00, 0x00,
}
