// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/planet_bookmarks.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// AddPlanetBookmark
type AddPlanetBookmarkRequest struct {
	PlayerID uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
	PlanetID uint32 `protobuf:"varint,2,opt,name=PlanetID,proto3" json:"PlanetID,omitempty"`
}

func (m *AddPlanetBookmarkRequest) Reset()         { *m = AddPlanetBookmarkRequest{} }
func (m *AddPlanetBookmarkRequest) String() string { return proto.CompactTextString(m) }
func (*AddPlanetBookmarkRequest) ProtoMessage()    {}
func (*AddPlanetBookmarkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_70f3b016f46f2dba, []int{0}
}
func (m *AddPlanetBookmarkRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AddPlanetBookmarkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AddPlanetBookmarkRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AddPlanetBookmarkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPlanetBookmarkRequest.Merge(m, src)
}
func (m *AddPlanetBookmarkRequest) XXX_Size() int {
	return m.Size()
}
func (m *AddPlanetBookmarkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPlanetBookmarkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddPlanetBookmarkRequest proto.InternalMessageInfo

func (m *AddPlanetBookmarkRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

func (m *AddPlanetBookmarkRequest) GetPlanetID() uint32 {
	if m != nil {
		return m.PlanetID
	}
	return 0
}

type AddPlanetBookmarkResponse struct {
}

func (m *AddPlanetBookmarkResponse) Reset()         { *m = AddPlanetBookmarkResponse{} }
func (m *AddPlanetBookmarkResponse) String() string { return proto.CompactTextString(m) }
func (*AddPlanetBookmarkResponse) ProtoMessage()    {}
func (*AddPlanetBookmarkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_70f3b016f46f2dba, []int{1}
}
func (m *AddPlanetBookmarkResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AddPlanetBookmarkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AddPlanetBookmarkResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AddPlanetBookmarkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPlanetBookmarkResponse.Merge(m, src)
}
func (m *AddPlanetBookmarkResponse) XXX_Size() int {
	return m.Size()
}
func (m *AddPlanetBookmarkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPlanetBookmarkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddPlanetBookmarkResponse proto.InternalMessageInfo

// RemovePlanetBookmark
type RemovePlanetBookmarkRequest struct {
	PlayerID uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
	PlanetID uint32 `protobuf:"varint,2,opt,name=PlanetID,proto3" json:"PlanetID,omitempty"`
}

func (m *RemovePlanetBookmarkRequest) Reset()         { *m = RemovePlanetBookmarkRequest{} }
func (m *RemovePlanetBookmarkRequest) String() string { return proto.CompactTextString(m) }
func (*RemovePlanetBookmarkRequest) ProtoMessage()    {}
func (*RemovePlanetBookmarkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_70f3b016f46f2dba, []int{2}
}
func (m *RemovePlanetBookmarkRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RemovePlanetBookmarkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RemovePlanetBookmarkRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RemovePlanetBookmarkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovePlanetBookmarkRequest.Merge(m, src)
}
func (m *RemovePlanetBookmarkRequest) XXX_Size() int {
	return m.Size()
}
func (m *RemovePlanetBookmarkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovePlanetBookmarkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemovePlanetBookmarkRequest proto.InternalMessageInfo

func (m *RemovePlanetBookmarkRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

func (m *RemovePlanetBookmarkRequest) GetPlanetID() uint32 {
	if m != nil {
		return m.PlanetID
	}
	return 0
}

type RemovePlanetBookmarkResponse struct {
}

func (m *RemovePlanetBookmarkResponse) Reset()         { *m = RemovePlanetBookmarkResponse{} }
func (m *RemovePlanetBookmarkResponse) String() string { return proto.CompactTextString(m) }
func (*RemovePlanetBookmarkResponse) ProtoMessage()    {}
func (*RemovePlanetBookmarkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_70f3b016f46f2dba, []int{3}
}
func (m *RemovePlanetBookmarkResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RemovePlanetBookmarkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RemovePlanetBookmarkResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RemovePlanetBookmarkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovePlanetBookmarkResponse.Merge(m, src)
}
func (m *RemovePlanetBookmarkResponse) XXX_Size() int {
	return m.Size()
}
func (m *RemovePlanetBookmarkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovePlanetBookmarkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemovePlanetBookmarkResponse proto.InternalMessageInfo

// CheckIfPlayerHavePlanetBookmark
type CheckIfPlayerHavePlanetBookmarkRequest struct {
	PlayerID uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
	PlanetID uint32 `protobuf:"varint,2,opt,name=PlanetID,proto3" json:"PlanetID,omitempty"`
}

func (m *CheckIfPlayerHavePlanetBookmarkRequest) Reset() {
	*m = CheckIfPlayerHavePlanetBookmarkRequest{}
}
func (m *CheckIfPlayerHavePlanetBookmarkRequest) String() string { return proto.CompactTextString(m) }
func (*CheckIfPlayerHavePlanetBookmarkRequest) ProtoMessage()    {}
func (*CheckIfPlayerHavePlanetBookmarkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_70f3b016f46f2dba, []int{4}
}
func (m *CheckIfPlayerHavePlanetBookmarkRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CheckIfPlayerHavePlanetBookmarkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CheckIfPlayerHavePlanetBookmarkRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CheckIfPlayerHavePlanetBookmarkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckIfPlayerHavePlanetBookmarkRequest.Merge(m, src)
}
func (m *CheckIfPlayerHavePlanetBookmarkRequest) XXX_Size() int {
	return m.Size()
}
func (m *CheckIfPlayerHavePlanetBookmarkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckIfPlayerHavePlanetBookmarkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckIfPlayerHavePlanetBookmarkRequest proto.InternalMessageInfo

func (m *CheckIfPlayerHavePlanetBookmarkRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

func (m *CheckIfPlayerHavePlanetBookmarkRequest) GetPlanetID() uint32 {
	if m != nil {
		return m.PlanetID
	}
	return 0
}

type CheckIfPlayerHavePlanetBookmarkResponse struct {
	HaveBookmark bool `protobuf:"varint,1,opt,name=HaveBookmark,proto3" json:"HaveBookmark,omitempty"`
}

func (m *CheckIfPlayerHavePlanetBookmarkResponse) Reset() {
	*m = CheckIfPlayerHavePlanetBookmarkResponse{}
}
func (m *CheckIfPlayerHavePlanetBookmarkResponse) String() string { return proto.CompactTextString(m) }
func (*CheckIfPlayerHavePlanetBookmarkResponse) ProtoMessage()    {}
func (*CheckIfPlayerHavePlanetBookmarkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_70f3b016f46f2dba, []int{5}
}
func (m *CheckIfPlayerHavePlanetBookmarkResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CheckIfPlayerHavePlanetBookmarkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CheckIfPlayerHavePlanetBookmarkResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CheckIfPlayerHavePlanetBookmarkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckIfPlayerHavePlanetBookmarkResponse.Merge(m, src)
}
func (m *CheckIfPlayerHavePlanetBookmarkResponse) XXX_Size() int {
	return m.Size()
}
func (m *CheckIfPlayerHavePlanetBookmarkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckIfPlayerHavePlanetBookmarkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckIfPlayerHavePlanetBookmarkResponse proto.InternalMessageInfo

func (m *CheckIfPlayerHavePlanetBookmarkResponse) GetHaveBookmark() bool {
	if m != nil {
		return m.HaveBookmark
	}
	return false
}

func init() {
	proto.RegisterType((*AddPlanetBookmarkRequest)(nil), "planet_bookmarks.AddPlanetBookmarkRequest")
	proto.RegisterType((*AddPlanetBookmarkResponse)(nil), "planet_bookmarks.AddPlanetBookmarkResponse")
	proto.RegisterType((*RemovePlanetBookmarkRequest)(nil), "planet_bookmarks.RemovePlanetBookmarkRequest")
	proto.RegisterType((*RemovePlanetBookmarkResponse)(nil), "planet_bookmarks.RemovePlanetBookmarkResponse")
	proto.RegisterType((*CheckIfPlayerHavePlanetBookmarkRequest)(nil), "planet_bookmarks.CheckIfPlayerHavePlanetBookmarkRequest")
	proto.RegisterType((*CheckIfPlayerHavePlanetBookmarkResponse)(nil), "planet_bookmarks.CheckIfPlayerHavePlanetBookmarkResponse")
}

func init() { proto.RegisterFile("proto/planet_bookmarks.proto", fileDescriptor_70f3b016f46f2dba) }

var fileDescriptor_70f3b016f46f2dba = []byte{
	// 218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x29, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0xc8, 0x49, 0xcc, 0x4b, 0x2d, 0x89, 0x4f, 0xca, 0xcf, 0xcf, 0xce, 0x4d, 0x2c,
	0xca, 0x2e, 0xd6, 0x03, 0x0b, 0x0b, 0x09, 0xa0, 0x8b, 0x2b, 0x05, 0x71, 0x49, 0x38, 0xa6, 0xa4,
	0x04, 0x80, 0x85, 0x9d, 0xa0, 0xa2, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x52, 0x5c,
	0x1c, 0x01, 0x39, 0x89, 0x95, 0xa9, 0x45, 0x9e, 0x2e, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xbc, 0x41,
	0x70, 0x3e, 0x54, 0x2e, 0x2f, 0xb5, 0xc4, 0xd3, 0x45, 0x82, 0x09, 0x2e, 0x07, 0xe6, 0x2b, 0x49,
	0x73, 0x49, 0x62, 0x31, 0xb3, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x29, 0x94, 0x4b, 0x3a, 0x28,
	0x35, 0x37, 0xbf, 0x2c, 0x95, 0xba, 0x76, 0xca, 0x71, 0xc9, 0x60, 0x37, 0x16, 0x6a, 0x6d, 0x02,
	0x97, 0x9a, 0x73, 0x46, 0x6a, 0x72, 0xb6, 0x67, 0x1a, 0xc4, 0x38, 0x8f, 0x44, 0x6a, 0xbb, 0xc0,
	0x97, 0x4b, 0x9d, 0xa0, 0x0d, 0x10, 0xc7, 0x08, 0x29, 0x71, 0xf1, 0x80, 0x64, 0x61, 0xe2, 0x60,
	0x6b, 0x38, 0x82, 0x50, 0xc4, 0x9c, 0xe4, 0x4e, 0x3c, 0x92, 0x63, 0xbc, 0xf0, 0x48, 0x8e, 0xf1,
	0xc1, 0x23, 0x39, 0xc6, 0x09, 0x8f, 0xe5, 0x18, 0x2e, 0x3c, 0x96, 0x63, 0xb8, 0xf1, 0x58, 0x8e,
	0x21, 0x8a, 0x45, 0xcf, 0xba, 0x20, 0x29, 0x89, 0x0d, 0x1c, 0xa3, 0xc6, 0x80, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xbe, 0x7b, 0x8e, 0xd2, 0xf1, 0x01, 0x00, 0x00,
}

func (m *AddPlanetBookmarkRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AddPlanetBookmarkRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddPlanetBookmarkRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlanetID != 0 {
		i = encodeVarintPlanetBookmarks(dAtA, i, uint64(m.PlanetID))
		i--
		dAtA[i] = 0x10
	}
	if m.PlayerID != 0 {
		i = encodeVarintPlanetBookmarks(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AddPlanetBookmarkResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AddPlanetBookmarkResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddPlanetBookmarkResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *RemovePlanetBookmarkRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RemovePlanetBookmarkRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RemovePlanetBookmarkRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlanetID != 0 {
		i = encodeVarintPlanetBookmarks(dAtA, i, uint64(m.PlanetID))
		i--
		dAtA[i] = 0x10
	}
	if m.PlayerID != 0 {
		i = encodeVarintPlanetBookmarks(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RemovePlanetBookmarkResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RemovePlanetBookmarkResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RemovePlanetBookmarkResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *CheckIfPlayerHavePlanetBookmarkRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CheckIfPlayerHavePlanetBookmarkRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CheckIfPlayerHavePlanetBookmarkRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlanetID != 0 {
		i = encodeVarintPlanetBookmarks(dAtA, i, uint64(m.PlanetID))
		i--
		dAtA[i] = 0x10
	}
	if m.PlayerID != 0 {
		i = encodeVarintPlanetBookmarks(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CheckIfPlayerHavePlanetBookmarkResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CheckIfPlayerHavePlanetBookmarkResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CheckIfPlayerHavePlanetBookmarkResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.HaveBookmark {
		i--
		if m.HaveBookmark {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintPlanetBookmarks(dAtA []byte, offset int, v uint64) int {
	offset -= sovPlanetBookmarks(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *AddPlanetBookmarkRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovPlanetBookmarks(uint64(m.PlayerID))
	}
	if m.PlanetID != 0 {
		n += 1 + sovPlanetBookmarks(uint64(m.PlanetID))
	}
	return n
}

func (m *AddPlanetBookmarkResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *RemovePlanetBookmarkRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovPlanetBookmarks(uint64(m.PlayerID))
	}
	if m.PlanetID != 0 {
		n += 1 + sovPlanetBookmarks(uint64(m.PlanetID))
	}
	return n
}

func (m *RemovePlanetBookmarkResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *CheckIfPlayerHavePlanetBookmarkRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovPlanetBookmarks(uint64(m.PlayerID))
	}
	if m.PlanetID != 0 {
		n += 1 + sovPlanetBookmarks(uint64(m.PlanetID))
	}
	return n
}

func (m *CheckIfPlayerHavePlanetBookmarkResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HaveBookmark {
		n += 2
	}
	return n
}

func sovPlanetBookmarks(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPlanetBookmarks(x uint64) (n int) {
	return sovPlanetBookmarks(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AddPlanetBookmarkRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPlanetBookmarks
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddPlanetBookmarkRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddPlanetBookmarkRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlanetBookmarks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlanetID", wireType)
			}
			m.PlanetID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlanetBookmarks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlanetID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPlanetBookmarks(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPlanetBookmarks
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPlanetBookmarks
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AddPlanetBookmarkResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPlanetBookmarks
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddPlanetBookmarkResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddPlanetBookmarkResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPlanetBookmarks(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPlanetBookmarks
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPlanetBookmarks
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RemovePlanetBookmarkRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPlanetBookmarks
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RemovePlanetBookmarkRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RemovePlanetBookmarkRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlanetBookmarks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlanetID", wireType)
			}
			m.PlanetID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlanetBookmarks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlanetID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPlanetBookmarks(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPlanetBookmarks
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPlanetBookmarks
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RemovePlanetBookmarkResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPlanetBookmarks
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RemovePlanetBookmarkResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RemovePlanetBookmarkResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPlanetBookmarks(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPlanetBookmarks
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPlanetBookmarks
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CheckIfPlayerHavePlanetBookmarkRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPlanetBookmarks
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheckIfPlayerHavePlanetBookmarkRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheckIfPlayerHavePlanetBookmarkRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlanetBookmarks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlanetID", wireType)
			}
			m.PlanetID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlanetBookmarks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlanetID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPlanetBookmarks(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPlanetBookmarks
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPlanetBookmarks
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CheckIfPlayerHavePlanetBookmarkResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPlanetBookmarks
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheckIfPlayerHavePlanetBookmarkResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheckIfPlayerHavePlanetBookmarkResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HaveBookmark", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlanetBookmarks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HaveBookmark = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipPlanetBookmarks(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPlanetBookmarks
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPlanetBookmarks
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPlanetBookmarks(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPlanetBookmarks
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPlanetBookmarks
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPlanetBookmarks
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPlanetBookmarks
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPlanetBookmarks
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPlanetBookmarks
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPlanetBookmarks        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPlanetBookmarks          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPlanetBookmarks = fmt.Errorf("proto: unexpected end of group")
)
