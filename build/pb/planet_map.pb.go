// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.2
// source: proto/planet_map.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PlanetMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             uint32     `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CellGrid       string     `protobuf:"bytes,2,opt,name=CellGrid,proto3" json:"CellGrid,omitempty"`
	StartPositionX int32      `protobuf:"varint,3,opt,name=StartPositionX,proto3" json:"StartPositionX,omitempty"`
	StartPositionY int32      `protobuf:"varint,4,opt,name=StartPositionY,proto3" json:"StartPositionY,omitempty"`
	Enemies        []*Enemy   `protobuf:"bytes,5,rep,name=Enemies,proto3" json:"Enemies,omitempty"`
	Tresures       []*Tresure `protobuf:"bytes,6,rep,name=Tresures,proto3" json:"Tresures,omitempty"`
}

func (x *PlanetMap) Reset() {
	*x = PlanetMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_planet_map_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanetMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanetMap) ProtoMessage() {}

func (x *PlanetMap) ProtoReflect() protoreflect.Message {
	mi := &file_proto_planet_map_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanetMap.ProtoReflect.Descriptor instead.
func (*PlanetMap) Descriptor() ([]byte, []int) {
	return file_proto_planet_map_proto_rawDescGZIP(), []int{0}
}

func (x *PlanetMap) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *PlanetMap) GetCellGrid() string {
	if x != nil {
		return x.CellGrid
	}
	return ""
}

func (x *PlanetMap) GetStartPositionX() int32 {
	if x != nil {
		return x.StartPositionX
	}
	return 0
}

func (x *PlanetMap) GetStartPositionY() int32 {
	if x != nil {
		return x.StartPositionY
	}
	return 0
}

func (x *PlanetMap) GetEnemies() []*Enemy {
	if x != nil {
		return x.Enemies
	}
	return nil
}

func (x *PlanetMap) GetTresures() []*Tresure {
	if x != nil {
		return x.Tresures
	}
	return nil
}

// GetMapByID
type GetPlanetMapByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanetMapID uint32 `protobuf:"varint,1,opt,name=PlanetMapID,proto3" json:"PlanetMapID,omitempty"`
}

func (x *GetPlanetMapByIDRequest) Reset() {
	*x = GetPlanetMapByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_planet_map_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlanetMapByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanetMapByIDRequest) ProtoMessage() {}

func (x *GetPlanetMapByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_planet_map_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanetMapByIDRequest.ProtoReflect.Descriptor instead.
func (*GetPlanetMapByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_planet_map_proto_rawDescGZIP(), []int{1}
}

func (x *GetPlanetMapByIDRequest) GetPlanetMapID() uint32 {
	if x != nil {
		return x.PlanetMapID
	}
	return 0
}

type GetPlanetMapByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanetMap *PlanetMap `protobuf:"bytes,1,opt,name=PlanetMap,proto3" json:"PlanetMap,omitempty"`
}

func (x *GetPlanetMapByIDResponse) Reset() {
	*x = GetPlanetMapByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_planet_map_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlanetMapByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanetMapByIDResponse) ProtoMessage() {}

func (x *GetPlanetMapByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_planet_map_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanetMapByIDResponse.ProtoReflect.Descriptor instead.
func (*GetPlanetMapByIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_planet_map_proto_rawDescGZIP(), []int{2}
}

func (x *GetPlanetMapByIDResponse) GetPlanetMap() *PlanetMap {
	if x != nil {
		return x.PlanetMap
	}
	return nil
}

var File_proto_planet_map_proto protoreflect.FileDescriptor

var file_proto_planet_map_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x5f, 0x6d,
	0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74,
	0x5f, 0x6d, 0x61, 0x70, 0x1a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x65, 0x6d,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74,
	0x72, 0x65, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdd, 0x01, 0x0a,
	0x09, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x65,
	0x6c, 0x6c, 0x47, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x65,
	0x6c, 0x6c, 0x47, 0x72, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x12, 0x26,
	0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x59,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x12, 0x26, 0x0a, 0x07, 0x45, 0x6e, 0x65, 0x6d, 0x69, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x65, 0x6e, 0x65, 0x6d, 0x79, 0x2e,
	0x45, 0x6e, 0x65, 0x6d, 0x79, 0x52, 0x07, 0x45, 0x6e, 0x65, 0x6d, 0x69, 0x65, 0x73, 0x12, 0x2c,
	0x0a, 0x08, 0x54, 0x72, 0x65, 0x73, 0x75, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x74, 0x72, 0x65, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x54, 0x72, 0x65, 0x73, 0x75,
	0x72, 0x65, 0x52, 0x08, 0x54, 0x72, 0x65, 0x73, 0x75, 0x72, 0x65, 0x73, 0x22, 0x3b, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x6e, 0x65,
	0x74, 0x4d, 0x61, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x50, 0x6c,
	0x61, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x49, 0x44, 0x22, 0x4f, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x4d,
	0x61, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x52,
	0x09, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_planet_map_proto_rawDescOnce sync.Once
	file_proto_planet_map_proto_rawDescData = file_proto_planet_map_proto_rawDesc
)

func file_proto_planet_map_proto_rawDescGZIP() []byte {
	file_proto_planet_map_proto_rawDescOnce.Do(func() {
		file_proto_planet_map_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_planet_map_proto_rawDescData)
	})
	return file_proto_planet_map_proto_rawDescData
}

var file_proto_planet_map_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_planet_map_proto_goTypes = []interface{}{
	(*PlanetMap)(nil),                // 0: planet_map.PlanetMap
	(*GetPlanetMapByIDRequest)(nil),  // 1: planet_map.GetPlanetMapByIDRequest
	(*GetPlanetMapByIDResponse)(nil), // 2: planet_map.GetPlanetMapByIDResponse
	(*Enemy)(nil),                    // 3: enemy.Enemy
	(*Tresure)(nil),                  // 4: tresure.Tresure
}
var file_proto_planet_map_proto_depIdxs = []int32{
	3, // 0: planet_map.PlanetMap.Enemies:type_name -> enemy.Enemy
	4, // 1: planet_map.PlanetMap.Tresures:type_name -> tresure.Tresure
	0, // 2: planet_map.GetPlanetMapByIDResponse.PlanetMap:type_name -> planet_map.PlanetMap
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_planet_map_proto_init() }
func file_proto_planet_map_proto_init() {
	if File_proto_planet_map_proto != nil {
		return
	}
	file_proto_enemy_proto_init()
	file_proto_tresure_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_planet_map_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlanetMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_planet_map_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlanetMapByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_planet_map_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlanetMapByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_planet_map_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_planet_map_proto_goTypes,
		DependencyIndexes: file_proto_planet_map_proto_depIdxs,
		MessageInfos:      file_proto_planet_map_proto_msgTypes,
	}.Build()
	File_proto_planet_map_proto = out.File
	file_proto_planet_map_proto_rawDesc = nil
	file_proto_planet_map_proto_goTypes = nil
	file_proto_planet_map_proto_depIdxs = nil
}
