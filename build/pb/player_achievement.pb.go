// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.2
// source: proto/player_achievement.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PlayerAchievement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            uint32       `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	PlayerID      uint32       `protobuf:"varint,2,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
	Player        *Player      `protobuf:"bytes,3,opt,name=Player,proto3" json:"Player,omitempty"`
	AchievementID uint32       `protobuf:"varint,4,opt,name=AchievementID,proto3" json:"AchievementID,omitempty"`
	Achievement   *Achievement `protobuf:"bytes,5,opt,name=Achievement,proto3" json:"Achievement,omitempty"`
	ToNotify      bool         `protobuf:"varint,6,opt,name=ToNotify,proto3" json:"ToNotify,omitempty"`
}

func (x *PlayerAchievement) Reset() {
	*x = PlayerAchievement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_player_achievement_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerAchievement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerAchievement) ProtoMessage() {}

func (x *PlayerAchievement) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_achievement_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerAchievement.ProtoReflect.Descriptor instead.
func (*PlayerAchievement) Descriptor() ([]byte, []int) {
	return file_proto_player_achievement_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerAchievement) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *PlayerAchievement) GetPlayerID() uint32 {
	if x != nil {
		return x.PlayerID
	}
	return 0
}

func (x *PlayerAchievement) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *PlayerAchievement) GetAchievementID() uint32 {
	if x != nil {
		return x.AchievementID
	}
	return 0
}

func (x *PlayerAchievement) GetAchievement() *Achievement {
	if x != nil {
		return x.Achievement
	}
	return nil
}

func (x *PlayerAchievement) GetToNotify() bool {
	if x != nil {
		return x.ToNotify
	}
	return false
}

// GetPlayerAchievementToNotify
type GetPlayerAchievementToNotifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPlayerAchievementToNotifyRequest) Reset() {
	*x = GetPlayerAchievementToNotifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_player_achievement_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerAchievementToNotifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerAchievementToNotifyRequest) ProtoMessage() {}

func (x *GetPlayerAchievementToNotifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_achievement_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerAchievementToNotifyRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerAchievementToNotifyRequest) Descriptor() ([]byte, []int) {
	return file_proto_player_achievement_proto_rawDescGZIP(), []int{1}
}

type GetPlayerAchievementToNotifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerAchievements []*PlayerAchievement `protobuf:"bytes,1,rep,name=PlayerAchievements,proto3" json:"PlayerAchievements,omitempty"`
}

func (x *GetPlayerAchievementToNotifyResponse) Reset() {
	*x = GetPlayerAchievementToNotifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_player_achievement_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerAchievementToNotifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerAchievementToNotifyResponse) ProtoMessage() {}

func (x *GetPlayerAchievementToNotifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_achievement_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerAchievementToNotifyResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerAchievementToNotifyResponse) Descriptor() ([]byte, []int) {
	return file_proto_player_achievement_proto_rawDescGZIP(), []int{2}
}

func (x *GetPlayerAchievementToNotifyResponse) GetPlayerAchievements() []*PlayerAchievement {
	if x != nil {
		return x.PlayerAchievements
	}
	return nil
}

// SetPlayerAchievementNotified
type SetPlayerAchievementNotifiedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AchievementID uint32 `protobuf:"varint,1,opt,name=AchievementID,proto3" json:"AchievementID,omitempty"`
}

func (x *SetPlayerAchievementNotifiedRequest) Reset() {
	*x = SetPlayerAchievementNotifiedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_player_achievement_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerAchievementNotifiedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerAchievementNotifiedRequest) ProtoMessage() {}

func (x *SetPlayerAchievementNotifiedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_achievement_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerAchievementNotifiedRequest.ProtoReflect.Descriptor instead.
func (*SetPlayerAchievementNotifiedRequest) Descriptor() ([]byte, []int) {
	return file_proto_player_achievement_proto_rawDescGZIP(), []int{3}
}

func (x *SetPlayerAchievementNotifiedRequest) GetAchievementID() uint32 {
	if x != nil {
		return x.AchievementID
	}
	return 0
}

type SetPlayerAchievementNotifiedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetPlayerAchievementNotifiedResponse) Reset() {
	*x = SetPlayerAchievementNotifiedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_player_achievement_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerAchievementNotifiedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerAchievementNotifiedResponse) ProtoMessage() {}

func (x *SetPlayerAchievementNotifiedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_achievement_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerAchievementNotifiedResponse.ProtoReflect.Descriptor instead.
func (*SetPlayerAchievementNotifiedResponse) Descriptor() ([]byte, []int) {
	return file_proto_player_achievement_proto_rawDescGZIP(), []int{4}
}

var File_proto_player_achievement_proto protoreflect.FileDescriptor

var file_proto_player_achievement_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe5, 0x01, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x41,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x3a, 0x0a, 0x0b, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0b, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x54, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x54, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0x25, 0x0a, 0x23, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x7d, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x12, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x4b, 0x0a, 0x23, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x41,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x26, 0x0a, 0x24,
	0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_player_achievement_proto_rawDescOnce sync.Once
	file_proto_player_achievement_proto_rawDescData = file_proto_player_achievement_proto_rawDesc
)

func file_proto_player_achievement_proto_rawDescGZIP() []byte {
	file_proto_player_achievement_proto_rawDescOnce.Do(func() {
		file_proto_player_achievement_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_player_achievement_proto_rawDescData)
	})
	return file_proto_player_achievement_proto_rawDescData
}

var file_proto_player_achievement_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_player_achievement_proto_goTypes = []interface{}{
	(*PlayerAchievement)(nil),                    // 0: player_achievement.PlayerAchievement
	(*GetPlayerAchievementToNotifyRequest)(nil),  // 1: player_achievement.GetPlayerAchievementToNotifyRequest
	(*GetPlayerAchievementToNotifyResponse)(nil), // 2: player_achievement.GetPlayerAchievementToNotifyResponse
	(*SetPlayerAchievementNotifiedRequest)(nil),  // 3: player_achievement.SetPlayerAchievementNotifiedRequest
	(*SetPlayerAchievementNotifiedResponse)(nil), // 4: player_achievement.SetPlayerAchievementNotifiedResponse
	(*Player)(nil),      // 5: player.Player
	(*Achievement)(nil), // 6: achievement.Achievement
}
var file_proto_player_achievement_proto_depIdxs = []int32{
	5, // 0: player_achievement.PlayerAchievement.Player:type_name -> player.Player
	6, // 1: player_achievement.PlayerAchievement.Achievement:type_name -> achievement.Achievement
	0, // 2: player_achievement.GetPlayerAchievementToNotifyResponse.PlayerAchievements:type_name -> player_achievement.PlayerAchievement
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_player_achievement_proto_init() }
func file_proto_player_achievement_proto_init() {
	if File_proto_player_achievement_proto != nil {
		return
	}
	file_proto_player_proto_init()
	file_proto_achievement_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_player_achievement_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerAchievement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_player_achievement_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerAchievementToNotifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_player_achievement_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerAchievementToNotifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_player_achievement_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerAchievementNotifiedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_player_achievement_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerAchievementNotifiedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_player_achievement_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_player_achievement_proto_goTypes,
		DependencyIndexes: file_proto_player_achievement_proto_depIdxs,
		MessageInfos:      file_proto_player_achievement_proto_msgTypes,
	}.Build()
	File_proto_player_achievement_proto = out.File
	file_proto_player_achievement_proto_rawDesc = nil
	file_proto_player_achievement_proto_goTypes = nil
	file_proto_player_achievement_proto_depIdxs = nil
}
