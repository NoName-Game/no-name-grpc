// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/tutorial.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// PlayerStartTutorial
type PlayerStartTutorialRequest struct {
	PlayerID uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
}

func (m *PlayerStartTutorialRequest) Reset()         { *m = PlayerStartTutorialRequest{} }
func (m *PlayerStartTutorialRequest) String() string { return proto.CompactTextString(m) }
func (*PlayerStartTutorialRequest) ProtoMessage()    {}
func (*PlayerStartTutorialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_89006cb20b0184a4, []int{0}
}
func (m *PlayerStartTutorialRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PlayerStartTutorialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PlayerStartTutorialRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PlayerStartTutorialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerStartTutorialRequest.Merge(m, src)
}
func (m *PlayerStartTutorialRequest) XXX_Size() int {
	return m.Size()
}
func (m *PlayerStartTutorialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerStartTutorialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerStartTutorialRequest proto.InternalMessageInfo

func (m *PlayerStartTutorialRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

type PlayerStartTutorialResponse struct {
}

func (m *PlayerStartTutorialResponse) Reset()         { *m = PlayerStartTutorialResponse{} }
func (m *PlayerStartTutorialResponse) String() string { return proto.CompactTextString(m) }
func (*PlayerStartTutorialResponse) ProtoMessage()    {}
func (*PlayerStartTutorialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_89006cb20b0184a4, []int{1}
}
func (m *PlayerStartTutorialResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PlayerStartTutorialResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PlayerStartTutorialResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PlayerStartTutorialResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerStartTutorialResponse.Merge(m, src)
}
func (m *PlayerStartTutorialResponse) XXX_Size() int {
	return m.Size()
}
func (m *PlayerStartTutorialResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerStartTutorialResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerStartTutorialResponse proto.InternalMessageInfo

// PlayerEndTutorial
type PlayerEndTutorialRequest struct {
	PlayerID uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
}

func (m *PlayerEndTutorialRequest) Reset()         { *m = PlayerEndTutorialRequest{} }
func (m *PlayerEndTutorialRequest) String() string { return proto.CompactTextString(m) }
func (*PlayerEndTutorialRequest) ProtoMessage()    {}
func (*PlayerEndTutorialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_89006cb20b0184a4, []int{2}
}
func (m *PlayerEndTutorialRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PlayerEndTutorialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PlayerEndTutorialRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PlayerEndTutorialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerEndTutorialRequest.Merge(m, src)
}
func (m *PlayerEndTutorialRequest) XXX_Size() int {
	return m.Size()
}
func (m *PlayerEndTutorialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerEndTutorialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerEndTutorialRequest proto.InternalMessageInfo

func (m *PlayerEndTutorialRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

type PlayerEndTutorialResponse struct {
}

func (m *PlayerEndTutorialResponse) Reset()         { *m = PlayerEndTutorialResponse{} }
func (m *PlayerEndTutorialResponse) String() string { return proto.CompactTextString(m) }
func (*PlayerEndTutorialResponse) ProtoMessage()    {}
func (*PlayerEndTutorialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_89006cb20b0184a4, []int{3}
}
func (m *PlayerEndTutorialResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PlayerEndTutorialResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PlayerEndTutorialResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PlayerEndTutorialResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerEndTutorialResponse.Merge(m, src)
}
func (m *PlayerEndTutorialResponse) XXX_Size() int {
	return m.Size()
}
func (m *PlayerEndTutorialResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerEndTutorialResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerEndTutorialResponse proto.InternalMessageInfo

// StartTravelTutorial
type StartTravelTutorialRequest struct {
	PlayerID uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
}

func (m *StartTravelTutorialRequest) Reset()         { *m = StartTravelTutorialRequest{} }
func (m *StartTravelTutorialRequest) String() string { return proto.CompactTextString(m) }
func (*StartTravelTutorialRequest) ProtoMessage()    {}
func (*StartTravelTutorialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_89006cb20b0184a4, []int{4}
}
func (m *StartTravelTutorialRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StartTravelTutorialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StartTravelTutorialRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StartTravelTutorialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartTravelTutorialRequest.Merge(m, src)
}
func (m *StartTravelTutorialRequest) XXX_Size() int {
	return m.Size()
}
func (m *StartTravelTutorialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartTravelTutorialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartTravelTutorialRequest proto.InternalMessageInfo

func (m *StartTravelTutorialRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

type StartTravelTutorialResponse struct {
	TravelingEndTime *types.Timestamp `protobuf:"bytes,1,opt,name=TravelingEndTime,proto3" json:"TravelingEndTime,omitempty"`
}

func (m *StartTravelTutorialResponse) Reset()         { *m = StartTravelTutorialResponse{} }
func (m *StartTravelTutorialResponse) String() string { return proto.CompactTextString(m) }
func (*StartTravelTutorialResponse) ProtoMessage()    {}
func (*StartTravelTutorialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_89006cb20b0184a4, []int{5}
}
func (m *StartTravelTutorialResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StartTravelTutorialResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StartTravelTutorialResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StartTravelTutorialResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartTravelTutorialResponse.Merge(m, src)
}
func (m *StartTravelTutorialResponse) XXX_Size() int {
	return m.Size()
}
func (m *StartTravelTutorialResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartTravelTutorialResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartTravelTutorialResponse proto.InternalMessageInfo

func (m *StartTravelTutorialResponse) GetTravelingEndTime() *types.Timestamp {
	if m != nil {
		return m.TravelingEndTime
	}
	return nil
}

func init() {
	proto.RegisterType((*PlayerStartTutorialRequest)(nil), "tutorial.PlayerStartTutorialRequest")
	proto.RegisterType((*PlayerStartTutorialResponse)(nil), "tutorial.PlayerStartTutorialResponse")
	proto.RegisterType((*PlayerEndTutorialRequest)(nil), "tutorial.PlayerEndTutorialRequest")
	proto.RegisterType((*PlayerEndTutorialResponse)(nil), "tutorial.PlayerEndTutorialResponse")
	proto.RegisterType((*StartTravelTutorialRequest)(nil), "tutorial.StartTravelTutorialRequest")
	proto.RegisterType((*StartTravelTutorialResponse)(nil), "tutorial.StartTravelTutorialResponse")
}

func init() { proto.RegisterFile("proto/tutorial.proto", fileDescriptor_89006cb20b0184a4) }

var fileDescriptor_89006cb20b0184a4 = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x29, 0x2d, 0xc9, 0x2f, 0xca, 0x4c, 0xcc, 0xd1, 0x03, 0x73, 0x85, 0x38, 0x60,
	0x7c, 0x29, 0xf9, 0xf4, 0xfc, 0xfc, 0xf4, 0x9c, 0x54, 0x7d, 0xb0, 0x78, 0x52, 0x69, 0x9a, 0x7e,
	0x49, 0x66, 0x6e, 0x6a, 0x71, 0x49, 0x62, 0x6e, 0x01, 0x44, 0xa9, 0x92, 0x05, 0x97, 0x54, 0x40,
	0x4e, 0x62, 0x65, 0x6a, 0x51, 0x70, 0x49, 0x62, 0x51, 0x49, 0x08, 0x54, 0x5f, 0x50, 0x6a, 0x61,
	0x69, 0x6a, 0x71, 0x89, 0x90, 0x14, 0x17, 0x07, 0x44, 0xd6, 0xd3, 0x45, 0x82, 0x51, 0x81, 0x51,
	0x83, 0x37, 0x08, 0xce, 0x57, 0x92, 0xe5, 0x92, 0xc6, 0xaa, 0xb3, 0xb8, 0x20, 0x3f, 0xaf, 0x38,
	0x55, 0xc9, 0x8c, 0x4b, 0x02, 0x22, 0xed, 0x9a, 0x97, 0x42, 0x8a, 0xb1, 0xd2, 0x5c, 0x92, 0x58,
	0xf4, 0x41, 0x0d, 0xb5, 0xe0, 0x92, 0x82, 0xd8, 0x56, 0x94, 0x58, 0x96, 0x9a, 0x43, 0x8a, 0xb1,
	0xa9, 0x5c, 0xd2, 0x58, 0x75, 0x42, 0x0c, 0x16, 0x72, 0xe3, 0x12, 0x80, 0xc8, 0x64, 0xe6, 0xa5,
	0x83, 0x2c, 0xce, 0xcc, 0x4d, 0x05, 0x1b, 0xc1, 0x6d, 0x24, 0xa5, 0x07, 0x09, 0x42, 0x3d, 0x58,
	0x10, 0xea, 0x85, 0xc0, 0x82, 0x30, 0x08, 0x43, 0x8f, 0x93, 0xdc, 0x89, 0x47, 0x72, 0x8c, 0x17,
	0x1e, 0xc9, 0x31, 0x3e, 0x78, 0x24, 0xc7, 0x38, 0xe1, 0xb1, 0x1c, 0xc3, 0x85, 0xc7, 0x72, 0x0c,
	0x37, 0x1e, 0xcb, 0x31, 0x44, 0xb1, 0xe8, 0x59, 0x17, 0x24, 0x25, 0xb1, 0x81, 0x4d, 0x31, 0x06,
	0x04, 0x00, 0x00, 0xff, 0xff, 0xc8, 0x5c, 0xf3, 0x7f, 0xb8, 0x01, 0x00, 0x00,
}

func (m *PlayerStartTutorialRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PlayerStartTutorialRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PlayerStartTutorialRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlayerID != 0 {
		i = encodeVarintTutorial(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PlayerStartTutorialResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PlayerStartTutorialResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PlayerStartTutorialResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *PlayerEndTutorialRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PlayerEndTutorialRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PlayerEndTutorialRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlayerID != 0 {
		i = encodeVarintTutorial(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PlayerEndTutorialResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PlayerEndTutorialResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PlayerEndTutorialResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *StartTravelTutorialRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StartTravelTutorialRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StartTravelTutorialRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlayerID != 0 {
		i = encodeVarintTutorial(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *StartTravelTutorialResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StartTravelTutorialResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StartTravelTutorialResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.TravelingEndTime != nil {
		{
			size, err := m.TravelingEndTime.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTutorial(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTutorial(dAtA []byte, offset int, v uint64) int {
	offset -= sovTutorial(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PlayerStartTutorialRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovTutorial(uint64(m.PlayerID))
	}
	return n
}

func (m *PlayerStartTutorialResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *PlayerEndTutorialRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovTutorial(uint64(m.PlayerID))
	}
	return n
}

func (m *PlayerEndTutorialResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *StartTravelTutorialRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovTutorial(uint64(m.PlayerID))
	}
	return n
}

func (m *StartTravelTutorialResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TravelingEndTime != nil {
		l = m.TravelingEndTime.Size()
		n += 1 + l + sovTutorial(uint64(l))
	}
	return n
}

func sovTutorial(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTutorial(x uint64) (n int) {
	return sovTutorial(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PlayerStartTutorialRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTutorial
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PlayerStartTutorialRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PlayerStartTutorialRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTutorial
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTutorial(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTutorial
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTutorial
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PlayerStartTutorialResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTutorial
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PlayerStartTutorialResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PlayerStartTutorialResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTutorial(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTutorial
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTutorial
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PlayerEndTutorialRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTutorial
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PlayerEndTutorialRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PlayerEndTutorialRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTutorial
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTutorial(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTutorial
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTutorial
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PlayerEndTutorialResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTutorial
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PlayerEndTutorialResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PlayerEndTutorialResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTutorial(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTutorial
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTutorial
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StartTravelTutorialRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTutorial
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StartTravelTutorialRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StartTravelTutorialRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTutorial
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTutorial(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTutorial
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTutorial
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StartTravelTutorialResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTutorial
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StartTravelTutorialResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StartTravelTutorialResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TravelingEndTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTutorial
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTutorial
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTutorial
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TravelingEndTime == nil {
				m.TravelingEndTime = &types.Timestamp{}
			}
			if err := m.TravelingEndTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTutorial(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTutorial
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTutorial
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTutorial(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTutorial
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTutorial
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTutorial
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTutorial
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTutorial
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTutorial
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTutorial        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTutorial          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTutorial = fmt.Errorf("proto: unexpected end of group")
)
