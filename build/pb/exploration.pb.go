// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/exploration.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// ExplorationStart
type ExplorationStartRequest struct {
	PlayerID                uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
	ExplorationCategorySlug string `protobuf:"bytes,2,opt,name=ExplorationCategorySlug,proto3" json:"ExplorationCategorySlug,omitempty"`
}

func (m *ExplorationStartRequest) Reset()         { *m = ExplorationStartRequest{} }
func (m *ExplorationStartRequest) String() string { return proto.CompactTextString(m) }
func (*ExplorationStartRequest) ProtoMessage()    {}
func (*ExplorationStartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_94d06e517803931f, []int{0}
}
func (m *ExplorationStartRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExplorationStartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExplorationStartRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExplorationStartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplorationStartRequest.Merge(m, src)
}
func (m *ExplorationStartRequest) XXX_Size() int {
	return m.Size()
}
func (m *ExplorationStartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplorationStartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExplorationStartRequest proto.InternalMessageInfo

func (m *ExplorationStartRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

func (m *ExplorationStartRequest) GetExplorationCategorySlug() string {
	if m != nil {
		return m.ExplorationCategorySlug
	}
	return ""
}

type ExplorationStartResponse struct {
	FinishAt *types.Timestamp `protobuf:"bytes,9,opt,name=FinishAt,proto3" json:"FinishAt,omitempty"`
}

func (m *ExplorationStartResponse) Reset()         { *m = ExplorationStartResponse{} }
func (m *ExplorationStartResponse) String() string { return proto.CompactTextString(m) }
func (*ExplorationStartResponse) ProtoMessage()    {}
func (*ExplorationStartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_94d06e517803931f, []int{1}
}
func (m *ExplorationStartResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExplorationStartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExplorationStartResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExplorationStartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplorationStartResponse.Merge(m, src)
}
func (m *ExplorationStartResponse) XXX_Size() int {
	return m.Size()
}
func (m *ExplorationStartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplorationStartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExplorationStartResponse proto.InternalMessageInfo

func (m *ExplorationStartResponse) GetFinishAt() *types.Timestamp {
	if m != nil {
		return m.FinishAt
	}
	return nil
}

// ExplorationContinue
type ExplorationContinueRequest struct {
	PlayerID uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
}

func (m *ExplorationContinueRequest) Reset()         { *m = ExplorationContinueRequest{} }
func (m *ExplorationContinueRequest) String() string { return proto.CompactTextString(m) }
func (*ExplorationContinueRequest) ProtoMessage()    {}
func (*ExplorationContinueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_94d06e517803931f, []int{2}
}
func (m *ExplorationContinueRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExplorationContinueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExplorationContinueRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExplorationContinueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplorationContinueRequest.Merge(m, src)
}
func (m *ExplorationContinueRequest) XXX_Size() int {
	return m.Size()
}
func (m *ExplorationContinueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplorationContinueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExplorationContinueRequest proto.InternalMessageInfo

func (m *ExplorationContinueRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

type ExplorationContinueResponse struct {
	FinishAt *types.Timestamp `protobuf:"bytes,9,opt,name=FinishAt,proto3" json:"FinishAt,omitempty"`
}

func (m *ExplorationContinueResponse) Reset()         { *m = ExplorationContinueResponse{} }
func (m *ExplorationContinueResponse) String() string { return proto.CompactTextString(m) }
func (*ExplorationContinueResponse) ProtoMessage()    {}
func (*ExplorationContinueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_94d06e517803931f, []int{3}
}
func (m *ExplorationContinueResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExplorationContinueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExplorationContinueResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExplorationContinueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplorationContinueResponse.Merge(m, src)
}
func (m *ExplorationContinueResponse) XXX_Size() int {
	return m.Size()
}
func (m *ExplorationContinueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplorationContinueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExplorationContinueResponse proto.InternalMessageInfo

func (m *ExplorationContinueResponse) GetFinishAt() *types.Timestamp {
	if m != nil {
		return m.FinishAt
	}
	return nil
}

// ExplorationEnd
type ExplorationEndRequest struct {
	PlayerID uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
	QuickEnd bool   `protobuf:"varint,2,opt,name=QuickEnd,proto3" json:"QuickEnd,omitempty"`
}

func (m *ExplorationEndRequest) Reset()         { *m = ExplorationEndRequest{} }
func (m *ExplorationEndRequest) String() string { return proto.CompactTextString(m) }
func (*ExplorationEndRequest) ProtoMessage()    {}
func (*ExplorationEndRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_94d06e517803931f, []int{4}
}
func (m *ExplorationEndRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExplorationEndRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExplorationEndRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExplorationEndRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplorationEndRequest.Merge(m, src)
}
func (m *ExplorationEndRequest) XXX_Size() int {
	return m.Size()
}
func (m *ExplorationEndRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplorationEndRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExplorationEndRequest proto.InternalMessageInfo

func (m *ExplorationEndRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

func (m *ExplorationEndRequest) GetQuickEnd() bool {
	if m != nil {
		return m.QuickEnd
	}
	return false
}

type ExplorationEndResponse struct {
	DropResults []*ExplorationEndResponse_ExplorationDropResourcesResult `protobuf:"bytes,1,rep,name=DropResults,proto3" json:"DropResults,omitempty"`
	Exp         int32                                                    `protobuf:"varint,2,opt,name=Exp,proto3" json:"Exp,omitempty"`
}

func (m *ExplorationEndResponse) Reset()         { *m = ExplorationEndResponse{} }
func (m *ExplorationEndResponse) String() string { return proto.CompactTextString(m) }
func (*ExplorationEndResponse) ProtoMessage()    {}
func (*ExplorationEndResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_94d06e517803931f, []int{5}
}
func (m *ExplorationEndResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExplorationEndResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExplorationEndResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExplorationEndResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplorationEndResponse.Merge(m, src)
}
func (m *ExplorationEndResponse) XXX_Size() int {
	return m.Size()
}
func (m *ExplorationEndResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplorationEndResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExplorationEndResponse proto.InternalMessageInfo

func (m *ExplorationEndResponse) GetDropResults() []*ExplorationEndResponse_ExplorationDropResourcesResult {
	if m != nil {
		return m.DropResults
	}
	return nil
}

func (m *ExplorationEndResponse) GetExp() int32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

type ExplorationEndResponse_ExplorationDropResourcesResult struct {
	ResourceID uint32 `protobuf:"varint,1,opt,name=ResourceID,proto3" json:"ResourceID,omitempty"`
	Quantity   int32  `protobuf:"varint,2,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
}

func (m *ExplorationEndResponse_ExplorationDropResourcesResult) Reset() {
	*m = ExplorationEndResponse_ExplorationDropResourcesResult{}
}
func (m *ExplorationEndResponse_ExplorationDropResourcesResult) String() string {
	return proto.CompactTextString(m)
}
func (*ExplorationEndResponse_ExplorationDropResourcesResult) ProtoMessage() {}
func (*ExplorationEndResponse_ExplorationDropResourcesResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_94d06e517803931f, []int{5, 0}
}
func (m *ExplorationEndResponse_ExplorationDropResourcesResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExplorationEndResponse_ExplorationDropResourcesResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExplorationEndResponse_ExplorationDropResourcesResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExplorationEndResponse_ExplorationDropResourcesResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplorationEndResponse_ExplorationDropResourcesResult.Merge(m, src)
}
func (m *ExplorationEndResponse_ExplorationDropResourcesResult) XXX_Size() int {
	return m.Size()
}
func (m *ExplorationEndResponse_ExplorationDropResourcesResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplorationEndResponse_ExplorationDropResourcesResult.DiscardUnknown(m)
}

var xxx_messageInfo_ExplorationEndResponse_ExplorationDropResourcesResult proto.InternalMessageInfo

func (m *ExplorationEndResponse_ExplorationDropResourcesResult) GetResourceID() uint32 {
	if m != nil {
		return m.ResourceID
	}
	return 0
}

func (m *ExplorationEndResponse_ExplorationDropResourcesResult) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

// ExplorationCheck
type ExplorationCheckRequest struct {
	PlayerID uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
}

func (m *ExplorationCheckRequest) Reset()         { *m = ExplorationCheckRequest{} }
func (m *ExplorationCheckRequest) String() string { return proto.CompactTextString(m) }
func (*ExplorationCheckRequest) ProtoMessage()    {}
func (*ExplorationCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_94d06e517803931f, []int{6}
}
func (m *ExplorationCheckRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExplorationCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExplorationCheckRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExplorationCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplorationCheckRequest.Merge(m, src)
}
func (m *ExplorationCheckRequest) XXX_Size() int {
	return m.Size()
}
func (m *ExplorationCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplorationCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExplorationCheckRequest proto.InternalMessageInfo

func (m *ExplorationCheckRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

type ExplorationCheckResponse struct {
	InExploration      bool             `protobuf:"varint,1,opt,name=InExploration,proto3" json:"InExploration,omitempty"`
	FinishExploration  bool             `protobuf:"varint,2,opt,name=FinishExploration,proto3" json:"FinishExploration,omitempty"`
	ExplorationEndTime *types.Timestamp `protobuf:"bytes,3,opt,name=ExplorationEndTime,proto3" json:"ExplorationEndTime,omitempty"`
}

func (m *ExplorationCheckResponse) Reset()         { *m = ExplorationCheckResponse{} }
func (m *ExplorationCheckResponse) String() string { return proto.CompactTextString(m) }
func (*ExplorationCheckResponse) ProtoMessage()    {}
func (*ExplorationCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_94d06e517803931f, []int{7}
}
func (m *ExplorationCheckResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExplorationCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExplorationCheckResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExplorationCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplorationCheckResponse.Merge(m, src)
}
func (m *ExplorationCheckResponse) XXX_Size() int {
	return m.Size()
}
func (m *ExplorationCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplorationCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExplorationCheckResponse proto.InternalMessageInfo

func (m *ExplorationCheckResponse) GetInExploration() bool {
	if m != nil {
		return m.InExploration
	}
	return false
}

func (m *ExplorationCheckResponse) GetFinishExploration() bool {
	if m != nil {
		return m.FinishExploration
	}
	return false
}

func (m *ExplorationCheckResponse) GetExplorationEndTime() *types.Timestamp {
	if m != nil {
		return m.ExplorationEndTime
	}
	return nil
}

// ExplorationDropResources
type ExplorationDropResourcesRequest struct {
	PlayerID uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
}

func (m *ExplorationDropResourcesRequest) Reset()         { *m = ExplorationDropResourcesRequest{} }
func (m *ExplorationDropResourcesRequest) String() string { return proto.CompactTextString(m) }
func (*ExplorationDropResourcesRequest) ProtoMessage()    {}
func (*ExplorationDropResourcesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_94d06e517803931f, []int{8}
}
func (m *ExplorationDropResourcesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExplorationDropResourcesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExplorationDropResourcesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExplorationDropResourcesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplorationDropResourcesRequest.Merge(m, src)
}
func (m *ExplorationDropResourcesRequest) XXX_Size() int {
	return m.Size()
}
func (m *ExplorationDropResourcesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplorationDropResourcesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExplorationDropResourcesRequest proto.InternalMessageInfo

func (m *ExplorationDropResourcesRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

type ExplorationDropResourcesResponse struct {
	CycleDropResults []*ExplorationDropResourcesResponse_DropResult `protobuf:"bytes,1,rep,name=CycleDropResults,proto3" json:"CycleDropResults,omitempty"`
	AllDropResults   []*ExplorationDropResourcesResponse_DropResult `protobuf:"bytes,2,rep,name=AllDropResults,proto3" json:"AllDropResults,omitempty"`
}

func (m *ExplorationDropResourcesResponse) Reset()         { *m = ExplorationDropResourcesResponse{} }
func (m *ExplorationDropResourcesResponse) String() string { return proto.CompactTextString(m) }
func (*ExplorationDropResourcesResponse) ProtoMessage()    {}
func (*ExplorationDropResourcesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_94d06e517803931f, []int{9}
}
func (m *ExplorationDropResourcesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExplorationDropResourcesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExplorationDropResourcesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExplorationDropResourcesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplorationDropResourcesResponse.Merge(m, src)
}
func (m *ExplorationDropResourcesResponse) XXX_Size() int {
	return m.Size()
}
func (m *ExplorationDropResourcesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplorationDropResourcesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExplorationDropResourcesResponse proto.InternalMessageInfo

func (m *ExplorationDropResourcesResponse) GetCycleDropResults() []*ExplorationDropResourcesResponse_DropResult {
	if m != nil {
		return m.CycleDropResults
	}
	return nil
}

func (m *ExplorationDropResourcesResponse) GetAllDropResults() []*ExplorationDropResourcesResponse_DropResult {
	if m != nil {
		return m.AllDropResults
	}
	return nil
}

type ExplorationDropResourcesResponse_DropResult struct {
	ResourceID uint32 `protobuf:"varint,1,opt,name=ResourceID,proto3" json:"ResourceID,omitempty"`
	Quantity   int32  `protobuf:"varint,2,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	Bonus      bool   `protobuf:"varint,3,opt,name=Bonus,proto3" json:"Bonus,omitempty"`
}

func (m *ExplorationDropResourcesResponse_DropResult) Reset() {
	*m = ExplorationDropResourcesResponse_DropResult{}
}
func (m *ExplorationDropResourcesResponse_DropResult) String() string {
	return proto.CompactTextString(m)
}
func (*ExplorationDropResourcesResponse_DropResult) ProtoMessage() {}
func (*ExplorationDropResourcesResponse_DropResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_94d06e517803931f, []int{9, 0}
}
func (m *ExplorationDropResourcesResponse_DropResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExplorationDropResourcesResponse_DropResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExplorationDropResourcesResponse_DropResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExplorationDropResourcesResponse_DropResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplorationDropResourcesResponse_DropResult.Merge(m, src)
}
func (m *ExplorationDropResourcesResponse_DropResult) XXX_Size() int {
	return m.Size()
}
func (m *ExplorationDropResourcesResponse_DropResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplorationDropResourcesResponse_DropResult.DiscardUnknown(m)
}

var xxx_messageInfo_ExplorationDropResourcesResponse_DropResult proto.InternalMessageInfo

func (m *ExplorationDropResourcesResponse_DropResult) GetResourceID() uint32 {
	if m != nil {
		return m.ResourceID
	}
	return 0
}

func (m *ExplorationDropResourcesResponse_DropResult) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *ExplorationDropResourcesResponse_DropResult) GetBonus() bool {
	if m != nil {
		return m.Bonus
	}
	return false
}

func init() {
	proto.RegisterType((*ExplorationStartRequest)(nil), "exploration.ExplorationStartRequest")
	proto.RegisterType((*ExplorationStartResponse)(nil), "exploration.ExplorationStartResponse")
	proto.RegisterType((*ExplorationContinueRequest)(nil), "exploration.ExplorationContinueRequest")
	proto.RegisterType((*ExplorationContinueResponse)(nil), "exploration.ExplorationContinueResponse")
	proto.RegisterType((*ExplorationEndRequest)(nil), "exploration.ExplorationEndRequest")
	proto.RegisterType((*ExplorationEndResponse)(nil), "exploration.ExplorationEndResponse")
	proto.RegisterType((*ExplorationEndResponse_ExplorationDropResourcesResult)(nil), "exploration.ExplorationEndResponse.ExplorationDropResourcesResult")
	proto.RegisterType((*ExplorationCheckRequest)(nil), "exploration.ExplorationCheckRequest")
	proto.RegisterType((*ExplorationCheckResponse)(nil), "exploration.ExplorationCheckResponse")
	proto.RegisterType((*ExplorationDropResourcesRequest)(nil), "exploration.ExplorationDropResourcesRequest")
	proto.RegisterType((*ExplorationDropResourcesResponse)(nil), "exploration.ExplorationDropResourcesResponse")
	proto.RegisterType((*ExplorationDropResourcesResponse_DropResult)(nil), "exploration.ExplorationDropResourcesResponse.DropResult")
}

func init() { proto.RegisterFile("proto/exploration.proto", fileDescriptor_94d06e517803931f) }

var fileDescriptor_94d06e517803931f = []byte{
	// 498 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x52, 0x4d, 0x6b, 0x13, 0x41,
	0x18, 0xce, 0x24, 0x56, 0xb6, 0x6f, 0xa8, 0xd4, 0x41, 0xed, 0xb2, 0xc2, 0x74, 0x59, 0x3c, 0xe4,
	0x20, 0x1b, 0xa8, 0x28, 0x01, 0xf1, 0xd0, 0xb4, 0x11, 0xea, 0x45, 0x9d, 0xea, 0x45, 0x44, 0xdc,
	0x24, 0x63, 0xba, 0x74, 0x3b, 0xb3, 0xee, 0xcc, 0x40, 0xf3, 0x2f, 0xfc, 0x3d, 0xfe, 0x02, 0xf1,
	0xd4, 0xa3, 0x47, 0x49, 0xee, 0xfe, 0x06, 0xe9, 0xee, 0x66, 0x33, 0xdb, 0x6c, 0x9a, 0x40, 0x6e,
	0xf3, 0x7e, 0x3d, 0xef, 0x3c, 0xef, 0xf3, 0xc0, 0x5e, 0x9c, 0x08, 0x25, 0xda, 0xec, 0x32, 0x8e,
	0x44, 0x12, 0xa8, 0x50, 0x70, 0x3f, 0xcd, 0xe0, 0xa6, 0x91, 0x72, 0xf6, 0x47, 0x42, 0x8c, 0x22,
	0xd6, 0x4e, 0x4b, 0x7d, 0xfd, 0xad, 0xad, 0xc2, 0x0b, 0x26, 0x55, 0x70, 0x11, 0x67, 0xdd, 0x9e,
	0x80, 0xbd, 0xde, 0xbc, 0xff, 0x54, 0x05, 0x89, 0xa2, 0xec, 0xbb, 0x66, 0x52, 0x61, 0x07, 0xac,
	0x77, 0x51, 0x30, 0x66, 0xc9, 0xc9, 0xb1, 0x8d, 0x5c, 0xd4, 0xda, 0xa1, 0x45, 0x8c, 0x3b, 0xa5,
	0xb1, 0xa3, 0x40, 0xb1, 0x91, 0x48, 0xc6, 0xa7, 0x91, 0x1e, 0xd9, 0x75, 0x17, 0xb5, 0xb6, 0xe9,
	0xb2, 0xb2, 0x47, 0xc1, 0x5e, 0x5c, 0x28, 0x63, 0xc1, 0x25, 0xc3, 0x2f, 0xc0, 0x7a, 0x1d, 0xf2,
	0x50, 0x9e, 0x1d, 0x2a, 0x7b, 0xdb, 0x45, 0xad, 0xe6, 0x81, 0xe3, 0x67, 0x04, 0xfc, 0x19, 0x01,
	0xff, 0xc3, 0x8c, 0x00, 0x2d, 0x7a, 0xbd, 0x0e, 0x38, 0xe6, 0x3a, 0xc1, 0x55, 0xc8, 0x35, 0x5b,
	0x83, 0x87, 0xf7, 0x11, 0x1e, 0x57, 0x4e, 0x6e, 0xf8, 0xa1, 0xb7, 0xf0, 0xd0, 0x80, 0xed, 0xf1,
	0xe1, 0x3a, 0x37, 0x75, 0xc0, 0x7a, 0xaf, 0xc3, 0xc1, 0x79, 0x8f, 0x0f, 0xd3, 0x23, 0x5a, 0xb4,
	0x88, 0xbd, 0x7f, 0x08, 0x1e, 0xdd, 0x44, 0xcc, 0xff, 0x38, 0x84, 0xe6, 0x71, 0x22, 0x62, 0xca,
	0xa4, 0x8e, 0x94, 0xb4, 0x91, 0xdb, 0x68, 0x35, 0x0f, 0xba, 0xbe, 0x69, 0x8c, 0xea, 0x49, 0x33,
	0x9d, 0x23, 0x08, 0x9d, 0x0c, 0x98, 0xcc, 0xa0, 0xa8, 0x09, 0x8b, 0x77, 0xa1, 0xd1, 0xbb, 0x8c,
	0xd3, 0x7f, 0x6d, 0xd1, 0xeb, 0xa7, 0xf3, 0x19, 0xc8, 0xed, 0x00, 0x98, 0x00, 0xcc, 0x52, 0x05,
	0x5d, 0x23, 0x93, 0x11, 0x0e, 0xb8, 0x0a, 0xd5, 0x38, 0x07, 0x2e, 0x62, 0xef, 0x79, 0xd9, 0x60,
	0x67, 0x6c, 0x70, 0xbe, 0x8e, 0x9e, 0x3f, 0x51, 0xc9, 0x5e, 0xf9, 0x5c, 0x7e, 0xa9, 0x27, 0xb0,
	0x73, 0xc2, 0x8d, 0x6a, 0x3a, 0x6d, 0xd1, 0x72, 0x12, 0x3f, 0x85, 0xfb, 0x99, 0x8e, 0x66, 0x67,
	0xa6, 0xc7, 0x62, 0x01, 0xbf, 0x01, 0x5c, 0xbe, 0xee, 0xb5, 0x1d, 0xec, 0xc6, 0x4a, 0xaf, 0x54,
	0x4c, 0x79, 0xaf, 0x60, 0x7f, 0xf9, 0x45, 0x57, 0x73, 0xff, 0x5d, 0x07, 0xf7, 0x16, 0x45, 0x66,
	0x6e, 0xd9, 0x3d, 0x1a, 0x0f, 0x22, 0xb6, 0x68, 0x99, 0xce, 0x32, 0xcb, 0x54, 0x02, 0xf9, 0x73,
	0x00, 0xba, 0x80, 0x88, 0xbf, 0xc2, 0xbd, 0xc3, 0x28, 0x32, 0x77, 0xd4, 0x37, 0xdc, 0x71, 0x03,
	0xcf, 0xf9, 0x02, 0x30, 0x0f, 0x37, 0x71, 0x1a, 0x7e, 0x00, 0x5b, 0x5d, 0xc1, 0xb5, 0x4c, 0x45,
	0xb3, 0x68, 0x16, 0x74, 0xc9, 0xaf, 0x09, 0x41, 0x57, 0x13, 0x82, 0xfe, 0x4e, 0x08, 0xfa, 0x31,
	0x25, 0xb5, 0xab, 0x29, 0xa9, 0xfd, 0x99, 0x92, 0xda, 0xa7, 0x3b, 0xfe, 0xcb, 0xb8, 0xdf, 0xbf,
	0x9b, 0x6a, 0xfa, 0xec, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9f, 0x1b, 0x68, 0x8a, 0x87, 0x05,
	0x00, 0x00,
}

func (m *ExplorationStartRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExplorationStartRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExplorationStartRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ExplorationCategorySlug) > 0 {
		i -= len(m.ExplorationCategorySlug)
		copy(dAtA[i:], m.ExplorationCategorySlug)
		i = encodeVarintExploration(dAtA, i, uint64(len(m.ExplorationCategorySlug)))
		i--
		dAtA[i] = 0x12
	}
	if m.PlayerID != 0 {
		i = encodeVarintExploration(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ExplorationStartResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExplorationStartResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExplorationStartResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.FinishAt != nil {
		{
			size, err := m.FinishAt.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintExploration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	return len(dAtA) - i, nil
}

func (m *ExplorationContinueRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExplorationContinueRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExplorationContinueRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlayerID != 0 {
		i = encodeVarintExploration(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ExplorationContinueResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExplorationContinueResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExplorationContinueResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.FinishAt != nil {
		{
			size, err := m.FinishAt.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintExploration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	return len(dAtA) - i, nil
}

func (m *ExplorationEndRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExplorationEndRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExplorationEndRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.QuickEnd {
		i--
		if m.QuickEnd {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.PlayerID != 0 {
		i = encodeVarintExploration(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ExplorationEndResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExplorationEndResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExplorationEndResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Exp != 0 {
		i = encodeVarintExploration(dAtA, i, uint64(m.Exp))
		i--
		dAtA[i] = 0x10
	}
	if len(m.DropResults) > 0 {
		for iNdEx := len(m.DropResults) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.DropResults[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintExploration(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ExplorationEndResponse_ExplorationDropResourcesResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExplorationEndResponse_ExplorationDropResourcesResult) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExplorationEndResponse_ExplorationDropResourcesResult) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Quantity != 0 {
		i = encodeVarintExploration(dAtA, i, uint64(m.Quantity))
		i--
		dAtA[i] = 0x10
	}
	if m.ResourceID != 0 {
		i = encodeVarintExploration(dAtA, i, uint64(m.ResourceID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ExplorationCheckRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExplorationCheckRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExplorationCheckRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlayerID != 0 {
		i = encodeVarintExploration(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ExplorationCheckResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExplorationCheckResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExplorationCheckResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ExplorationEndTime != nil {
		{
			size, err := m.ExplorationEndTime.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintExploration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.FinishExploration {
		i--
		if m.FinishExploration {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.InExploration {
		i--
		if m.InExploration {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ExplorationDropResourcesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExplorationDropResourcesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExplorationDropResourcesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlayerID != 0 {
		i = encodeVarintExploration(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ExplorationDropResourcesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExplorationDropResourcesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExplorationDropResourcesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AllDropResults) > 0 {
		for iNdEx := len(m.AllDropResults) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AllDropResults[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintExploration(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.CycleDropResults) > 0 {
		for iNdEx := len(m.CycleDropResults) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.CycleDropResults[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintExploration(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ExplorationDropResourcesResponse_DropResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExplorationDropResourcesResponse_DropResult) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExplorationDropResourcesResponse_DropResult) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Bonus {
		i--
		if m.Bonus {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Quantity != 0 {
		i = encodeVarintExploration(dAtA, i, uint64(m.Quantity))
		i--
		dAtA[i] = 0x10
	}
	if m.ResourceID != 0 {
		i = encodeVarintExploration(dAtA, i, uint64(m.ResourceID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintExploration(dAtA []byte, offset int, v uint64) int {
	offset -= sovExploration(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ExplorationStartRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovExploration(uint64(m.PlayerID))
	}
	l = len(m.ExplorationCategorySlug)
	if l > 0 {
		n += 1 + l + sovExploration(uint64(l))
	}
	return n
}

func (m *ExplorationStartResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FinishAt != nil {
		l = m.FinishAt.Size()
		n += 1 + l + sovExploration(uint64(l))
	}
	return n
}

func (m *ExplorationContinueRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovExploration(uint64(m.PlayerID))
	}
	return n
}

func (m *ExplorationContinueResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FinishAt != nil {
		l = m.FinishAt.Size()
		n += 1 + l + sovExploration(uint64(l))
	}
	return n
}

func (m *ExplorationEndRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovExploration(uint64(m.PlayerID))
	}
	if m.QuickEnd {
		n += 2
	}
	return n
}

func (m *ExplorationEndResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.DropResults) > 0 {
		for _, e := range m.DropResults {
			l = e.Size()
			n += 1 + l + sovExploration(uint64(l))
		}
	}
	if m.Exp != 0 {
		n += 1 + sovExploration(uint64(m.Exp))
	}
	return n
}

func (m *ExplorationEndResponse_ExplorationDropResourcesResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ResourceID != 0 {
		n += 1 + sovExploration(uint64(m.ResourceID))
	}
	if m.Quantity != 0 {
		n += 1 + sovExploration(uint64(m.Quantity))
	}
	return n
}

func (m *ExplorationCheckRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovExploration(uint64(m.PlayerID))
	}
	return n
}

func (m *ExplorationCheckResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InExploration {
		n += 2
	}
	if m.FinishExploration {
		n += 2
	}
	if m.ExplorationEndTime != nil {
		l = m.ExplorationEndTime.Size()
		n += 1 + l + sovExploration(uint64(l))
	}
	return n
}

func (m *ExplorationDropResourcesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovExploration(uint64(m.PlayerID))
	}
	return n
}

func (m *ExplorationDropResourcesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.CycleDropResults) > 0 {
		for _, e := range m.CycleDropResults {
			l = e.Size()
			n += 1 + l + sovExploration(uint64(l))
		}
	}
	if len(m.AllDropResults) > 0 {
		for _, e := range m.AllDropResults {
			l = e.Size()
			n += 1 + l + sovExploration(uint64(l))
		}
	}
	return n
}

func (m *ExplorationDropResourcesResponse_DropResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ResourceID != 0 {
		n += 1 + sovExploration(uint64(m.ResourceID))
	}
	if m.Quantity != 0 {
		n += 1 + sovExploration(uint64(m.Quantity))
	}
	if m.Bonus {
		n += 2
	}
	return n
}

func sovExploration(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozExploration(x uint64) (n int) {
	return sovExploration(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ExplorationStartRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowExploration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExplorationStartRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExplorationStartRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExplorationCategorySlug", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthExploration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthExploration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExplorationCategorySlug = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipExploration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExplorationStartResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowExploration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExplorationStartResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExplorationStartResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinishAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthExploration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthExploration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FinishAt == nil {
				m.FinishAt = &types.Timestamp{}
			}
			if err := m.FinishAt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipExploration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExplorationContinueRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowExploration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExplorationContinueRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExplorationContinueRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipExploration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExplorationContinueResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowExploration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExplorationContinueResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExplorationContinueResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinishAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthExploration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthExploration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FinishAt == nil {
				m.FinishAt = &types.Timestamp{}
			}
			if err := m.FinishAt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipExploration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExplorationEndRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowExploration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExplorationEndRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExplorationEndRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QuickEnd", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.QuickEnd = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipExploration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExplorationEndResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowExploration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExplorationEndResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExplorationEndResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DropResults", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthExploration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthExploration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DropResults = append(m.DropResults, &ExplorationEndResponse_ExplorationDropResourcesResult{})
			if err := m.DropResults[len(m.DropResults)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Exp", wireType)
			}
			m.Exp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Exp |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipExploration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExplorationEndResponse_ExplorationDropResourcesResult) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowExploration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExplorationDropResourcesResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExplorationDropResourcesResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceID", wireType)
			}
			m.ResourceID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResourceID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Quantity", wireType)
			}
			m.Quantity = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Quantity |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipExploration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExplorationCheckRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowExploration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExplorationCheckRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExplorationCheckRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipExploration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExplorationCheckResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowExploration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExplorationCheckResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExplorationCheckResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InExploration", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InExploration = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinishExploration", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FinishExploration = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExplorationEndTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthExploration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthExploration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ExplorationEndTime == nil {
				m.ExplorationEndTime = &types.Timestamp{}
			}
			if err := m.ExplorationEndTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipExploration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExplorationDropResourcesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowExploration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExplorationDropResourcesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExplorationDropResourcesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipExploration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExplorationDropResourcesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowExploration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExplorationDropResourcesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExplorationDropResourcesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CycleDropResults", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthExploration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthExploration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CycleDropResults = append(m.CycleDropResults, &ExplorationDropResourcesResponse_DropResult{})
			if err := m.CycleDropResults[len(m.CycleDropResults)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllDropResults", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthExploration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthExploration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllDropResults = append(m.AllDropResults, &ExplorationDropResourcesResponse_DropResult{})
			if err := m.AllDropResults[len(m.AllDropResults)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipExploration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExplorationDropResourcesResponse_DropResult) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowExploration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DropResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DropResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceID", wireType)
			}
			m.ResourceID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResourceID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Quantity", wireType)
			}
			m.Quantity = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Quantity |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bonus", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Bonus = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipExploration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthExploration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipExploration(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowExploration
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowExploration
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthExploration
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupExploration
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthExploration
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthExploration        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowExploration          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupExploration = fmt.Errorf("proto: unexpected end of group")
)
