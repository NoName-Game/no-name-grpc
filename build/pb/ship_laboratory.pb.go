// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/ship_laboratory.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// LaboratoryStartCrafting
type LaboratoryStartCraftingRequest struct {
	PlayerID uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
	ItemID   uint32 `protobuf:"varint,2,opt,name=ItemID,proto3" json:"ItemID,omitempty"`
}

func (m *LaboratoryStartCraftingRequest) Reset()         { *m = LaboratoryStartCraftingRequest{} }
func (m *LaboratoryStartCraftingRequest) String() string { return proto.CompactTextString(m) }
func (*LaboratoryStartCraftingRequest) ProtoMessage()    {}
func (*LaboratoryStartCraftingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a8037840dc645ab, []int{0}
}
func (m *LaboratoryStartCraftingRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LaboratoryStartCraftingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LaboratoryStartCraftingRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LaboratoryStartCraftingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LaboratoryStartCraftingRequest.Merge(m, src)
}
func (m *LaboratoryStartCraftingRequest) XXX_Size() int {
	return m.Size()
}
func (m *LaboratoryStartCraftingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LaboratoryStartCraftingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LaboratoryStartCraftingRequest proto.InternalMessageInfo

func (m *LaboratoryStartCraftingRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

func (m *LaboratoryStartCraftingRequest) GetItemID() uint32 {
	if m != nil {
		return m.ItemID
	}
	return 0
}

type LaboratoryStartCraftingResponse struct {
	CraftingEndTime *types.Timestamp `protobuf:"bytes,1,opt,name=CraftingEndTime,proto3" json:"CraftingEndTime,omitempty"`
}

func (m *LaboratoryStartCraftingResponse) Reset()         { *m = LaboratoryStartCraftingResponse{} }
func (m *LaboratoryStartCraftingResponse) String() string { return proto.CompactTextString(m) }
func (*LaboratoryStartCraftingResponse) ProtoMessage()    {}
func (*LaboratoryStartCraftingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a8037840dc645ab, []int{1}
}
func (m *LaboratoryStartCraftingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LaboratoryStartCraftingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LaboratoryStartCraftingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LaboratoryStartCraftingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LaboratoryStartCraftingResponse.Merge(m, src)
}
func (m *LaboratoryStartCraftingResponse) XXX_Size() int {
	return m.Size()
}
func (m *LaboratoryStartCraftingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LaboratoryStartCraftingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LaboratoryStartCraftingResponse proto.InternalMessageInfo

func (m *LaboratoryStartCraftingResponse) GetCraftingEndTime() *types.Timestamp {
	if m != nil {
		return m.CraftingEndTime
	}
	return nil
}

// LaboratoryCheckHaveResourceForCrafting
type LaboratoryCheckHaveResourceForCraftingRequest struct {
	PlayerID uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
	ItemID   uint32 `protobuf:"varint,2,opt,name=ItemID,proto3" json:"ItemID,omitempty"`
}

func (m *LaboratoryCheckHaveResourceForCraftingRequest) Reset() {
	*m = LaboratoryCheckHaveResourceForCraftingRequest{}
}
func (m *LaboratoryCheckHaveResourceForCraftingRequest) String() string {
	return proto.CompactTextString(m)
}
func (*LaboratoryCheckHaveResourceForCraftingRequest) ProtoMessage() {}
func (*LaboratoryCheckHaveResourceForCraftingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a8037840dc645ab, []int{2}
}
func (m *LaboratoryCheckHaveResourceForCraftingRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LaboratoryCheckHaveResourceForCraftingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LaboratoryCheckHaveResourceForCraftingRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LaboratoryCheckHaveResourceForCraftingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LaboratoryCheckHaveResourceForCraftingRequest.Merge(m, src)
}
func (m *LaboratoryCheckHaveResourceForCraftingRequest) XXX_Size() int {
	return m.Size()
}
func (m *LaboratoryCheckHaveResourceForCraftingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LaboratoryCheckHaveResourceForCraftingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LaboratoryCheckHaveResourceForCraftingRequest proto.InternalMessageInfo

func (m *LaboratoryCheckHaveResourceForCraftingRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

func (m *LaboratoryCheckHaveResourceForCraftingRequest) GetItemID() uint32 {
	if m != nil {
		return m.ItemID
	}
	return 0
}

type LaboratoryCheckHaveResourceForCraftingResponse struct {
	HaveResources bool `protobuf:"varint,1,opt,name=HaveResources,proto3" json:"HaveResources,omitempty"`
}

func (m *LaboratoryCheckHaveResourceForCraftingResponse) Reset() {
	*m = LaboratoryCheckHaveResourceForCraftingResponse{}
}
func (m *LaboratoryCheckHaveResourceForCraftingResponse) String() string {
	return proto.CompactTextString(m)
}
func (*LaboratoryCheckHaveResourceForCraftingResponse) ProtoMessage() {}
func (*LaboratoryCheckHaveResourceForCraftingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a8037840dc645ab, []int{3}
}
func (m *LaboratoryCheckHaveResourceForCraftingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LaboratoryCheckHaveResourceForCraftingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LaboratoryCheckHaveResourceForCraftingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LaboratoryCheckHaveResourceForCraftingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LaboratoryCheckHaveResourceForCraftingResponse.Merge(m, src)
}
func (m *LaboratoryCheckHaveResourceForCraftingResponse) XXX_Size() int {
	return m.Size()
}
func (m *LaboratoryCheckHaveResourceForCraftingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LaboratoryCheckHaveResourceForCraftingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LaboratoryCheckHaveResourceForCraftingResponse proto.InternalMessageInfo

func (m *LaboratoryCheckHaveResourceForCraftingResponse) GetHaveResources() bool {
	if m != nil {
		return m.HaveResources
	}
	return false
}

// LaboratoryCheckCrafting
type LaboratoryCheckCraftingRequest struct {
	PlayerID uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
}

func (m *LaboratoryCheckCraftingRequest) Reset()         { *m = LaboratoryCheckCraftingRequest{} }
func (m *LaboratoryCheckCraftingRequest) String() string { return proto.CompactTextString(m) }
func (*LaboratoryCheckCraftingRequest) ProtoMessage()    {}
func (*LaboratoryCheckCraftingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a8037840dc645ab, []int{4}
}
func (m *LaboratoryCheckCraftingRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LaboratoryCheckCraftingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LaboratoryCheckCraftingRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LaboratoryCheckCraftingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LaboratoryCheckCraftingRequest.Merge(m, src)
}
func (m *LaboratoryCheckCraftingRequest) XXX_Size() int {
	return m.Size()
}
func (m *LaboratoryCheckCraftingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LaboratoryCheckCraftingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LaboratoryCheckCraftingRequest proto.InternalMessageInfo

func (m *LaboratoryCheckCraftingRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

type LaboratoryCheckCraftingResponse struct {
	CraftInProgress bool             `protobuf:"varint,1,opt,name=CraftInProgress,proto3" json:"CraftInProgress,omitempty"`
	FinishCrafting  bool             `protobuf:"varint,2,opt,name=FinishCrafting,proto3" json:"FinishCrafting,omitempty"`
	CraftingEndTime *types.Timestamp `protobuf:"bytes,3,opt,name=CraftingEndTime,proto3" json:"CraftingEndTime,omitempty"`
}

func (m *LaboratoryCheckCraftingResponse) Reset()         { *m = LaboratoryCheckCraftingResponse{} }
func (m *LaboratoryCheckCraftingResponse) String() string { return proto.CompactTextString(m) }
func (*LaboratoryCheckCraftingResponse) ProtoMessage()    {}
func (*LaboratoryCheckCraftingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a8037840dc645ab, []int{5}
}
func (m *LaboratoryCheckCraftingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LaboratoryCheckCraftingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LaboratoryCheckCraftingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LaboratoryCheckCraftingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LaboratoryCheckCraftingResponse.Merge(m, src)
}
func (m *LaboratoryCheckCraftingResponse) XXX_Size() int {
	return m.Size()
}
func (m *LaboratoryCheckCraftingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LaboratoryCheckCraftingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LaboratoryCheckCraftingResponse proto.InternalMessageInfo

func (m *LaboratoryCheckCraftingResponse) GetCraftInProgress() bool {
	if m != nil {
		return m.CraftInProgress
	}
	return false
}

func (m *LaboratoryCheckCraftingResponse) GetFinishCrafting() bool {
	if m != nil {
		return m.FinishCrafting
	}
	return false
}

func (m *LaboratoryCheckCraftingResponse) GetCraftingEndTime() *types.Timestamp {
	if m != nil {
		return m.CraftingEndTime
	}
	return nil
}

// LaboratoryEndCrafting
type LaboratoryEndCraftingRequest struct {
	PlayerID uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
}

func (m *LaboratoryEndCraftingRequest) Reset()         { *m = LaboratoryEndCraftingRequest{} }
func (m *LaboratoryEndCraftingRequest) String() string { return proto.CompactTextString(m) }
func (*LaboratoryEndCraftingRequest) ProtoMessage()    {}
func (*LaboratoryEndCraftingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a8037840dc645ab, []int{6}
}
func (m *LaboratoryEndCraftingRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LaboratoryEndCraftingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LaboratoryEndCraftingRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LaboratoryEndCraftingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LaboratoryEndCraftingRequest.Merge(m, src)
}
func (m *LaboratoryEndCraftingRequest) XXX_Size() int {
	return m.Size()
}
func (m *LaboratoryEndCraftingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LaboratoryEndCraftingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LaboratoryEndCraftingRequest proto.InternalMessageInfo

func (m *LaboratoryEndCraftingRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

type LaboratoryEndCraftingResponse struct {
	Item *Item `protobuf:"bytes,1,opt,name=Item,proto3" json:"Item,omitempty"`
}

func (m *LaboratoryEndCraftingResponse) Reset()         { *m = LaboratoryEndCraftingResponse{} }
func (m *LaboratoryEndCraftingResponse) String() string { return proto.CompactTextString(m) }
func (*LaboratoryEndCraftingResponse) ProtoMessage()    {}
func (*LaboratoryEndCraftingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a8037840dc645ab, []int{7}
}
func (m *LaboratoryEndCraftingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LaboratoryEndCraftingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LaboratoryEndCraftingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LaboratoryEndCraftingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LaboratoryEndCraftingResponse.Merge(m, src)
}
func (m *LaboratoryEndCraftingResponse) XXX_Size() int {
	return m.Size()
}
func (m *LaboratoryEndCraftingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LaboratoryEndCraftingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LaboratoryEndCraftingResponse proto.InternalMessageInfo

func (m *LaboratoryEndCraftingResponse) GetItem() *Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func init() {
	proto.RegisterType((*LaboratoryStartCraftingRequest)(nil), "ship_laboratory.LaboratoryStartCraftingRequest")
	proto.RegisterType((*LaboratoryStartCraftingResponse)(nil), "ship_laboratory.LaboratoryStartCraftingResponse")
	proto.RegisterType((*LaboratoryCheckHaveResourceForCraftingRequest)(nil), "ship_laboratory.LaboratoryCheckHaveResourceForCraftingRequest")
	proto.RegisterType((*LaboratoryCheckHaveResourceForCraftingResponse)(nil), "ship_laboratory.LaboratoryCheckHaveResourceForCraftingResponse")
	proto.RegisterType((*LaboratoryCheckCraftingRequest)(nil), "ship_laboratory.LaboratoryCheckCraftingRequest")
	proto.RegisterType((*LaboratoryCheckCraftingResponse)(nil), "ship_laboratory.LaboratoryCheckCraftingResponse")
	proto.RegisterType((*LaboratoryEndCraftingRequest)(nil), "ship_laboratory.LaboratoryEndCraftingRequest")
	proto.RegisterType((*LaboratoryEndCraftingResponse)(nil), "ship_laboratory.LaboratoryEndCraftingResponse")
}

func init() { proto.RegisterFile("proto/ship_laboratory.proto", fileDescriptor_9a8037840dc645ab) }

var fileDescriptor_9a8037840dc645ab = []byte{
	// 380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xcf, 0x4a, 0xeb, 0x40,
	0x14, 0xc6, 0x9b, 0x7b, 0x4b, 0x29, 0xe7, 0xd2, 0xdb, 0x4b, 0x16, 0x97, 0x12, 0x75, 0x2a, 0x41,
	0xa4, 0x1b, 0x53, 0xd0, 0x9d, 0x0a, 0x82, 0xfd, 0x83, 0x01, 0x17, 0x25, 0x16, 0x17, 0x6e, 0x24,
	0x69, 0x4f, 0xd3, 0xc1, 0x26, 0x13, 0x67, 0xa6, 0x42, 0xdf, 0xc2, 0xd7, 0xf1, 0x0d, 0x5c, 0x76,
	0xe9, 0x52, 0xda, 0x17, 0x91, 0x4e, 0x92, 0xb6, 0x06, 0x0b, 0x16, 0x5c, 0xce, 0x6f, 0xe6, 0x7c,
	0xe7, 0x7c, 0xdf, 0x19, 0xd8, 0x89, 0x38, 0x93, 0xac, 0x2e, 0x86, 0x34, 0xba, 0x1f, 0xb9, 0x1e,
	0xe3, 0xae, 0x64, 0x7c, 0x62, 0x29, 0xaa, 0x97, 0x33, 0xd8, 0xa8, 0xfa, 0x8c, 0xf9, 0x23, 0xac,
	0xab, 0x6b, 0x6f, 0x3c, 0xa8, 0x4b, 0x1a, 0xa0, 0x90, 0x6e, 0x10, 0xc5, 0x15, 0xc6, 0xbf, 0x58,
	0x8e, 0x4a, 0x0c, 0x62, 0x62, 0x76, 0x81, 0x5c, 0x2f, 0x05, 0x6e, 0xa4, 0xcb, 0x65, 0x83, 0xbb,
	0x03, 0x49, 0x43, 0xdf, 0xc1, 0xc7, 0x31, 0x0a, 0xa9, 0x1b, 0x50, 0xec, 0x8c, 0xdc, 0x09, 0x72,
	0xbb, 0x59, 0xd1, 0xf6, 0xb5, 0x5a, 0xc9, 0x59, 0x9e, 0xf5, 0xff, 0x50, 0xb0, 0x25, 0x06, 0x76,
	0xb3, 0xf2, 0x4b, 0xdd, 0x24, 0x27, 0xd3, 0x87, 0xea, 0x46, 0x55, 0x11, 0xb1, 0x50, 0xa0, 0xde,
	0x84, 0x72, 0xca, 0x5a, 0x61, 0xbf, 0x4b, 0x03, 0x54, 0xea, 0x7f, 0x8e, 0x0d, 0x2b, 0x76, 0x61,
	0xa5, 0x2e, 0xac, 0x6e, 0xea, 0xc2, 0xc9, 0x96, 0x98, 0x3d, 0x38, 0x5a, 0x35, 0x6a, 0x0c, 0xb1,
	0xf7, 0x70, 0xe5, 0x3e, 0xa1, 0x83, 0x82, 0x8d, 0x79, 0x0f, 0xdb, 0x8c, 0xff, 0x84, 0x9b, 0x5b,
	0xb0, 0xbe, 0xdb, 0x24, 0x31, 0x77, 0x00, 0xa5, 0xf5, 0x27, 0x42, 0xb5, 0x2a, 0x3a, 0x9f, 0xa1,
	0x79, 0xbe, 0x9e, 0xbd, 0xd2, 0xdd, 0x62, 0x5a, 0xf3, 0x45, 0x5b, 0x0f, 0x39, 0x53, 0x9e, 0xcc,
	0x51, 0x4b, 0x42, 0xb6, 0xc3, 0x0e, 0x67, 0x3e, 0x47, 0x91, 0x4e, 0x92, 0xc5, 0xfa, 0x21, 0xfc,
	0x6d, 0xd3, 0x90, 0x8a, 0x61, 0xaa, 0xa1, 0x32, 0x28, 0x3a, 0x19, 0xfa, 0xd5, 0xda, 0x7e, 0x6f,
	0xbf, 0xb6, 0x53, 0xd8, 0x5d, 0x8d, 0xde, 0x0a, 0xfb, 0xdb, 0xf8, 0xbe, 0x80, 0xbd, 0x0d, 0xb5,
	0x89, 0x69, 0x02, 0xf9, 0xc5, 0xe2, 0x92, 0xef, 0x04, 0x96, 0xfa, 0xed, 0x0b, 0xe2, 0x28, 0x7e,
	0x49, 0x5e, 0x67, 0x44, 0x9b, 0xce, 0x88, 0xf6, 0x3e, 0x23, 0xda, 0xf3, 0x9c, 0xe4, 0xa6, 0x73,
	0x92, 0x7b, 0x9b, 0x93, 0xdc, 0x5d, 0xde, 0x3a, 0x8b, 0x3c, 0xaf, 0xa0, 0x1c, 0x9c, 0x7c, 0x04,
	0x00, 0x00, 0xff, 0xff, 0xb8, 0xed, 0x95, 0x52, 0x7c, 0x03, 0x00, 0x00,
}

func (m *LaboratoryStartCraftingRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LaboratoryStartCraftingRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LaboratoryStartCraftingRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ItemID != 0 {
		i = encodeVarintShipLaboratory(dAtA, i, uint64(m.ItemID))
		i--
		dAtA[i] = 0x10
	}
	if m.PlayerID != 0 {
		i = encodeVarintShipLaboratory(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *LaboratoryStartCraftingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LaboratoryStartCraftingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LaboratoryStartCraftingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CraftingEndTime != nil {
		{
			size, err := m.CraftingEndTime.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintShipLaboratory(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LaboratoryCheckHaveResourceForCraftingRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LaboratoryCheckHaveResourceForCraftingRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LaboratoryCheckHaveResourceForCraftingRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ItemID != 0 {
		i = encodeVarintShipLaboratory(dAtA, i, uint64(m.ItemID))
		i--
		dAtA[i] = 0x10
	}
	if m.PlayerID != 0 {
		i = encodeVarintShipLaboratory(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *LaboratoryCheckHaveResourceForCraftingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LaboratoryCheckHaveResourceForCraftingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LaboratoryCheckHaveResourceForCraftingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.HaveResources {
		i--
		if m.HaveResources {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *LaboratoryCheckCraftingRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LaboratoryCheckCraftingRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LaboratoryCheckCraftingRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlayerID != 0 {
		i = encodeVarintShipLaboratory(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *LaboratoryCheckCraftingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LaboratoryCheckCraftingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LaboratoryCheckCraftingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CraftingEndTime != nil {
		{
			size, err := m.CraftingEndTime.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintShipLaboratory(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.FinishCrafting {
		i--
		if m.FinishCrafting {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.CraftInProgress {
		i--
		if m.CraftInProgress {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *LaboratoryEndCraftingRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LaboratoryEndCraftingRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LaboratoryEndCraftingRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlayerID != 0 {
		i = encodeVarintShipLaboratory(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *LaboratoryEndCraftingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LaboratoryEndCraftingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LaboratoryEndCraftingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Item != nil {
		{
			size, err := m.Item.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintShipLaboratory(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintShipLaboratory(dAtA []byte, offset int, v uint64) int {
	offset -= sovShipLaboratory(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *LaboratoryStartCraftingRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovShipLaboratory(uint64(m.PlayerID))
	}
	if m.ItemID != 0 {
		n += 1 + sovShipLaboratory(uint64(m.ItemID))
	}
	return n
}

func (m *LaboratoryStartCraftingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CraftingEndTime != nil {
		l = m.CraftingEndTime.Size()
		n += 1 + l + sovShipLaboratory(uint64(l))
	}
	return n
}

func (m *LaboratoryCheckHaveResourceForCraftingRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovShipLaboratory(uint64(m.PlayerID))
	}
	if m.ItemID != 0 {
		n += 1 + sovShipLaboratory(uint64(m.ItemID))
	}
	return n
}

func (m *LaboratoryCheckHaveResourceForCraftingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HaveResources {
		n += 2
	}
	return n
}

func (m *LaboratoryCheckCraftingRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovShipLaboratory(uint64(m.PlayerID))
	}
	return n
}

func (m *LaboratoryCheckCraftingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CraftInProgress {
		n += 2
	}
	if m.FinishCrafting {
		n += 2
	}
	if m.CraftingEndTime != nil {
		l = m.CraftingEndTime.Size()
		n += 1 + l + sovShipLaboratory(uint64(l))
	}
	return n
}

func (m *LaboratoryEndCraftingRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovShipLaboratory(uint64(m.PlayerID))
	}
	return n
}

func (m *LaboratoryEndCraftingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Item != nil {
		l = m.Item.Size()
		n += 1 + l + sovShipLaboratory(uint64(l))
	}
	return n
}

func sovShipLaboratory(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozShipLaboratory(x uint64) (n int) {
	return sovShipLaboratory(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *LaboratoryStartCraftingRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShipLaboratory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LaboratoryStartCraftingRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LaboratoryStartCraftingRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShipLaboratory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemID", wireType)
			}
			m.ItemID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShipLaboratory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipShipLaboratory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LaboratoryStartCraftingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShipLaboratory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LaboratoryStartCraftingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LaboratoryStartCraftingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CraftingEndTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShipLaboratory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CraftingEndTime == nil {
				m.CraftingEndTime = &types.Timestamp{}
			}
			if err := m.CraftingEndTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShipLaboratory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LaboratoryCheckHaveResourceForCraftingRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShipLaboratory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LaboratoryCheckHaveResourceForCraftingRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LaboratoryCheckHaveResourceForCraftingRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShipLaboratory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemID", wireType)
			}
			m.ItemID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShipLaboratory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipShipLaboratory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LaboratoryCheckHaveResourceForCraftingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShipLaboratory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LaboratoryCheckHaveResourceForCraftingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LaboratoryCheckHaveResourceForCraftingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HaveResources", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShipLaboratory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HaveResources = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipShipLaboratory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LaboratoryCheckCraftingRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShipLaboratory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LaboratoryCheckCraftingRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LaboratoryCheckCraftingRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShipLaboratory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipShipLaboratory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LaboratoryCheckCraftingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShipLaboratory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LaboratoryCheckCraftingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LaboratoryCheckCraftingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CraftInProgress", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShipLaboratory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CraftInProgress = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinishCrafting", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShipLaboratory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FinishCrafting = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CraftingEndTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShipLaboratory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CraftingEndTime == nil {
				m.CraftingEndTime = &types.Timestamp{}
			}
			if err := m.CraftingEndTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShipLaboratory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LaboratoryEndCraftingRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShipLaboratory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LaboratoryEndCraftingRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LaboratoryEndCraftingRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShipLaboratory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipShipLaboratory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LaboratoryEndCraftingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShipLaboratory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LaboratoryEndCraftingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LaboratoryEndCraftingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Item", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShipLaboratory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Item == nil {
				m.Item = &Item{}
			}
			if err := m.Item.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShipLaboratory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShipLaboratory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipShipLaboratory(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowShipLaboratory
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowShipLaboratory
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowShipLaboratory
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthShipLaboratory
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupShipLaboratory
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthShipLaboratory
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthShipLaboratory        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowShipLaboratory          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupShipLaboratory = fmt.Errorf("proto: unexpected end of group")
)
