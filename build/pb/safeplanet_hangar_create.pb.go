// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/safeplanet_hangar_create.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// GetCreateShipInfo
type GetCreateShipInfoRequest struct {
	RarityID             uint32   `protobuf:"varint,1,opt,name=RarityID,proto3" json:"RarityID,omitempty"`
	CategoryID           uint32   `protobuf:"varint,2,opt,name=CategoryID,proto3" json:"CategoryID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCreateShipInfoRequest) Reset()         { *m = GetCreateShipInfoRequest{} }
func (m *GetCreateShipInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetCreateShipInfoRequest) ProtoMessage()    {}
func (*GetCreateShipInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a700c4d4aee9e48, []int{0}
}
func (m *GetCreateShipInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetCreateShipInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetCreateShipInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetCreateShipInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCreateShipInfoRequest.Merge(m, src)
}
func (m *GetCreateShipInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetCreateShipInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCreateShipInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCreateShipInfoRequest proto.InternalMessageInfo

func (m *GetCreateShipInfoRequest) GetRarityID() uint32 {
	if m != nil {
		return m.RarityID
	}
	return 0
}

func (m *GetCreateShipInfoRequest) GetCategoryID() uint32 {
	if m != nil {
		return m.CategoryID
	}
	return 0
}

type GetCreateShipInfoResponse struct {
	Price                int32    `protobuf:"varint,1,opt,name=Price,proto3" json:"Price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCreateShipInfoResponse) Reset()         { *m = GetCreateShipInfoResponse{} }
func (m *GetCreateShipInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetCreateShipInfoResponse) ProtoMessage()    {}
func (*GetCreateShipInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a700c4d4aee9e48, []int{1}
}
func (m *GetCreateShipInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetCreateShipInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetCreateShipInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetCreateShipInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCreateShipInfoResponse.Merge(m, src)
}
func (m *GetCreateShipInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetCreateShipInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCreateShipInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCreateShipInfoResponse proto.InternalMessageInfo

func (m *GetCreateShipInfoResponse) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

// StartCreateShip
type StartCreateShipRequest struct {
	RarityID             uint32   `protobuf:"varint,1,opt,name=RarityID,proto3" json:"RarityID,omitempty"`
	CategoryID           uint32   `protobuf:"varint,2,opt,name=CategoryID,proto3" json:"CategoryID,omitempty"`
	PlayerID             uint32   `protobuf:"varint,3,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartCreateShipRequest) Reset()         { *m = StartCreateShipRequest{} }
func (m *StartCreateShipRequest) String() string { return proto.CompactTextString(m) }
func (*StartCreateShipRequest) ProtoMessage()    {}
func (*StartCreateShipRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a700c4d4aee9e48, []int{2}
}
func (m *StartCreateShipRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StartCreateShipRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StartCreateShipRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StartCreateShipRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartCreateShipRequest.Merge(m, src)
}
func (m *StartCreateShipRequest) XXX_Size() int {
	return m.Size()
}
func (m *StartCreateShipRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartCreateShipRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartCreateShipRequest proto.InternalMessageInfo

func (m *StartCreateShipRequest) GetRarityID() uint32 {
	if m != nil {
		return m.RarityID
	}
	return 0
}

func (m *StartCreateShipRequest) GetCategoryID() uint32 {
	if m != nil {
		return m.CategoryID
	}
	return 0
}

func (m *StartCreateShipRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

type StartCreateShipResponse struct {
	ShipCreateEndTime    *types.Timestamp `protobuf:"bytes,1,opt,name=ShipCreateEndTime,proto3" json:"ShipCreateEndTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *StartCreateShipResponse) Reset()         { *m = StartCreateShipResponse{} }
func (m *StartCreateShipResponse) String() string { return proto.CompactTextString(m) }
func (*StartCreateShipResponse) ProtoMessage()    {}
func (*StartCreateShipResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a700c4d4aee9e48, []int{3}
}
func (m *StartCreateShipResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StartCreateShipResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StartCreateShipResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StartCreateShipResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartCreateShipResponse.Merge(m, src)
}
func (m *StartCreateShipResponse) XXX_Size() int {
	return m.Size()
}
func (m *StartCreateShipResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartCreateShipResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartCreateShipResponse proto.InternalMessageInfo

func (m *StartCreateShipResponse) GetShipCreateEndTime() *types.Timestamp {
	if m != nil {
		return m.ShipCreateEndTime
	}
	return nil
}

// CheckCreateShip
type CheckCreateShipRequest struct {
	PlayerID             uint32   `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckCreateShipRequest) Reset()         { *m = CheckCreateShipRequest{} }
func (m *CheckCreateShipRequest) String() string { return proto.CompactTextString(m) }
func (*CheckCreateShipRequest) ProtoMessage()    {}
func (*CheckCreateShipRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a700c4d4aee9e48, []int{4}
}
func (m *CheckCreateShipRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CheckCreateShipRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CheckCreateShipRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CheckCreateShipRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckCreateShipRequest.Merge(m, src)
}
func (m *CheckCreateShipRequest) XXX_Size() int {
	return m.Size()
}
func (m *CheckCreateShipRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckCreateShipRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckCreateShipRequest proto.InternalMessageInfo

func (m *CheckCreateShipRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

type CheckCreateShipResponse struct {
	ShipCreateInProgress bool             `protobuf:"varint,1,opt,name=ShipCreateInProgress,proto3" json:"ShipCreateInProgress,omitempty"`
	FinishShipCreating   bool             `protobuf:"varint,2,opt,name=FinishShipCreating,proto3" json:"FinishShipCreating,omitempty"`
	ShipCreatingEndTime  *types.Timestamp `protobuf:"bytes,3,opt,name=ShipCreatingEndTime,proto3" json:"ShipCreatingEndTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CheckCreateShipResponse) Reset()         { *m = CheckCreateShipResponse{} }
func (m *CheckCreateShipResponse) String() string { return proto.CompactTextString(m) }
func (*CheckCreateShipResponse) ProtoMessage()    {}
func (*CheckCreateShipResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a700c4d4aee9e48, []int{5}
}
func (m *CheckCreateShipResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CheckCreateShipResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CheckCreateShipResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CheckCreateShipResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckCreateShipResponse.Merge(m, src)
}
func (m *CheckCreateShipResponse) XXX_Size() int {
	return m.Size()
}
func (m *CheckCreateShipResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckCreateShipResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckCreateShipResponse proto.InternalMessageInfo

func (m *CheckCreateShipResponse) GetShipCreateInProgress() bool {
	if m != nil {
		return m.ShipCreateInProgress
	}
	return false
}

func (m *CheckCreateShipResponse) GetFinishShipCreating() bool {
	if m != nil {
		return m.FinishShipCreating
	}
	return false
}

func (m *CheckCreateShipResponse) GetShipCreatingEndTime() *types.Timestamp {
	if m != nil {
		return m.ShipCreatingEndTime
	}
	return nil
}

// EndCreateShip
type EndCreateShipRequest struct {
	PlayerID             uint32   `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndCreateShipRequest) Reset()         { *m = EndCreateShipRequest{} }
func (m *EndCreateShipRequest) String() string { return proto.CompactTextString(m) }
func (*EndCreateShipRequest) ProtoMessage()    {}
func (*EndCreateShipRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a700c4d4aee9e48, []int{6}
}
func (m *EndCreateShipRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EndCreateShipRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EndCreateShipRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EndCreateShipRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndCreateShipRequest.Merge(m, src)
}
func (m *EndCreateShipRequest) XXX_Size() int {
	return m.Size()
}
func (m *EndCreateShipRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EndCreateShipRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EndCreateShipRequest proto.InternalMessageInfo

func (m *EndCreateShipRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

type EndCreateShipResponse struct {
	Ship                 *Ship    `protobuf:"bytes,1,opt,name=Ship,proto3" json:"Ship,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndCreateShipResponse) Reset()         { *m = EndCreateShipResponse{} }
func (m *EndCreateShipResponse) String() string { return proto.CompactTextString(m) }
func (*EndCreateShipResponse) ProtoMessage()    {}
func (*EndCreateShipResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a700c4d4aee9e48, []int{7}
}
func (m *EndCreateShipResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EndCreateShipResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EndCreateShipResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EndCreateShipResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndCreateShipResponse.Merge(m, src)
}
func (m *EndCreateShipResponse) XXX_Size() int {
	return m.Size()
}
func (m *EndCreateShipResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EndCreateShipResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EndCreateShipResponse proto.InternalMessageInfo

func (m *EndCreateShipResponse) GetShip() *Ship {
	if m != nil {
		return m.Ship
	}
	return nil
}

func init() {
	proto.RegisterType((*GetCreateShipInfoRequest)(nil), "safeplanet_hangar_create.GetCreateShipInfoRequest")
	proto.RegisterType((*GetCreateShipInfoResponse)(nil), "safeplanet_hangar_create.GetCreateShipInfoResponse")
	proto.RegisterType((*StartCreateShipRequest)(nil), "safeplanet_hangar_create.StartCreateShipRequest")
	proto.RegisterType((*StartCreateShipResponse)(nil), "safeplanet_hangar_create.StartCreateShipResponse")
	proto.RegisterType((*CheckCreateShipRequest)(nil), "safeplanet_hangar_create.CheckCreateShipRequest")
	proto.RegisterType((*CheckCreateShipResponse)(nil), "safeplanet_hangar_create.CheckCreateShipResponse")
	proto.RegisterType((*EndCreateShipRequest)(nil), "safeplanet_hangar_create.EndCreateShipRequest")
	proto.RegisterType((*EndCreateShipResponse)(nil), "safeplanet_hangar_create.EndCreateShipResponse")
}

func init() {
	proto.RegisterFile("proto/safeplanet_hangar_create.proto", fileDescriptor_2a700c4d4aee9e48)
}

var fileDescriptor_2a700c4d4aee9e48 = []byte{
	// 383 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x41, 0x4f, 0xfa, 0x30,
	0x18, 0xc6, 0xb3, 0x3f, 0xf0, 0x0f, 0x79, 0x8d, 0x89, 0x56, 0x84, 0xb9, 0xc3, 0x34, 0x8b, 0x07,
	0x4f, 0x23, 0xa2, 0x89, 0x07, 0x6f, 0x02, 0xea, 0x12, 0x0f, 0x64, 0x10, 0x0f, 0x5e, 0x48, 0x19,
	0x65, 0x6b, 0x84, 0x76, 0xb6, 0xe5, 0xc0, 0x37, 0x34, 0xf1, 0xe2, 0x47, 0x30, 0x7c, 0x12, 0xb3,
	0x6e, 0x43, 0x02, 0x33, 0xc6, 0xc4, 0xe3, 0xd3, 0xe7, 0xfd, 0xbd, 0x7d, 0xfa, 0x6c, 0x70, 0x1a,
	0x0b, 0xae, 0x78, 0x53, 0xe2, 0x09, 0x89, 0xa7, 0x98, 0x11, 0x35, 0x8c, 0x30, 0x0b, 0xb1, 0x18,
	0x06, 0x82, 0x60, 0x45, 0x5c, 0x6d, 0x23, 0xf3, 0x3b, 0xdf, 0xda, 0xcb, 0xf8, 0x88, 0xc6, 0xe9,
	0xac, 0x75, 0x1c, 0x72, 0x1e, 0x4e, 0x49, 0x53, 0xab, 0xd1, 0x7c, 0xd2, 0x54, 0x74, 0x46, 0xa4,
	0xc2, 0xb3, 0x6c, 0xc0, 0x79, 0x04, 0xf3, 0x8e, 0xa8, 0xb6, 0xe6, 0xfb, 0x11, 0x8d, 0x3d, 0x36,
	0xe1, 0x3e, 0x79, 0x99, 0x13, 0xa9, 0x90, 0x05, 0x55, 0x1f, 0x0b, 0xaa, 0x16, 0x5e, 0xc7, 0x34,
	0x4e, 0x8c, 0xb3, 0x5d, 0x7f, 0xa5, 0x91, 0x0d, 0xd0, 0xc6, 0x8a, 0x84, 0x5c, 0x24, 0xee, 0x3f,
	0xed, 0xae, 0x9d, 0x38, 0xe7, 0x70, 0x54, 0xb0, 0x57, 0xc6, 0x9c, 0x49, 0x82, 0x6a, 0x50, 0xe9,
	0x09, 0x1a, 0x10, 0xbd, 0xb5, 0xe2, 0xa7, 0xc2, 0x89, 0xa1, 0xde, 0x57, 0x58, 0xac, 0x41, 0x7f,
	0x10, 0x24, 0x61, 0x7b, 0x53, 0xbc, 0x20, 0xc2, 0xeb, 0x98, 0xa5, 0x94, 0xcd, 0xb5, 0x13, 0x40,
	0x63, 0xeb, 0xc6, 0x2c, 0xe2, 0x3d, 0xec, 0x27, 0x3a, 0x75, 0xba, 0x6c, 0x3c, 0xa0, 0xb3, 0x34,
	0xee, 0x4e, 0xcb, 0x72, 0xd3, 0x52, 0xdd, 0xbc, 0x54, 0x77, 0x90, 0x97, 0xea, 0x6f, 0x43, 0xce,
	0x25, 0xd4, 0xdb, 0x11, 0x09, 0x9e, 0x0b, 0x9f, 0xb5, 0x8a, 0x66, 0x6c, 0x44, 0x7b, 0x33, 0xa0,
	0xb1, 0x85, 0x65, 0xd9, 0x5a, 0x50, 0xfb, 0xba, 0xc6, 0x63, 0x3d, 0xc1, 0x43, 0x41, 0xa4, 0xd4,
	0x3b, 0xaa, 0x7e, 0xa1, 0x87, 0x5c, 0x40, 0xb7, 0x94, 0x51, 0x19, 0xad, 0x5c, 0xca, 0x42, 0x5d,
	0x57, 0xd5, 0x2f, 0x70, 0xd0, 0x03, 0x1c, 0xac, 0xeb, 0xbc, 0x81, 0xd2, 0x8f, 0x0d, 0x14, 0x61,
	0x4e, 0x0b, 0x6a, 0x5d, 0x36, 0xfe, 0x5d, 0x03, 0x57, 0x70, 0xb8, 0xc1, 0x64, 0xcf, 0xb7, 0xa1,
	0x9c, 0xe8, 0xec, 0x6b, 0x80, 0xab, 0x7f, 0x77, 0x3d, 0xa1, 0xcf, 0x6f, 0xd0, 0xeb, 0xd2, 0x36,
	0xde, 0x97, 0xb6, 0xf1, 0xb1, 0xb4, 0x8d, 0xa7, 0xb2, 0x7b, 0x1d, 0x8f, 0x46, 0xff, 0x75, 0xd2,
	0x8b, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x41, 0x17, 0x5c, 0x84, 0x62, 0x03, 0x00, 0x00,
}

func (m *GetCreateShipInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetCreateShipInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetCreateShipInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CategoryID != 0 {
		i = encodeVarintSafeplanetHangarCreate(dAtA, i, uint64(m.CategoryID))
		i--
		dAtA[i] = 0x10
	}
	if m.RarityID != 0 {
		i = encodeVarintSafeplanetHangarCreate(dAtA, i, uint64(m.RarityID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetCreateShipInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetCreateShipInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetCreateShipInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Price != 0 {
		i = encodeVarintSafeplanetHangarCreate(dAtA, i, uint64(m.Price))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *StartCreateShipRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StartCreateShipRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StartCreateShipRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PlayerID != 0 {
		i = encodeVarintSafeplanetHangarCreate(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x18
	}
	if m.CategoryID != 0 {
		i = encodeVarintSafeplanetHangarCreate(dAtA, i, uint64(m.CategoryID))
		i--
		dAtA[i] = 0x10
	}
	if m.RarityID != 0 {
		i = encodeVarintSafeplanetHangarCreate(dAtA, i, uint64(m.RarityID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *StartCreateShipResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StartCreateShipResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StartCreateShipResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ShipCreateEndTime != nil {
		{
			size, err := m.ShipCreateEndTime.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSafeplanetHangarCreate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CheckCreateShipRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CheckCreateShipRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CheckCreateShipRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PlayerID != 0 {
		i = encodeVarintSafeplanetHangarCreate(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CheckCreateShipResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CheckCreateShipResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CheckCreateShipResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ShipCreatingEndTime != nil {
		{
			size, err := m.ShipCreatingEndTime.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSafeplanetHangarCreate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.FinishShipCreating {
		i--
		if m.FinishShipCreating {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.ShipCreateInProgress {
		i--
		if m.ShipCreateInProgress {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *EndCreateShipRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EndCreateShipRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EndCreateShipRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PlayerID != 0 {
		i = encodeVarintSafeplanetHangarCreate(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *EndCreateShipResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EndCreateShipResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EndCreateShipResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ship != nil {
		{
			size, err := m.Ship.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSafeplanetHangarCreate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintSafeplanetHangarCreate(dAtA []byte, offset int, v uint64) int {
	offset -= sovSafeplanetHangarCreate(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetCreateShipInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RarityID != 0 {
		n += 1 + sovSafeplanetHangarCreate(uint64(m.RarityID))
	}
	if m.CategoryID != 0 {
		n += 1 + sovSafeplanetHangarCreate(uint64(m.CategoryID))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetCreateShipInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Price != 0 {
		n += 1 + sovSafeplanetHangarCreate(uint64(m.Price))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StartCreateShipRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RarityID != 0 {
		n += 1 + sovSafeplanetHangarCreate(uint64(m.RarityID))
	}
	if m.CategoryID != 0 {
		n += 1 + sovSafeplanetHangarCreate(uint64(m.CategoryID))
	}
	if m.PlayerID != 0 {
		n += 1 + sovSafeplanetHangarCreate(uint64(m.PlayerID))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StartCreateShipResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ShipCreateEndTime != nil {
		l = m.ShipCreateEndTime.Size()
		n += 1 + l + sovSafeplanetHangarCreate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CheckCreateShipRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovSafeplanetHangarCreate(uint64(m.PlayerID))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CheckCreateShipResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ShipCreateInProgress {
		n += 2
	}
	if m.FinishShipCreating {
		n += 2
	}
	if m.ShipCreatingEndTime != nil {
		l = m.ShipCreatingEndTime.Size()
		n += 1 + l + sovSafeplanetHangarCreate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EndCreateShipRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovSafeplanetHangarCreate(uint64(m.PlayerID))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EndCreateShipResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Ship != nil {
		l = m.Ship.Size()
		n += 1 + l + sovSafeplanetHangarCreate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovSafeplanetHangarCreate(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSafeplanetHangarCreate(x uint64) (n int) {
	return sovSafeplanetHangarCreate(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetCreateShipInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetHangarCreate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetCreateShipInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetCreateShipInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RarityID", wireType)
			}
			m.RarityID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetHangarCreate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RarityID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CategoryID", wireType)
			}
			m.CategoryID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetHangarCreate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CategoryID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetHangarCreate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetCreateShipInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetHangarCreate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetCreateShipInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetCreateShipInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			m.Price = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetHangarCreate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Price |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetHangarCreate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StartCreateShipRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetHangarCreate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StartCreateShipRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StartCreateShipRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RarityID", wireType)
			}
			m.RarityID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetHangarCreate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RarityID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CategoryID", wireType)
			}
			m.CategoryID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetHangarCreate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CategoryID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetHangarCreate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetHangarCreate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StartCreateShipResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetHangarCreate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StartCreateShipResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StartCreateShipResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShipCreateEndTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetHangarCreate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ShipCreateEndTime == nil {
				m.ShipCreateEndTime = &types.Timestamp{}
			}
			if err := m.ShipCreateEndTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetHangarCreate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CheckCreateShipRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetHangarCreate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheckCreateShipRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheckCreateShipRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetHangarCreate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetHangarCreate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CheckCreateShipResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetHangarCreate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheckCreateShipResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheckCreateShipResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShipCreateInProgress", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetHangarCreate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ShipCreateInProgress = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinishShipCreating", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetHangarCreate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FinishShipCreating = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShipCreatingEndTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetHangarCreate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ShipCreatingEndTime == nil {
				m.ShipCreatingEndTime = &types.Timestamp{}
			}
			if err := m.ShipCreatingEndTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetHangarCreate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EndCreateShipRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetHangarCreate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EndCreateShipRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EndCreateShipRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetHangarCreate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetHangarCreate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EndCreateShipResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetHangarCreate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EndCreateShipResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EndCreateShipResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ship", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetHangarCreate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ship == nil {
				m.Ship = &Ship{}
			}
			if err := m.Ship.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetHangarCreate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetHangarCreate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSafeplanetHangarCreate(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSafeplanetHangarCreate
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSafeplanetHangarCreate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSafeplanetHangarCreate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSafeplanetHangarCreate
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSafeplanetHangarCreate
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSafeplanetHangarCreate
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSafeplanetHangarCreate        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSafeplanetHangarCreate          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSafeplanetHangarCreate = fmt.Errorf("proto: unexpected end of group")
)
