// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: planet.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Planet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             uint32        `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name           string        `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	X              float64       `protobuf:"fixed64,3,opt,name=X,proto3" json:"X,omitempty"`
	Y              float64       `protobuf:"fixed64,4,opt,name=Y,proto3" json:"Y,omitempty"`
	Z              float64       `protobuf:"fixed64,5,opt,name=Z,proto3" json:"Z,omitempty"`
	HashPosition   string        `protobuf:"bytes,6,opt,name=HashPosition,proto3" json:"HashPosition,omitempty"`
	PlayerID       uint32        `protobuf:"varint,7,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
	BiomeID        uint32        `protobuf:"varint,8,opt,name=BiomeID,proto3" json:"BiomeID,omitempty"`
	Biome          *Biome        `protobuf:"bytes,9,opt,name=Biome,proto3" json:"Biome,omitempty"`
	AtmosphereID   uint32        `protobuf:"varint,10,opt,name=AtmosphereID,proto3" json:"AtmosphereID,omitempty"`
	Atmosphere     *Atmosphere   `protobuf:"bytes,11,opt,name=Atmosphere,proto3" json:"Atmosphere,omitempty"`
	MapID          uint32        `protobuf:"varint,12,opt,name=MapID,proto3" json:"MapID,omitempty"`
	Maps           *Maps         `protobuf:"bytes,13,opt,name=Maps,proto3" json:"Maps,omitempty"`
	Resources      string        `protobuf:"bytes,14,opt,name=Resources,proto3" json:"Resources,omitempty"`
	Safe           bool          `protobuf:"varint,15,opt,name=Safe,proto3" json:"Safe,omitempty"`
	Titan          bool          `protobuf:"varint,16,opt,name=Titan,proto3" json:"Titan,omitempty"`
	PlanetSystemID uint32        `protobuf:"varint,17,opt,name=PlanetSystemID,proto3" json:"PlanetSystemID,omitempty"`
	PlanetSystem   *PlanetSystem `protobuf:"bytes,18,opt,name=PlanetSystem,proto3" json:"PlanetSystem,omitempty"`
}

func (x *Planet) Reset() {
	*x = Planet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_planet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Planet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Planet) ProtoMessage() {}

func (x *Planet) ProtoReflect() protoreflect.Message {
	mi := &file_planet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Planet.ProtoReflect.Descriptor instead.
func (*Planet) Descriptor() ([]byte, []int) {
	return file_planet_proto_rawDescGZIP(), []int{0}
}

func (x *Planet) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Planet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Planet) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Planet) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Planet) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *Planet) GetHashPosition() string {
	if x != nil {
		return x.HashPosition
	}
	return ""
}

func (x *Planet) GetPlayerID() uint32 {
	if x != nil {
		return x.PlayerID
	}
	return 0
}

func (x *Planet) GetBiomeID() uint32 {
	if x != nil {
		return x.BiomeID
	}
	return 0
}

func (x *Planet) GetBiome() *Biome {
	if x != nil {
		return x.Biome
	}
	return nil
}

func (x *Planet) GetAtmosphereID() uint32 {
	if x != nil {
		return x.AtmosphereID
	}
	return 0
}

func (x *Planet) GetAtmosphere() *Atmosphere {
	if x != nil {
		return x.Atmosphere
	}
	return nil
}

func (x *Planet) GetMapID() uint32 {
	if x != nil {
		return x.MapID
	}
	return 0
}

func (x *Planet) GetMaps() *Maps {
	if x != nil {
		return x.Maps
	}
	return nil
}

func (x *Planet) GetResources() string {
	if x != nil {
		return x.Resources
	}
	return ""
}

func (x *Planet) GetSafe() bool {
	if x != nil {
		return x.Safe
	}
	return false
}

func (x *Planet) GetTitan() bool {
	if x != nil {
		return x.Titan
	}
	return false
}

func (x *Planet) GetPlanetSystemID() uint32 {
	if x != nil {
		return x.PlanetSystemID
	}
	return 0
}

func (x *Planet) GetPlanetSystem() *PlanetSystem {
	if x != nil {
		return x.PlanetSystem
	}
	return nil
}

// GetPlanetByCoordinate
type GetPlanetByCoordinateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float64 `protobuf:"fixed64,1,opt,name=X,proto3" json:"X,omitempty"`
	Y float64 `protobuf:"fixed64,2,opt,name=Y,proto3" json:"Y,omitempty"`
	Z float64 `protobuf:"fixed64,3,opt,name=Z,proto3" json:"Z,omitempty"`
}

func (x *GetPlanetByCoordinateRequest) Reset() {
	*x = GetPlanetByCoordinateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_planet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlanetByCoordinateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanetByCoordinateRequest) ProtoMessage() {}

func (x *GetPlanetByCoordinateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_planet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanetByCoordinateRequest.ProtoReflect.Descriptor instead.
func (*GetPlanetByCoordinateRequest) Descriptor() ([]byte, []int) {
	return file_planet_proto_rawDescGZIP(), []int{1}
}

func (x *GetPlanetByCoordinateRequest) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *GetPlanetByCoordinateRequest) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *GetPlanetByCoordinateRequest) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

type GetPlanetByCoordinateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Planet *Planet `protobuf:"bytes,1,opt,name=Planet,proto3" json:"Planet,omitempty"`
}

func (x *GetPlanetByCoordinateResponse) Reset() {
	*x = GetPlanetByCoordinateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_planet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlanetByCoordinateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanetByCoordinateResponse) ProtoMessage() {}

func (x *GetPlanetByCoordinateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_planet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanetByCoordinateResponse.ProtoReflect.Descriptor instead.
func (*GetPlanetByCoordinateResponse) Descriptor() ([]byte, []int) {
	return file_planet_proto_rawDescGZIP(), []int{2}
}

func (x *GetPlanetByCoordinateResponse) GetPlanet() *Planet {
	if x != nil {
		return x.Planet
	}
	return nil
}

// GetPlanetByID
type GetPlanetByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanetID uint32 `protobuf:"varint,1,opt,name=PlanetID,proto3" json:"PlanetID,omitempty"`
}

func (x *GetPlanetByIDRequest) Reset() {
	*x = GetPlanetByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_planet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlanetByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanetByIDRequest) ProtoMessage() {}

func (x *GetPlanetByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_planet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanetByIDRequest.ProtoReflect.Descriptor instead.
func (*GetPlanetByIDRequest) Descriptor() ([]byte, []int) {
	return file_planet_proto_rawDescGZIP(), []int{3}
}

func (x *GetPlanetByIDRequest) GetPlanetID() uint32 {
	if x != nil {
		return x.PlanetID
	}
	return 0
}

type GetPlanetByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Planet *Planet `protobuf:"bytes,1,opt,name=Planet,proto3" json:"Planet,omitempty"`
}

func (x *GetPlanetByIDResponse) Reset() {
	*x = GetPlanetByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_planet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlanetByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanetByIDResponse) ProtoMessage() {}

func (x *GetPlanetByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_planet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanetByIDResponse.ProtoReflect.Descriptor instead.
func (*GetPlanetByIDResponse) Descriptor() ([]byte, []int) {
	return file_planet_proto_rawDescGZIP(), []int{4}
}

func (x *GetPlanetByIDResponse) GetPlanet() *Planet {
	if x != nil {
		return x.Planet
	}
	return nil
}

// GetPlanetByMapID
type GetPlanetByMapIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapID uint32 `protobuf:"varint,1,opt,name=MapID,proto3" json:"MapID,omitempty"`
}

func (x *GetPlanetByMapIDRequest) Reset() {
	*x = GetPlanetByMapIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_planet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlanetByMapIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanetByMapIDRequest) ProtoMessage() {}

func (x *GetPlanetByMapIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_planet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanetByMapIDRequest.ProtoReflect.Descriptor instead.
func (*GetPlanetByMapIDRequest) Descriptor() ([]byte, []int) {
	return file_planet_proto_rawDescGZIP(), []int{5}
}

func (x *GetPlanetByMapIDRequest) GetMapID() uint32 {
	if x != nil {
		return x.MapID
	}
	return 0
}

type GetPlanetByMapIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Planet *Planet `protobuf:"bytes,1,opt,name=Planet,proto3" json:"Planet,omitempty"`
}

func (x *GetPlanetByMapIDResponse) Reset() {
	*x = GetPlanetByMapIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_planet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlanetByMapIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanetByMapIDResponse) ProtoMessage() {}

func (x *GetPlanetByMapIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_planet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanetByMapIDResponse.ProtoReflect.Descriptor instead.
func (*GetPlanetByMapIDResponse) Descriptor() ([]byte, []int) {
	return file_planet_proto_rawDescGZIP(), []int{6}
}

func (x *GetPlanetByMapIDResponse) GetPlanet() *Planet {
	if x != nil {
		return x.Planet
	}
	return nil
}

var File_planet_proto protoreflect.FileDescriptor

var file_planet_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x1a, 0x0b, 0x62, 0x69, 0x6f, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x61, 0x74, 0x6d, 0x6f, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x6d, 0x61, 0x70, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x13, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x97, 0x04, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x6e, 0x65,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x58, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x01, 0x58, 0x12, 0x0c, 0x0a, 0x01, 0x59, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01,
	0x59, 0x12, 0x0c, 0x0a, 0x01, 0x5a, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x5a, 0x12,
	0x22, 0x0a, 0x0c, 0x48, 0x61, 0x73, 0x68, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x48, 0x61, 0x73, 0x68, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x42, 0x69, 0x6f, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x42, 0x69, 0x6f, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x05, 0x42, 0x69, 0x6f,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x69, 0x6f, 0x6d, 0x65,
	0x2e, 0x42, 0x69, 0x6f, 0x6d, 0x65, 0x52, 0x05, 0x42, 0x69, 0x6f, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x41, 0x74, 0x6d, 0x6f, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x41, 0x74, 0x6d, 0x6f, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x49,
	0x44, 0x12, 0x36, 0x0a, 0x0a, 0x41, 0x74, 0x6d, 0x6f, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x74, 0x6d, 0x6f, 0x73, 0x70, 0x68, 0x65,
	0x72, 0x65, 0x2e, 0x41, 0x74, 0x6d, 0x6f, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x52, 0x0a, 0x41,
	0x74, 0x6d, 0x6f, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x70,
	0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x04, 0x4d, 0x61, 0x70, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x6d, 0x61, 0x70, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x52, 0x04, 0x4d, 0x61, 0x70, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x53, 0x61, 0x66, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x53, 0x61, 0x66,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x6e, 0x65,
	0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x12,
	0x3f, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x5f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x52, 0x0c, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x22, 0x48, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x42, 0x79, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0c, 0x0a, 0x01, 0x58, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x58, 0x12, 0x0c,
	0x0a, 0x01, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x59, 0x12, 0x0c, 0x0a, 0x01,
	0x5a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x5a, 0x22, 0x47, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x50,
	0x6c, 0x61, 0x6e, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x52, 0x06, 0x50, 0x6c, 0x61,
	0x6e, 0x65, 0x74, 0x22, 0x32, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x6c, 0x61, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50,
	0x6c, 0x61, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x22, 0x3f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x26, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74,
	0x52, 0x06, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x22, 0x2f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x65, 0x74, 0x42, 0x79, 0x4d, 0x61, 0x70, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x44, 0x22, 0x42, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x42, 0x79, 0x4d, 0x61, 0x70, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x50,
	0x6c, 0x61, 0x6e, 0x65, 0x74, 0x52, 0x06, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_planet_proto_rawDescOnce sync.Once
	file_planet_proto_rawDescData = file_planet_proto_rawDesc
)

func file_planet_proto_rawDescGZIP() []byte {
	file_planet_proto_rawDescOnce.Do(func() {
		file_planet_proto_rawDescData = protoimpl.X.CompressGZIP(file_planet_proto_rawDescData)
	})
	return file_planet_proto_rawDescData
}

var file_planet_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_planet_proto_goTypes = []interface{}{
	(*Planet)(nil),                        // 0: planet.Planet
	(*GetPlanetByCoordinateRequest)(nil),  // 1: planet.GetPlanetByCoordinateRequest
	(*GetPlanetByCoordinateResponse)(nil), // 2: planet.GetPlanetByCoordinateResponse
	(*GetPlanetByIDRequest)(nil),          // 3: planet.GetPlanetByIDRequest
	(*GetPlanetByIDResponse)(nil),         // 4: planet.GetPlanetByIDResponse
	(*GetPlanetByMapIDRequest)(nil),       // 5: planet.GetPlanetByMapIDRequest
	(*GetPlanetByMapIDResponse)(nil),      // 6: planet.GetPlanetByMapIDResponse
	(*Biome)(nil),                         // 7: biome.Biome
	(*Atmosphere)(nil),                    // 8: atmosphere.Atmosphere
	(*Maps)(nil),                          // 9: maps.Maps
	(*PlanetSystem)(nil),                  // 10: planet_system.PlanetSystem
}
var file_planet_proto_depIdxs = []int32{
	7,  // 0: planet.Planet.Biome:type_name -> biome.Biome
	8,  // 1: planet.Planet.Atmosphere:type_name -> atmosphere.Atmosphere
	9,  // 2: planet.Planet.Maps:type_name -> maps.Maps
	10, // 3: planet.Planet.PlanetSystem:type_name -> planet_system.PlanetSystem
	0,  // 4: planet.GetPlanetByCoordinateResponse.Planet:type_name -> planet.Planet
	0,  // 5: planet.GetPlanetByIDResponse.Planet:type_name -> planet.Planet
	0,  // 6: planet.GetPlanetByMapIDResponse.Planet:type_name -> planet.Planet
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_planet_proto_init() }
func file_planet_proto_init() {
	if File_planet_proto != nil {
		return
	}
	file_biome_proto_init()
	file_atmosphere_proto_init()
	file_maps_proto_init()
	file_planet_system_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_planet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Planet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_planet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlanetByCoordinateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_planet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlanetByCoordinateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_planet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlanetByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_planet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlanetByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_planet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlanetByMapIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_planet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlanetByMapIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_planet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_planet_proto_goTypes,
		DependencyIndexes: file_planet_proto_depIdxs,
		MessageInfos:      file_planet_proto_msgTypes,
	}.Build()
	File_planet_proto = out.File
	file_planet_proto_rawDesc = nil
	file_planet_proto_goTypes = nil
	file_planet_proto_depIdxs = nil
}
