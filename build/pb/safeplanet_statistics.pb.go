// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/safeplanet_statistics.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type BaseStatistics struct {
	Username string `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Result   int64  `protobuf:"varint,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (m *BaseStatistics) Reset()         { *m = BaseStatistics{} }
func (m *BaseStatistics) String() string { return proto.CompactTextString(m) }
func (*BaseStatistics) ProtoMessage()    {}
func (*BaseStatistics) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb3cbe1448b267a4, []int{0}
}
func (m *BaseStatistics) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BaseStatistics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BaseStatistics.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BaseStatistics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseStatistics.Merge(m, src)
}
func (m *BaseStatistics) XXX_Size() int {
	return m.Size()
}
func (m *BaseStatistics) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseStatistics.DiscardUnknown(m)
}

var xxx_messageInfo_BaseStatistics proto.InternalMessageInfo

func (m *BaseStatistics) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *BaseStatistics) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

// StatisticsTopPlayerEnemyKillAll
type StatisticsTopPlayerEnemyKillAllRequest struct {
}

func (m *StatisticsTopPlayerEnemyKillAllRequest) Reset() {
	*m = StatisticsTopPlayerEnemyKillAllRequest{}
}
func (m *StatisticsTopPlayerEnemyKillAllRequest) String() string { return proto.CompactTextString(m) }
func (*StatisticsTopPlayerEnemyKillAllRequest) ProtoMessage()    {}
func (*StatisticsTopPlayerEnemyKillAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb3cbe1448b267a4, []int{1}
}
func (m *StatisticsTopPlayerEnemyKillAllRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatisticsTopPlayerEnemyKillAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatisticsTopPlayerEnemyKillAllRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatisticsTopPlayerEnemyKillAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsTopPlayerEnemyKillAllRequest.Merge(m, src)
}
func (m *StatisticsTopPlayerEnemyKillAllRequest) XXX_Size() int {
	return m.Size()
}
func (m *StatisticsTopPlayerEnemyKillAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsTopPlayerEnemyKillAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsTopPlayerEnemyKillAllRequest proto.InternalMessageInfo

type StatisticsTopPlayerEnemyKillAllResponse struct {
	Results []*BaseStatistics `protobuf:"bytes,1,rep,name=Results,proto3" json:"Results,omitempty"`
}

func (m *StatisticsTopPlayerEnemyKillAllResponse) Reset() {
	*m = StatisticsTopPlayerEnemyKillAllResponse{}
}
func (m *StatisticsTopPlayerEnemyKillAllResponse) String() string { return proto.CompactTextString(m) }
func (*StatisticsTopPlayerEnemyKillAllResponse) ProtoMessage()    {}
func (*StatisticsTopPlayerEnemyKillAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb3cbe1448b267a4, []int{2}
}
func (m *StatisticsTopPlayerEnemyKillAllResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatisticsTopPlayerEnemyKillAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatisticsTopPlayerEnemyKillAllResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatisticsTopPlayerEnemyKillAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsTopPlayerEnemyKillAllResponse.Merge(m, src)
}
func (m *StatisticsTopPlayerEnemyKillAllResponse) XXX_Size() int {
	return m.Size()
}
func (m *StatisticsTopPlayerEnemyKillAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsTopPlayerEnemyKillAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsTopPlayerEnemyKillAllResponse proto.InternalMessageInfo

func (m *StatisticsTopPlayerEnemyKillAllResponse) GetResults() []*BaseStatistics {
	if m != nil {
		return m.Results
	}
	return nil
}

// StatisticsTopPlayerEnemyKill
type StatisticsTopPlayerEnemyKillYouRequest struct {
	PlayerID uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
}

func (m *StatisticsTopPlayerEnemyKillYouRequest) Reset() {
	*m = StatisticsTopPlayerEnemyKillYouRequest{}
}
func (m *StatisticsTopPlayerEnemyKillYouRequest) String() string { return proto.CompactTextString(m) }
func (*StatisticsTopPlayerEnemyKillYouRequest) ProtoMessage()    {}
func (*StatisticsTopPlayerEnemyKillYouRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb3cbe1448b267a4, []int{3}
}
func (m *StatisticsTopPlayerEnemyKillYouRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatisticsTopPlayerEnemyKillYouRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatisticsTopPlayerEnemyKillYouRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatisticsTopPlayerEnemyKillYouRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsTopPlayerEnemyKillYouRequest.Merge(m, src)
}
func (m *StatisticsTopPlayerEnemyKillYouRequest) XXX_Size() int {
	return m.Size()
}
func (m *StatisticsTopPlayerEnemyKillYouRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsTopPlayerEnemyKillYouRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsTopPlayerEnemyKillYouRequest proto.InternalMessageInfo

func (m *StatisticsTopPlayerEnemyKillYouRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

type StatisticsTopPlayerEnemyKillYouResponse struct {
	Result *BaseStatistics `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (m *StatisticsTopPlayerEnemyKillYouResponse) Reset() {
	*m = StatisticsTopPlayerEnemyKillYouResponse{}
}
func (m *StatisticsTopPlayerEnemyKillYouResponse) String() string { return proto.CompactTextString(m) }
func (*StatisticsTopPlayerEnemyKillYouResponse) ProtoMessage()    {}
func (*StatisticsTopPlayerEnemyKillYouResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb3cbe1448b267a4, []int{4}
}
func (m *StatisticsTopPlayerEnemyKillYouResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatisticsTopPlayerEnemyKillYouResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatisticsTopPlayerEnemyKillYouResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatisticsTopPlayerEnemyKillYouResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsTopPlayerEnemyKillYouResponse.Merge(m, src)
}
func (m *StatisticsTopPlayerEnemyKillYouResponse) XXX_Size() int {
	return m.Size()
}
func (m *StatisticsTopPlayerEnemyKillYouResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsTopPlayerEnemyKillYouResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsTopPlayerEnemyKillYouResponse proto.InternalMessageInfo

func (m *StatisticsTopPlayerEnemyKillYouResponse) GetResult() *BaseStatistics {
	if m != nil {
		return m.Result
	}
	return nil
}

// StatisticsTopPlanetExploredAll
type StatisticsTopPlanetExploredAllRequest struct {
}

func (m *StatisticsTopPlanetExploredAllRequest) Reset()         { *m = StatisticsTopPlanetExploredAllRequest{} }
func (m *StatisticsTopPlanetExploredAllRequest) String() string { return proto.CompactTextString(m) }
func (*StatisticsTopPlanetExploredAllRequest) ProtoMessage()    {}
func (*StatisticsTopPlanetExploredAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb3cbe1448b267a4, []int{5}
}
func (m *StatisticsTopPlanetExploredAllRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatisticsTopPlanetExploredAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatisticsTopPlanetExploredAllRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatisticsTopPlanetExploredAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsTopPlanetExploredAllRequest.Merge(m, src)
}
func (m *StatisticsTopPlanetExploredAllRequest) XXX_Size() int {
	return m.Size()
}
func (m *StatisticsTopPlanetExploredAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsTopPlanetExploredAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsTopPlanetExploredAllRequest proto.InternalMessageInfo

type StatisticsTopPlanetExploredAllResponse struct {
	Results []*BaseStatistics `protobuf:"bytes,1,rep,name=Results,proto3" json:"Results,omitempty"`
}

func (m *StatisticsTopPlanetExploredAllResponse) Reset() {
	*m = StatisticsTopPlanetExploredAllResponse{}
}
func (m *StatisticsTopPlanetExploredAllResponse) String() string { return proto.CompactTextString(m) }
func (*StatisticsTopPlanetExploredAllResponse) ProtoMessage()    {}
func (*StatisticsTopPlanetExploredAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb3cbe1448b267a4, []int{6}
}
func (m *StatisticsTopPlanetExploredAllResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatisticsTopPlanetExploredAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatisticsTopPlanetExploredAllResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatisticsTopPlanetExploredAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsTopPlanetExploredAllResponse.Merge(m, src)
}
func (m *StatisticsTopPlanetExploredAllResponse) XXX_Size() int {
	return m.Size()
}
func (m *StatisticsTopPlanetExploredAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsTopPlanetExploredAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsTopPlanetExploredAllResponse proto.InternalMessageInfo

func (m *StatisticsTopPlanetExploredAllResponse) GetResults() []*BaseStatistics {
	if m != nil {
		return m.Results
	}
	return nil
}

// StatisticsTopPlanetExplored
type StatisticsTopPlanetExploredYouRequest struct {
	PlayerID uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
}

func (m *StatisticsTopPlanetExploredYouRequest) Reset()         { *m = StatisticsTopPlanetExploredYouRequest{} }
func (m *StatisticsTopPlanetExploredYouRequest) String() string { return proto.CompactTextString(m) }
func (*StatisticsTopPlanetExploredYouRequest) ProtoMessage()    {}
func (*StatisticsTopPlanetExploredYouRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb3cbe1448b267a4, []int{7}
}
func (m *StatisticsTopPlanetExploredYouRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatisticsTopPlanetExploredYouRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatisticsTopPlanetExploredYouRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatisticsTopPlanetExploredYouRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsTopPlanetExploredYouRequest.Merge(m, src)
}
func (m *StatisticsTopPlanetExploredYouRequest) XXX_Size() int {
	return m.Size()
}
func (m *StatisticsTopPlanetExploredYouRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsTopPlanetExploredYouRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsTopPlanetExploredYouRequest proto.InternalMessageInfo

func (m *StatisticsTopPlanetExploredYouRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

type StatisticsTopPlanetExploredYouResponse struct {
	Result *BaseStatistics `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (m *StatisticsTopPlanetExploredYouResponse) Reset() {
	*m = StatisticsTopPlanetExploredYouResponse{}
}
func (m *StatisticsTopPlanetExploredYouResponse) String() string { return proto.CompactTextString(m) }
func (*StatisticsTopPlanetExploredYouResponse) ProtoMessage()    {}
func (*StatisticsTopPlanetExploredYouResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb3cbe1448b267a4, []int{8}
}
func (m *StatisticsTopPlanetExploredYouResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatisticsTopPlanetExploredYouResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatisticsTopPlanetExploredYouResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatisticsTopPlanetExploredYouResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsTopPlanetExploredYouResponse.Merge(m, src)
}
func (m *StatisticsTopPlanetExploredYouResponse) XXX_Size() int {
	return m.Size()
}
func (m *StatisticsTopPlanetExploredYouResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsTopPlanetExploredYouResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsTopPlanetExploredYouResponse proto.InternalMessageInfo

func (m *StatisticsTopPlanetExploredYouResponse) GetResult() *BaseStatistics {
	if m != nil {
		return m.Result
	}
	return nil
}

// StatisticsTopTravelAll
type StatisticsTopTravelAllRequest struct {
}

func (m *StatisticsTopTravelAllRequest) Reset()         { *m = StatisticsTopTravelAllRequest{} }
func (m *StatisticsTopTravelAllRequest) String() string { return proto.CompactTextString(m) }
func (*StatisticsTopTravelAllRequest) ProtoMessage()    {}
func (*StatisticsTopTravelAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb3cbe1448b267a4, []int{9}
}
func (m *StatisticsTopTravelAllRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatisticsTopTravelAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatisticsTopTravelAllRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatisticsTopTravelAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsTopTravelAllRequest.Merge(m, src)
}
func (m *StatisticsTopTravelAllRequest) XXX_Size() int {
	return m.Size()
}
func (m *StatisticsTopTravelAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsTopTravelAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsTopTravelAllRequest proto.InternalMessageInfo

type StatisticsTopTravelAllResponse struct {
	Results []*BaseStatistics `protobuf:"bytes,1,rep,name=Results,proto3" json:"Results,omitempty"`
}

func (m *StatisticsTopTravelAllResponse) Reset()         { *m = StatisticsTopTravelAllResponse{} }
func (m *StatisticsTopTravelAllResponse) String() string { return proto.CompactTextString(m) }
func (*StatisticsTopTravelAllResponse) ProtoMessage()    {}
func (*StatisticsTopTravelAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb3cbe1448b267a4, []int{10}
}
func (m *StatisticsTopTravelAllResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatisticsTopTravelAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatisticsTopTravelAllResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatisticsTopTravelAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsTopTravelAllResponse.Merge(m, src)
}
func (m *StatisticsTopTravelAllResponse) XXX_Size() int {
	return m.Size()
}
func (m *StatisticsTopTravelAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsTopTravelAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsTopTravelAllResponse proto.InternalMessageInfo

func (m *StatisticsTopTravelAllResponse) GetResults() []*BaseStatistics {
	if m != nil {
		return m.Results
	}
	return nil
}

// StatisticsTopTravel
type StatisticsTopTravelYouRequest struct {
	PlayerID uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
}

func (m *StatisticsTopTravelYouRequest) Reset()         { *m = StatisticsTopTravelYouRequest{} }
func (m *StatisticsTopTravelYouRequest) String() string { return proto.CompactTextString(m) }
func (*StatisticsTopTravelYouRequest) ProtoMessage()    {}
func (*StatisticsTopTravelYouRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb3cbe1448b267a4, []int{11}
}
func (m *StatisticsTopTravelYouRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatisticsTopTravelYouRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatisticsTopTravelYouRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatisticsTopTravelYouRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsTopTravelYouRequest.Merge(m, src)
}
func (m *StatisticsTopTravelYouRequest) XXX_Size() int {
	return m.Size()
}
func (m *StatisticsTopTravelYouRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsTopTravelYouRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsTopTravelYouRequest proto.InternalMessageInfo

func (m *StatisticsTopTravelYouRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

type StatisticsTopTravelYouResponse struct {
	Result *BaseStatistics `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (m *StatisticsTopTravelYouResponse) Reset()         { *m = StatisticsTopTravelYouResponse{} }
func (m *StatisticsTopTravelYouResponse) String() string { return proto.CompactTextString(m) }
func (*StatisticsTopTravelYouResponse) ProtoMessage()    {}
func (*StatisticsTopTravelYouResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb3cbe1448b267a4, []int{12}
}
func (m *StatisticsTopTravelYouResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatisticsTopTravelYouResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatisticsTopTravelYouResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatisticsTopTravelYouResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsTopTravelYouResponse.Merge(m, src)
}
func (m *StatisticsTopTravelYouResponse) XXX_Size() int {
	return m.Size()
}
func (m *StatisticsTopTravelYouResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsTopTravelYouResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsTopTravelYouResponse proto.InternalMessageInfo

func (m *StatisticsTopTravelYouResponse) GetResult() *BaseStatistics {
	if m != nil {
		return m.Result
	}
	return nil
}

// StatisticsTopMissionAll
type StatisticsTopMissionAllRequest struct {
}

func (m *StatisticsTopMissionAllRequest) Reset()         { *m = StatisticsTopMissionAllRequest{} }
func (m *StatisticsTopMissionAllRequest) String() string { return proto.CompactTextString(m) }
func (*StatisticsTopMissionAllRequest) ProtoMessage()    {}
func (*StatisticsTopMissionAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb3cbe1448b267a4, []int{13}
}
func (m *StatisticsTopMissionAllRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatisticsTopMissionAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatisticsTopMissionAllRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatisticsTopMissionAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsTopMissionAllRequest.Merge(m, src)
}
func (m *StatisticsTopMissionAllRequest) XXX_Size() int {
	return m.Size()
}
func (m *StatisticsTopMissionAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsTopMissionAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsTopMissionAllRequest proto.InternalMessageInfo

type StatisticsTopMissionAllResponse struct {
	Results []*BaseStatistics `protobuf:"bytes,1,rep,name=Results,proto3" json:"Results,omitempty"`
}

func (m *StatisticsTopMissionAllResponse) Reset()         { *m = StatisticsTopMissionAllResponse{} }
func (m *StatisticsTopMissionAllResponse) String() string { return proto.CompactTextString(m) }
func (*StatisticsTopMissionAllResponse) ProtoMessage()    {}
func (*StatisticsTopMissionAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb3cbe1448b267a4, []int{14}
}
func (m *StatisticsTopMissionAllResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatisticsTopMissionAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatisticsTopMissionAllResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatisticsTopMissionAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsTopMissionAllResponse.Merge(m, src)
}
func (m *StatisticsTopMissionAllResponse) XXX_Size() int {
	return m.Size()
}
func (m *StatisticsTopMissionAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsTopMissionAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsTopMissionAllResponse proto.InternalMessageInfo

func (m *StatisticsTopMissionAllResponse) GetResults() []*BaseStatistics {
	if m != nil {
		return m.Results
	}
	return nil
}

// StatisticsTopMission
type StatisticsTopMissionYouRequest struct {
	PlayerID uint32 `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
}

func (m *StatisticsTopMissionYouRequest) Reset()         { *m = StatisticsTopMissionYouRequest{} }
func (m *StatisticsTopMissionYouRequest) String() string { return proto.CompactTextString(m) }
func (*StatisticsTopMissionYouRequest) ProtoMessage()    {}
func (*StatisticsTopMissionYouRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb3cbe1448b267a4, []int{15}
}
func (m *StatisticsTopMissionYouRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatisticsTopMissionYouRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatisticsTopMissionYouRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatisticsTopMissionYouRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsTopMissionYouRequest.Merge(m, src)
}
func (m *StatisticsTopMissionYouRequest) XXX_Size() int {
	return m.Size()
}
func (m *StatisticsTopMissionYouRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsTopMissionYouRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsTopMissionYouRequest proto.InternalMessageInfo

func (m *StatisticsTopMissionYouRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

type StatisticsTopMissionYouResponse struct {
	Result *BaseStatistics `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (m *StatisticsTopMissionYouResponse) Reset()         { *m = StatisticsTopMissionYouResponse{} }
func (m *StatisticsTopMissionYouResponse) String() string { return proto.CompactTextString(m) }
func (*StatisticsTopMissionYouResponse) ProtoMessage()    {}
func (*StatisticsTopMissionYouResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb3cbe1448b267a4, []int{16}
}
func (m *StatisticsTopMissionYouResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatisticsTopMissionYouResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatisticsTopMissionYouResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatisticsTopMissionYouResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsTopMissionYouResponse.Merge(m, src)
}
func (m *StatisticsTopMissionYouResponse) XXX_Size() int {
	return m.Size()
}
func (m *StatisticsTopMissionYouResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsTopMissionYouResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsTopMissionYouResponse proto.InternalMessageInfo

func (m *StatisticsTopMissionYouResponse) GetResult() *BaseStatistics {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*BaseStatistics)(nil), "safeplanet_statistics.BaseStatistics")
	proto.RegisterType((*StatisticsTopPlayerEnemyKillAllRequest)(nil), "safeplanet_statistics.StatisticsTopPlayerEnemyKillAllRequest")
	proto.RegisterType((*StatisticsTopPlayerEnemyKillAllResponse)(nil), "safeplanet_statistics.StatisticsTopPlayerEnemyKillAllResponse")
	proto.RegisterType((*StatisticsTopPlayerEnemyKillYouRequest)(nil), "safeplanet_statistics.StatisticsTopPlayerEnemyKillYouRequest")
	proto.RegisterType((*StatisticsTopPlayerEnemyKillYouResponse)(nil), "safeplanet_statistics.StatisticsTopPlayerEnemyKillYouResponse")
	proto.RegisterType((*StatisticsTopPlanetExploredAllRequest)(nil), "safeplanet_statistics.StatisticsTopPlanetExploredAllRequest")
	proto.RegisterType((*StatisticsTopPlanetExploredAllResponse)(nil), "safeplanet_statistics.StatisticsTopPlanetExploredAllResponse")
	proto.RegisterType((*StatisticsTopPlanetExploredYouRequest)(nil), "safeplanet_statistics.StatisticsTopPlanetExploredYouRequest")
	proto.RegisterType((*StatisticsTopPlanetExploredYouResponse)(nil), "safeplanet_statistics.StatisticsTopPlanetExploredYouResponse")
	proto.RegisterType((*StatisticsTopTravelAllRequest)(nil), "safeplanet_statistics.StatisticsTopTravelAllRequest")
	proto.RegisterType((*StatisticsTopTravelAllResponse)(nil), "safeplanet_statistics.StatisticsTopTravelAllResponse")
	proto.RegisterType((*StatisticsTopTravelYouRequest)(nil), "safeplanet_statistics.StatisticsTopTravelYouRequest")
	proto.RegisterType((*StatisticsTopTravelYouResponse)(nil), "safeplanet_statistics.StatisticsTopTravelYouResponse")
	proto.RegisterType((*StatisticsTopMissionAllRequest)(nil), "safeplanet_statistics.StatisticsTopMissionAllRequest")
	proto.RegisterType((*StatisticsTopMissionAllResponse)(nil), "safeplanet_statistics.StatisticsTopMissionAllResponse")
	proto.RegisterType((*StatisticsTopMissionYouRequest)(nil), "safeplanet_statistics.StatisticsTopMissionYouRequest")
	proto.RegisterType((*StatisticsTopMissionYouResponse)(nil), "safeplanet_statistics.StatisticsTopMissionYouResponse")
}

func init() { proto.RegisterFile("proto/safeplanet_statistics.proto", fileDescriptor_bb3cbe1448b267a4) }

var fileDescriptor_bb3cbe1448b267a4 = []byte{
	// 366 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x86, 0x59, 0x31, 0xa8, 0x6b, 0xf4, 0xd0, 0x44, 0x43, 0x4c, 0x5c, 0x6a, 0x13, 0xa4, 0x27,
	0x4c, 0xf4, 0x88, 0xc6, 0x88, 0x70, 0x30, 0xc6, 0xc4, 0x54, 0x3c, 0xe8, 0x05, 0x17, 0x1d, 0xb5,
	0x66, 0xe9, 0xd6, 0xce, 0x62, 0xe4, 0x2d, 0x7c, 0x2c, 0x8f, 0x1c, 0x3d, 0x1a, 0x78, 0x11, 0x43,
	0x81, 0x0a, 0xb5, 0xd4, 0x1e, 0x7a, 0x9c, 0xce, 0x74, 0xe6, 0xfb, 0xbf, 0x34, 0xa5, 0x3b, 0xae,
	0x27, 0x95, 0xdc, 0x43, 0xfe, 0x08, 0xae, 0xe0, 0x0e, 0xa8, 0x26, 0x2a, 0xae, 0x6c, 0x54, 0xf6,
	0x3d, 0x96, 0xfd, 0x9e, 0xb6, 0x11, 0xd9, 0x34, 0x6a, 0x74, 0xbd, 0xca, 0x11, 0xae, 0x82, 0x27,
	0xda, 0x16, 0x5d, 0xbe, 0x46, 0xf0, 0x1c, 0xde, 0x86, 0x3c, 0xd1, 0x89, 0xb9, 0x62, 0x05, 0xb5,
	0xb6, 0x49, 0x73, 0x16, 0x60, 0x47, 0xa8, 0xfc, 0x82, 0x4e, 0xcc, 0xac, 0x35, 0xae, 0x0c, 0x93,
	0xee, 0xfe, 0x6e, 0x68, 0x48, 0xf7, 0x52, 0xf0, 0x2e, 0x78, 0x75, 0x07, 0xda, 0xdd, 0x73, 0x5b,
	0x88, 0x13, 0x21, 0x2c, 0x78, 0xed, 0x00, 0x2a, 0xe3, 0x85, 0x96, 0xfe, 0x9d, 0x44, 0x57, 0x3a,
	0x08, 0xda, 0x31, 0x5d, 0x1a, 0xad, 0xc7, 0x3c, 0xd1, 0xb3, 0xe6, 0xea, 0x7e, 0xb1, 0x1c, 0x1d,
	0x70, 0x36, 0x80, 0x35, 0x79, 0xcb, 0xa8, 0xc5, 0x53, 0xdd, 0xc8, 0xce, 0x98, 0x6a, 0x98, 0x79,
	0xd4, 0x3c, 0xab, 0xf9, 0x99, 0xd7, 0xac, 0xa0, 0x36, 0x9e, 0xe3, 0x89, 0xfd, 0x2d, 0x63, 0xe2,
	0xa3, 0x40, 0xcf, 0x70, 0x49, 0x62, 0xe0, 0x89, 0xc5, 0x12, 0x2d, 0x86, 0x2f, 0x39, 0xa0, 0xea,
	0xef, 0xae, 0x90, 0x1e, 0x3c, 0x4c, 0x49, 0xb4, 0xff, 0x06, 0x0b, 0x0f, 0xa6, 0xe5, 0xf0, 0x34,
	0x96, 0x29, 0xa1, 0xc2, 0xa7, 0x58, 0xde, 0x14, 0x0d, 0x16, 0xe8, 0xf6, 0xcc, 0xa1, 0x86, 0xc7,
	0xdf, 0x60, 0xfa, 0xf3, 0xe3, 0x94, 0xcd, 0x1b, 0x48, 0xcb, 0x58, 0x25, 0x92, 0x21, 0xa1, 0xa9,
	0x66, 0x24, 0x5f, 0x8a, 0x86, 0xf4, 0xd0, 0x81, 0x0b, 0x1b, 0xd1, 0x96, 0xce, 0x94, 0xa2, 0x16,
	0x2d, 0xcc, 0x9d, 0x48, 0xcb, 0xd1, 0x61, 0x34, 0x45, 0x42, 0x49, 0x77, 0xd1, 0x84, 0xe9, 0x59,
	0xaa, 0xb2, 0xcf, 0x3e, 0x23, 0xbd, 0x3e, 0x23, 0xdf, 0x7d, 0x46, 0x3e, 0x06, 0x2c, 0xd3, 0x1b,
	0xb0, 0xcc, 0xd7, 0x80, 0x65, 0x6e, 0x17, 0xcb, 0x15, 0xb7, 0xd5, 0xca, 0xf9, 0xff, 0xd4, 0x83,
	0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6e, 0x07, 0x83, 0xfb, 0x78, 0x05, 0x00, 0x00,
}

func (m *BaseStatistics) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BaseStatistics) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BaseStatistics) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Result != 0 {
		i = encodeVarintSafeplanetStatistics(dAtA, i, uint64(m.Result))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintSafeplanetStatistics(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *StatisticsTopPlayerEnemyKillAllRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatisticsTopPlayerEnemyKillAllRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatisticsTopPlayerEnemyKillAllRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *StatisticsTopPlayerEnemyKillAllResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatisticsTopPlayerEnemyKillAllResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatisticsTopPlayerEnemyKillAllResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Results) > 0 {
		for iNdEx := len(m.Results) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Results[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSafeplanetStatistics(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *StatisticsTopPlayerEnemyKillYouRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatisticsTopPlayerEnemyKillYouRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatisticsTopPlayerEnemyKillYouRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlayerID != 0 {
		i = encodeVarintSafeplanetStatistics(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *StatisticsTopPlayerEnemyKillYouResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatisticsTopPlayerEnemyKillYouResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatisticsTopPlayerEnemyKillYouResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSafeplanetStatistics(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *StatisticsTopPlanetExploredAllRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatisticsTopPlanetExploredAllRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatisticsTopPlanetExploredAllRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *StatisticsTopPlanetExploredAllResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatisticsTopPlanetExploredAllResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatisticsTopPlanetExploredAllResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Results) > 0 {
		for iNdEx := len(m.Results) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Results[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSafeplanetStatistics(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *StatisticsTopPlanetExploredYouRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatisticsTopPlanetExploredYouRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatisticsTopPlanetExploredYouRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlayerID != 0 {
		i = encodeVarintSafeplanetStatistics(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *StatisticsTopPlanetExploredYouResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatisticsTopPlanetExploredYouResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatisticsTopPlanetExploredYouResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSafeplanetStatistics(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *StatisticsTopTravelAllRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatisticsTopTravelAllRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatisticsTopTravelAllRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *StatisticsTopTravelAllResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatisticsTopTravelAllResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatisticsTopTravelAllResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Results) > 0 {
		for iNdEx := len(m.Results) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Results[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSafeplanetStatistics(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *StatisticsTopTravelYouRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatisticsTopTravelYouRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatisticsTopTravelYouRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlayerID != 0 {
		i = encodeVarintSafeplanetStatistics(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *StatisticsTopTravelYouResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatisticsTopTravelYouResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatisticsTopTravelYouResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSafeplanetStatistics(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *StatisticsTopMissionAllRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatisticsTopMissionAllRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatisticsTopMissionAllRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *StatisticsTopMissionAllResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatisticsTopMissionAllResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatisticsTopMissionAllResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Results) > 0 {
		for iNdEx := len(m.Results) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Results[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSafeplanetStatistics(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *StatisticsTopMissionYouRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatisticsTopMissionYouRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatisticsTopMissionYouRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlayerID != 0 {
		i = encodeVarintSafeplanetStatistics(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *StatisticsTopMissionYouResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatisticsTopMissionYouResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatisticsTopMissionYouResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSafeplanetStatistics(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintSafeplanetStatistics(dAtA []byte, offset int, v uint64) int {
	offset -= sovSafeplanetStatistics(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *BaseStatistics) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovSafeplanetStatistics(uint64(l))
	}
	if m.Result != 0 {
		n += 1 + sovSafeplanetStatistics(uint64(m.Result))
	}
	return n
}

func (m *StatisticsTopPlayerEnemyKillAllRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *StatisticsTopPlayerEnemyKillAllResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Results) > 0 {
		for _, e := range m.Results {
			l = e.Size()
			n += 1 + l + sovSafeplanetStatistics(uint64(l))
		}
	}
	return n
}

func (m *StatisticsTopPlayerEnemyKillYouRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovSafeplanetStatistics(uint64(m.PlayerID))
	}
	return n
}

func (m *StatisticsTopPlayerEnemyKillYouResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovSafeplanetStatistics(uint64(l))
	}
	return n
}

func (m *StatisticsTopPlanetExploredAllRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *StatisticsTopPlanetExploredAllResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Results) > 0 {
		for _, e := range m.Results {
			l = e.Size()
			n += 1 + l + sovSafeplanetStatistics(uint64(l))
		}
	}
	return n
}

func (m *StatisticsTopPlanetExploredYouRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovSafeplanetStatistics(uint64(m.PlayerID))
	}
	return n
}

func (m *StatisticsTopPlanetExploredYouResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovSafeplanetStatistics(uint64(l))
	}
	return n
}

func (m *StatisticsTopTravelAllRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *StatisticsTopTravelAllResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Results) > 0 {
		for _, e := range m.Results {
			l = e.Size()
			n += 1 + l + sovSafeplanetStatistics(uint64(l))
		}
	}
	return n
}

func (m *StatisticsTopTravelYouRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovSafeplanetStatistics(uint64(m.PlayerID))
	}
	return n
}

func (m *StatisticsTopTravelYouResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovSafeplanetStatistics(uint64(l))
	}
	return n
}

func (m *StatisticsTopMissionAllRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *StatisticsTopMissionAllResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Results) > 0 {
		for _, e := range m.Results {
			l = e.Size()
			n += 1 + l + sovSafeplanetStatistics(uint64(l))
		}
	}
	return n
}

func (m *StatisticsTopMissionYouRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovSafeplanetStatistics(uint64(m.PlayerID))
	}
	return n
}

func (m *StatisticsTopMissionYouResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovSafeplanetStatistics(uint64(l))
	}
	return n
}

func sovSafeplanetStatistics(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSafeplanetStatistics(x uint64) (n int) {
	return sovSafeplanetStatistics(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *BaseStatistics) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetStatistics
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BaseStatistics: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BaseStatistics: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			m.Result = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Result |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetStatistics(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatisticsTopPlayerEnemyKillAllRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetStatistics
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatisticsTopPlayerEnemyKillAllRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatisticsTopPlayerEnemyKillAllRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetStatistics(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatisticsTopPlayerEnemyKillAllResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetStatistics
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatisticsTopPlayerEnemyKillAllResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatisticsTopPlayerEnemyKillAllResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Results", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Results = append(m.Results, &BaseStatistics{})
			if err := m.Results[len(m.Results)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetStatistics(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatisticsTopPlayerEnemyKillYouRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetStatistics
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatisticsTopPlayerEnemyKillYouRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatisticsTopPlayerEnemyKillYouRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetStatistics(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatisticsTopPlayerEnemyKillYouResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetStatistics
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatisticsTopPlayerEnemyKillYouResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatisticsTopPlayerEnemyKillYouResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &BaseStatistics{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetStatistics(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatisticsTopPlanetExploredAllRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetStatistics
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatisticsTopPlanetExploredAllRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatisticsTopPlanetExploredAllRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetStatistics(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatisticsTopPlanetExploredAllResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetStatistics
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatisticsTopPlanetExploredAllResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatisticsTopPlanetExploredAllResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Results", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Results = append(m.Results, &BaseStatistics{})
			if err := m.Results[len(m.Results)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetStatistics(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatisticsTopPlanetExploredYouRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetStatistics
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatisticsTopPlanetExploredYouRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatisticsTopPlanetExploredYouRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetStatistics(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatisticsTopPlanetExploredYouResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetStatistics
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatisticsTopPlanetExploredYouResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatisticsTopPlanetExploredYouResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &BaseStatistics{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetStatistics(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatisticsTopTravelAllRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetStatistics
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatisticsTopTravelAllRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatisticsTopTravelAllRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetStatistics(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatisticsTopTravelAllResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetStatistics
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatisticsTopTravelAllResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatisticsTopTravelAllResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Results", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Results = append(m.Results, &BaseStatistics{})
			if err := m.Results[len(m.Results)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetStatistics(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatisticsTopTravelYouRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetStatistics
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatisticsTopTravelYouRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatisticsTopTravelYouRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetStatistics(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatisticsTopTravelYouResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetStatistics
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatisticsTopTravelYouResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatisticsTopTravelYouResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &BaseStatistics{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetStatistics(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatisticsTopMissionAllRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetStatistics
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatisticsTopMissionAllRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatisticsTopMissionAllRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetStatistics(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatisticsTopMissionAllResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetStatistics
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatisticsTopMissionAllResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatisticsTopMissionAllResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Results", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Results = append(m.Results, &BaseStatistics{})
			if err := m.Results[len(m.Results)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetStatistics(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatisticsTopMissionYouRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetStatistics
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatisticsTopMissionYouRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatisticsTopMissionYouRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetStatistics(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatisticsTopMissionYouResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetStatistics
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatisticsTopMissionYouResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatisticsTopMissionYouResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &BaseStatistics{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetStatistics(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetStatistics
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSafeplanetStatistics(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSafeplanetStatistics
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSafeplanetStatistics
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSafeplanetStatistics
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSafeplanetStatistics
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSafeplanetStatistics
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSafeplanetStatistics
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSafeplanetStatistics        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSafeplanetStatistics          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSafeplanetStatistics = fmt.Errorf("proto: unexpected end of group")
)
