// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/safeplanet_research.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Research
type Research struct {
	ID                   uint32   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	DonationRarityID     uint32   `protobuf:"varint,2,opt,name=DonationRarityID,proto3" json:"DonationRarityID,omitempty"`
	Rarity               *Rarity  `protobuf:"bytes,3,opt,name=Rarity,proto3" json:"Rarity,omitempty"`
	DonationCap          int32    `protobuf:"varint,4,opt,name=DonationCap,proto3" json:"DonationCap,omitempty"`
	Enabled              bool     `protobuf:"varint,5,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	Completed            bool     `protobuf:"varint,6,opt,name=Completed,proto3" json:"Completed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Research) Reset()         { *m = Research{} }
func (m *Research) String() string { return proto.CompactTextString(m) }
func (*Research) ProtoMessage()    {}
func (*Research) Descriptor() ([]byte, []int) {
	return fileDescriptor_3878349be8001a24, []int{0}
}
func (m *Research) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Research) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Research.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Research) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Research.Merge(m, src)
}
func (m *Research) XXX_Size() int {
	return m.Size()
}
func (m *Research) XXX_DiscardUnknown() {
	xxx_messageInfo_Research.DiscardUnknown(m)
}

var xxx_messageInfo_Research proto.InternalMessageInfo

func (m *Research) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Research) GetDonationRarityID() uint32 {
	if m != nil {
		return m.DonationRarityID
	}
	return 0
}

func (m *Research) GetRarity() *Rarity {
	if m != nil {
		return m.Rarity
	}
	return nil
}

func (m *Research) GetDonationCap() int32 {
	if m != nil {
		return m.DonationCap
	}
	return 0
}

func (m *Research) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Research) GetCompleted() bool {
	if m != nil {
		return m.Completed
	}
	return false
}

// GetRecapActiveResearch
type GetRecapActiveResearchRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecapActiveResearchRequest) Reset()         { *m = GetRecapActiveResearchRequest{} }
func (m *GetRecapActiveResearchRequest) String() string { return proto.CompactTextString(m) }
func (*GetRecapActiveResearchRequest) ProtoMessage()    {}
func (*GetRecapActiveResearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3878349be8001a24, []int{1}
}
func (m *GetRecapActiveResearchRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetRecapActiveResearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetRecapActiveResearchRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetRecapActiveResearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecapActiveResearchRequest.Merge(m, src)
}
func (m *GetRecapActiveResearchRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetRecapActiveResearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecapActiveResearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecapActiveResearchRequest proto.InternalMessageInfo

type GetRecapActiveResearchResponse struct {
	Research                *Research `protobuf:"bytes,1,opt,name=Research,proto3" json:"Research,omitempty"`
	MissingResourcesCounter int32     `protobuf:"varint,2,opt,name=MissingResourcesCounter,proto3" json:"MissingResourcesCounter,omitempty"`
	DonatedResourcesCounter int32     `protobuf:"varint,3,opt,name=DonatedResourcesCounter,proto3" json:"DonatedResourcesCounter,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}  `json:"-"`
	XXX_unrecognized        []byte    `json:"-"`
	XXX_sizecache           int32     `json:"-"`
}

func (m *GetRecapActiveResearchResponse) Reset()         { *m = GetRecapActiveResearchResponse{} }
func (m *GetRecapActiveResearchResponse) String() string { return proto.CompactTextString(m) }
func (*GetRecapActiveResearchResponse) ProtoMessage()    {}
func (*GetRecapActiveResearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3878349be8001a24, []int{2}
}
func (m *GetRecapActiveResearchResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetRecapActiveResearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetRecapActiveResearchResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetRecapActiveResearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecapActiveResearchResponse.Merge(m, src)
}
func (m *GetRecapActiveResearchResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetRecapActiveResearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecapActiveResearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecapActiveResearchResponse proto.InternalMessageInfo

func (m *GetRecapActiveResearchResponse) GetResearch() *Research {
	if m != nil {
		return m.Research
	}
	return nil
}

func (m *GetRecapActiveResearchResponse) GetMissingResourcesCounter() int32 {
	if m != nil {
		return m.MissingResourcesCounter
	}
	return 0
}

func (m *GetRecapActiveResearchResponse) GetDonatedResourcesCounter() int32 {
	if m != nil {
		return m.DonatedResourcesCounter
	}
	return 0
}

// ResearchDonation
type ResearchDonationRequest struct {
	PlayerID             uint32   `protobuf:"varint,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
	ResourceID           uint32   `protobuf:"varint,2,opt,name=ResourceID,proto3" json:"ResourceID,omitempty"`
	Quantity             int32    `protobuf:"varint,3,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResearchDonationRequest) Reset()         { *m = ResearchDonationRequest{} }
func (m *ResearchDonationRequest) String() string { return proto.CompactTextString(m) }
func (*ResearchDonationRequest) ProtoMessage()    {}
func (*ResearchDonationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3878349be8001a24, []int{3}
}
func (m *ResearchDonationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResearchDonationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResearchDonationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResearchDonationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResearchDonationRequest.Merge(m, src)
}
func (m *ResearchDonationRequest) XXX_Size() int {
	return m.Size()
}
func (m *ResearchDonationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResearchDonationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResearchDonationRequest proto.InternalMessageInfo

func (m *ResearchDonationRequest) GetPlayerID() uint32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

func (m *ResearchDonationRequest) GetResourceID() uint32 {
	if m != nil {
		return m.ResourceID
	}
	return 0
}

func (m *ResearchDonationRequest) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

type ResearchDonationResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResearchDonationResponse) Reset()         { *m = ResearchDonationResponse{} }
func (m *ResearchDonationResponse) String() string { return proto.CompactTextString(m) }
func (*ResearchDonationResponse) ProtoMessage()    {}
func (*ResearchDonationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3878349be8001a24, []int{4}
}
func (m *ResearchDonationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResearchDonationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResearchDonationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResearchDonationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResearchDonationResponse.Merge(m, src)
}
func (m *ResearchDonationResponse) XXX_Size() int {
	return m.Size()
}
func (m *ResearchDonationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResearchDonationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResearchDonationResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Research)(nil), "safeplanet_research.Research")
	proto.RegisterType((*GetRecapActiveResearchRequest)(nil), "safeplanet_research.GetRecapActiveResearchRequest")
	proto.RegisterType((*GetRecapActiveResearchResponse)(nil), "safeplanet_research.GetRecapActiveResearchResponse")
	proto.RegisterType((*ResearchDonationRequest)(nil), "safeplanet_research.ResearchDonationRequest")
	proto.RegisterType((*ResearchDonationResponse)(nil), "safeplanet_research.ResearchDonationResponse")
}

func init() { proto.RegisterFile("proto/safeplanet_research.proto", fileDescriptor_3878349be8001a24) }

var fileDescriptor_3878349be8001a24 = []byte{
	// 366 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xc1, 0x6e, 0xda, 0x40,
	0x10, 0x86, 0xb5, 0x80, 0x29, 0x1d, 0x54, 0x54, 0x6d, 0x0f, 0xac, 0x50, 0x31, 0x96, 0x0f, 0x95,
	0xd5, 0x83, 0x2b, 0xd1, 0x4b, 0xab, 0x9e, 0x5a, 0x5c, 0x55, 0x1c, 0x2a, 0x25, 0x7b, 0xcc, 0x25,
	0x5a, 0xcc, 0x24, 0xb1, 0xe4, 0xec, 0x9a, 0xdd, 0x75, 0x24, 0xde, 0x90, 0x5b, 0xf2, 0x08, 0x11,
	0x4f, 0x12, 0xb1, 0xc6, 0x06, 0x09, 0xb8, 0x79, 0xfe, 0x7f, 0x3e, 0x8f, 0xe6, 0x9f, 0x85, 0x49,
	0xa1, 0x95, 0x55, 0xdf, 0x8c, 0xb8, 0xc3, 0x22, 0x17, 0x12, 0xed, 0xad, 0x46, 0x83, 0x42, 0xa7,
	0x0f, 0xb1, 0x73, 0xe8, 0xa7, 0x33, 0xd6, 0x88, 0x56, 0x94, 0x16, 0x3a, 0xb3, 0xeb, 0xaa, 0x31,
	0xdc, 0x10, 0xe8, 0xf1, 0x7d, 0x03, 0x1d, 0x40, 0x6b, 0x9e, 0x30, 0x12, 0x90, 0xe8, 0x03, 0x6f,
	0xcd, 0x13, 0xfa, 0x15, 0x3e, 0x26, 0x4a, 0x0a, 0x9b, 0x29, 0xc9, 0x1d, 0x34, 0x4f, 0x58, 0xcb,
	0xb9, 0x27, 0x3a, 0xfd, 0x02, 0xdd, 0xea, 0x9b, 0xb5, 0x03, 0x12, 0xf5, 0xa7, 0x83, 0x78, 0x3f,
	0xa7, 0x52, 0xf9, 0xde, 0xa5, 0x01, 0xf4, 0x6b, 0x76, 0x26, 0x0a, 0xd6, 0x09, 0x48, 0xe4, 0xf1,
	0x63, 0x89, 0x32, 0x78, 0xf7, 0x57, 0x8a, 0x45, 0x8e, 0x4b, 0xe6, 0x05, 0x24, 0xea, 0xf1, 0xba,
	0xa4, 0x9f, 0xe1, 0xfd, 0x4c, 0x3d, 0x16, 0x39, 0x5a, 0x5c, 0xb2, 0xae, 0xf3, 0x0e, 0x42, 0x38,
	0x81, 0xf1, 0x3f, 0xb4, 0x1c, 0x53, 0x51, 0xfc, 0x4e, 0x6d, 0xf6, 0x84, 0xf5, 0x5e, 0x1c, 0x57,
	0x25, 0x1a, 0x1b, 0x3e, 0x13, 0xf0, 0x2f, 0x75, 0x98, 0x42, 0x49, 0x83, 0xf4, 0xe7, 0x21, 0x0d,
	0x97, 0x43, 0x7f, 0x3a, 0x8e, 0xcf, 0xa5, 0xdc, 0x80, 0x87, 0xf0, 0x7e, 0xc0, 0xf0, 0x7f, 0x66,
	0x4c, 0x26, 0xef, 0x39, 0x1a, 0x55, 0xea, 0x14, 0xcd, 0x4c, 0x95, 0xd2, 0xa2, 0x76, 0x99, 0x79,
	0xfc, 0x92, 0xbd, 0x23, 0xdd, 0xfe, 0xb8, 0x3c, 0x21, 0xdb, 0x15, 0x79, 0xc1, 0x0e, 0x57, 0x30,
	0xac, 0xe7, 0x37, 0x07, 0xa9, 0x96, 0xa5, 0x23, 0xe8, 0x5d, 0xe5, 0x62, 0x8d, 0xba, 0xb9, 0x68,
	0x53, 0x53, 0x1f, 0xa0, 0xfe, 0x55, 0x73, 0xd1, 0x23, 0x65, 0xc7, 0x5e, 0x97, 0x42, 0xda, 0xfa,
	0x9a, 0x1e, 0x6f, 0xea, 0x70, 0x04, 0xec, 0x74, 0x64, 0x95, 0xde, 0x1f, 0xba, 0xd9, 0xfa, 0xe4,
	0x65, 0xeb, 0x93, 0xd7, 0xad, 0x4f, 0x6e, 0x3a, 0xf1, 0xaf, 0x62, 0xb1, 0xe8, 0xba, 0x77, 0xf6,
	0xfd, 0x2d, 0x00, 0x00, 0xff, 0xff, 0x78, 0x9e, 0x9a, 0xfa, 0xb3, 0x02, 0x00, 0x00,
}

func (m *Research) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Research) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Research) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Completed {
		i--
		if m.Completed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Enabled {
		i--
		if m.Enabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.DonationCap != 0 {
		i = encodeVarintSafeplanetResearch(dAtA, i, uint64(m.DonationCap))
		i--
		dAtA[i] = 0x20
	}
	if m.Rarity != nil {
		{
			size, err := m.Rarity.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSafeplanetResearch(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.DonationRarityID != 0 {
		i = encodeVarintSafeplanetResearch(dAtA, i, uint64(m.DonationRarityID))
		i--
		dAtA[i] = 0x10
	}
	if m.ID != 0 {
		i = encodeVarintSafeplanetResearch(dAtA, i, uint64(m.ID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetRecapActiveResearchRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetRecapActiveResearchRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetRecapActiveResearchRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GetRecapActiveResearchResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetRecapActiveResearchResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetRecapActiveResearchResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DonatedResourcesCounter != 0 {
		i = encodeVarintSafeplanetResearch(dAtA, i, uint64(m.DonatedResourcesCounter))
		i--
		dAtA[i] = 0x18
	}
	if m.MissingResourcesCounter != 0 {
		i = encodeVarintSafeplanetResearch(dAtA, i, uint64(m.MissingResourcesCounter))
		i--
		dAtA[i] = 0x10
	}
	if m.Research != nil {
		{
			size, err := m.Research.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSafeplanetResearch(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ResearchDonationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResearchDonationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResearchDonationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Quantity != 0 {
		i = encodeVarintSafeplanetResearch(dAtA, i, uint64(m.Quantity))
		i--
		dAtA[i] = 0x18
	}
	if m.ResourceID != 0 {
		i = encodeVarintSafeplanetResearch(dAtA, i, uint64(m.ResourceID))
		i--
		dAtA[i] = 0x10
	}
	if m.PlayerID != 0 {
		i = encodeVarintSafeplanetResearch(dAtA, i, uint64(m.PlayerID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ResearchDonationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResearchDonationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResearchDonationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func encodeVarintSafeplanetResearch(dAtA []byte, offset int, v uint64) int {
	offset -= sovSafeplanetResearch(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Research) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ID != 0 {
		n += 1 + sovSafeplanetResearch(uint64(m.ID))
	}
	if m.DonationRarityID != 0 {
		n += 1 + sovSafeplanetResearch(uint64(m.DonationRarityID))
	}
	if m.Rarity != nil {
		l = m.Rarity.Size()
		n += 1 + l + sovSafeplanetResearch(uint64(l))
	}
	if m.DonationCap != 0 {
		n += 1 + sovSafeplanetResearch(uint64(m.DonationCap))
	}
	if m.Enabled {
		n += 2
	}
	if m.Completed {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetRecapActiveResearchRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetRecapActiveResearchResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Research != nil {
		l = m.Research.Size()
		n += 1 + l + sovSafeplanetResearch(uint64(l))
	}
	if m.MissingResourcesCounter != 0 {
		n += 1 + sovSafeplanetResearch(uint64(m.MissingResourcesCounter))
	}
	if m.DonatedResourcesCounter != 0 {
		n += 1 + sovSafeplanetResearch(uint64(m.DonatedResourcesCounter))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ResearchDonationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerID != 0 {
		n += 1 + sovSafeplanetResearch(uint64(m.PlayerID))
	}
	if m.ResourceID != 0 {
		n += 1 + sovSafeplanetResearch(uint64(m.ResourceID))
	}
	if m.Quantity != 0 {
		n += 1 + sovSafeplanetResearch(uint64(m.Quantity))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ResearchDonationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovSafeplanetResearch(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSafeplanetResearch(x uint64) (n int) {
	return sovSafeplanetResearch(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Research) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetResearch
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Research: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Research: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetResearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DonationRarityID", wireType)
			}
			m.DonationRarityID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetResearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DonationRarityID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rarity", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetResearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSafeplanetResearch
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSafeplanetResearch
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Rarity == nil {
				m.Rarity = &Rarity{}
			}
			if err := m.Rarity.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DonationCap", wireType)
			}
			m.DonationCap = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetResearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DonationCap |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetResearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Enabled = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Completed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetResearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Completed = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetResearch(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetResearch
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetResearch
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetRecapActiveResearchRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetResearch
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetRecapActiveResearchRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetRecapActiveResearchRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetResearch(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetResearch
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetResearch
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetRecapActiveResearchResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetResearch
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetRecapActiveResearchResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetRecapActiveResearchResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Research", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetResearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSafeplanetResearch
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSafeplanetResearch
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Research == nil {
				m.Research = &Research{}
			}
			if err := m.Research.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MissingResourcesCounter", wireType)
			}
			m.MissingResourcesCounter = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetResearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MissingResourcesCounter |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DonatedResourcesCounter", wireType)
			}
			m.DonatedResourcesCounter = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetResearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DonatedResourcesCounter |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetResearch(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetResearch
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetResearch
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResearchDonationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetResearch
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResearchDonationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResearchDonationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerID", wireType)
			}
			m.PlayerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetResearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceID", wireType)
			}
			m.ResourceID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetResearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResourceID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Quantity", wireType)
			}
			m.Quantity = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSafeplanetResearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Quantity |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetResearch(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetResearch
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetResearch
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResearchDonationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSafeplanetResearch
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResearchDonationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResearchDonationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipSafeplanetResearch(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSafeplanetResearch
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSafeplanetResearch
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSafeplanetResearch(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSafeplanetResearch
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSafeplanetResearch
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSafeplanetResearch
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSafeplanetResearch
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSafeplanetResearch
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSafeplanetResearch
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSafeplanetResearch        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSafeplanetResearch          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSafeplanetResearch = fmt.Errorf("proto: unexpected end of group")
)
